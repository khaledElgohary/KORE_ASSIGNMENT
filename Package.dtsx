<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="7/27/2024 11:47:25 PM"
  DTS:CreationName="Microsoft.Package"
  DTS:CreatorComputerName="KHALED"
  DTS:CreatorName="KHALED\khale"
  DTS:DTSID="{C6789880-729D-4D68-B4B7-DC8AC588A42A}"
  DTS:ExecutableType="Microsoft.Package"
  DTS:LastModifiedProductVersion="16.0.5556.0"
  DTS:LocaleID="4105"
  DTS:ObjectName="Package"
  DTS:PackageType="5"
  DTS:VersionBuild="488"
  DTS:VersionGUID="{E65CB25B-8036-499B-AB1C-F8AC4601986D}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">8</DTS:Property>
  <DTS:ConnectionManagers>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[CSV File Connection Manager]"
      DTS:CreationName="FLATFILE"
      DTS:DTSID="{908B091A-4FF8-4F79-8802-CD374C184AB8}"
      DTS:ObjectName="CSV File Connection Manager">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:Format="Delimited"
          DTS:LocaleID="4105"
          DTS:HeaderRowDelimiter="_x000D__x000A_"
          DTS:ColumnNamesInFirstDataRow="True"
          DTS:RowDelimiter=""
          DTS:TextQualifier="_x003C_none_x003E_"
          DTS:CodePage="1252"
          DTS:ConnectionString="C:\Users\khale\Desktop\Kore MINT  TECH interview\KORE_ASSIGNMENT\KORE_DataCSV.csv">
          <DTS:FlatFileColumns>
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName=" UserID"
              DTS:DTSID="{41869F99-6D64-41E7-9A6B-C4D03EA13F97}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="FullName"
              DTS:DTSID="{506E83B4-BE67-4ED1-9B92-B1496EEE3E0E}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="Age"
              DTS:DTSID="{CBCCB227-23C1-4A04-807B-9A57447CB3B4}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="Email"
              DTS:DTSID="{2597E71F-E1A6-4005-BE7C-C84A605ECE8B}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="RegistrationDate"
              DTS:DTSID="{FE792581-109F-4D12-B6DD-57EA053FC4D2}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="LastLoginDate"
              DTS:DTSID="{DFE50093-258F-4432-980C-43DE42D51D33}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x000D__x000A_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="PurchaseTotal"
              DTS:DTSID="{52EEFB34-127D-4255-8FAA-C25D9DA906C4}"
              DTS:CreationName="" />
          </DTS:FlatFileColumns>
        </DTS:ConnectionManager>
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[DB_Backup]"
      DTS:CreationName="ADO.NET:SQL"
      DTS:DTSID="{C5D4EE4A-AFE8-4785-A7DA-3EBE32BB1CDA}"
      DTS:ObjectName="DB_Backup">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectionString="Data Source=KHALED;Integrated Security=SSPI;Connect Timeout=30;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[Flat File Connection Manager]"
      DTS:CreationName="FLATFILE"
      DTS:DTSID="{C65C18D8-8DCA-4595-9552-1903F4009CC3}"
      DTS:ObjectName="Flat File Connection Manager">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:Format="Delimited"
          DTS:LocaleID="4105"
          DTS:HeaderRowDelimiter="_x000D__x000A_"
          DTS:ColumnNamesInFirstDataRow="True"
          DTS:RowDelimiter=""
          DTS:TextQualifier="_x003C_none_x003E_"
          DTS:CodePage="1252"
          DTS:ConnectionString="C:\Users\khale\Desktop\Kore MINT  TECH interview\KORE_ASSIGNMENT\Send_for_review.csv">
          <DTS:FlatFileColumns>
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName=" UserID"
              DTS:DTSID="{BE89C0DB-A79D-4AE5-90A2-E76817E09F1C}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="FullName"
              DTS:DTSID="{09A3E740-B207-430C-91BF-C7A60D533CD7}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="Age"
              DTS:DTSID="{95D121DB-C983-44DB-B377-6D962FB78539}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="Email"
              DTS:DTSID="{EDA3CC22-1C42-4E71-90E3-6CF2AEE3F50A}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="RegistrationDate"
              DTS:DTSID="{E2D3A26F-03B2-4FD2-B152-58CFF2B3B37C}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="LastLoginDate"
              DTS:DTSID="{763F0B86-EDBA-49DC-8967-0A899EFE299F}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x000D__x000A_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="PurchaseTotal"
              DTS:DTSID="{AE593F65-6E2E-4119-94DE-DE3D2EA1A675}"
              DTS:CreationName="" />
          </DTS:FlatFileColumns>
        </DTS:ConnectionManager>
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[Flat File Connection Manager 1]"
      DTS:CreationName="FLATFILE"
      DTS:DTSID="{2F45EC5B-7AAC-411B-BD5F-93041A2194FA}"
      DTS:ObjectName="Flat File Connection Manager 1">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:Format="Delimited"
          DTS:LocaleID="4105"
          DTS:HeaderRowDelimiter="_x000D__x000A_"
          DTS:ColumnNamesInFirstDataRow="True"
          DTS:RowDelimiter=""
          DTS:TextQualifier="_x003C_none_x003E_"
          DTS:CodePage="1252"
          DTS:ConnectionString="C:\Users\khale\Desktop\Kore MINT  TECH interview\KORE_ASSIGNMENT\Send_for_review.csv">
          <DTS:FlatFileColumns>
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="FullName"
              DTS:DTSID="{12282D45-E811-4E1D-8502-FA95CD30DBC0}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="PurchaseTotal"
              DTS:DTSID="{A9061ED3-B7B6-487A-8EDF-832490E7DF3A}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="130"
              DTS:TextQualified="True"
              DTS:ObjectName="RegistrationDate_str"
              DTS:DTSID="{2C8A9D21-0D0A-4F3D-8F54-D9F5D553AE94}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="130"
              DTS:TextQualified="True"
              DTS:ObjectName="LastLoginDate_str"
              DTS:DTSID="{A825E737-3890-4503-AFD4-857260079F25}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="10"
              DTS:DataType="130"
              DTS:TextQualified="True"
              DTS:ObjectName="RegistrationDate_stg"
              DTS:DTSID="{14B45507-620F-45BC-BFA1-4229DA0B6332}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="10"
              DTS:DataType="130"
              DTS:TextQualified="True"
              DTS:ObjectName="LastLoginDate_stg"
              DTS:DTSID="{65875694-68F7-4512-AD33-82F6EFA68DE2}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="47"
              DTS:DataType="130"
              DTS:TextQualified="True"
              DTS:ObjectName="UserID_stg"
              DTS:DTSID="{1E45BC94-CA6A-4700-BC58-ADA40F76B15D}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="130"
              DTS:TextQualified="True"
              DTS:ObjectName="Email_stg"
              DTS:DTSID="{4E38C4AE-22DE-43A4-9ABB-81D51F5609A1}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x000D__x000A_"
              DTS:DataType="16"
              DTS:TextQualified="True"
              DTS:ObjectName="Age_stg"
              DTS:DTSID="{A46F899D-12C3-474F-A332-B3F2A38A2361}"
              DTS:CreationName="" />
          </DTS:FlatFileColumns>
        </DTS:ConnectionManager>
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[KHALED.KoreAssignment_{Khaled_Elgohary\}]"
      DTS:CreationName="OLEDB"
      DTS:DTSID="{C599B812-7599-4409-B1B6-CD2ACD807D07}"
      DTS:ObjectName="KHALED.KoreAssignment_{Khaled_Elgohary}">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectRetryCount="1"
          DTS:ConnectRetryInterval="5"
          DTS:ConnectionString="Data Source=KHALED;Initial Catalog=KoreAssignment_{Khaled_Elgohary};Provider=MSOLEDBSQL.1;Integrated Security=SSPI;Auto Translate=False;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[KHALED.SSIS]"
      DTS:CreationName="OLEDB"
      DTS:DTSID="{F90A11D9-4816-4EF5-8A4C-43B89A6A35AB}"
      DTS:ObjectName="KHALED.SSIS">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectRetryCount="1"
          DTS:ConnectRetryInterval="5"
          DTS:ConnectionString="Data Source=KHALED;Initial Catalog=SSIS;Provider=SQLOLEDB.1;Integrated Security=SSPI;Application Name=SSIS-Package-{F90A11D9-4816-4EF5-8A4C-43B89A6A35AB}KHALED.SSIS;Auto Translate=False;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
  </DTS:ConnectionManagers>
  <DTS:Variables>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{0230F1BA-25DD-4130-909B-491C2D7F5964}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="AVERAGE">
      <DTS:VariableValue
        DTS:DataType="14">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{9F277D20-0771-4650-BA6D-1C2F7BA17A5A}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="SUM">
      <DTS:VariableValue
        DTS:DataType="14">0</DTS:VariableValue>
    </DTS:Variable>
  </DTS:Variables>
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\Back Up Database Task"
      DTS:CreationName="Microsoft.DbMaintenanceBackupTask"
      DTS:Description="Back Up Database Task"
      DTS:Disabled="True"
      DTS:DTSID="{43940469-BEFA-469C-8C9F-3F220594CC9D}"
      DTS:ExecutableType="Microsoft.DbMaintenanceBackupTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Back Up Database Task"
      DTS:TaskContact="Back Up Database Task; Microsoft Corporation; Microsoft SQL Server v9; © 2004 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{C5D4EE4A-AFE8-4785-A7DA-3EBE32BB1CDA}"
          SQLTask:DatabaseSelectionType="4"
          SQLTask:ServerVersion="16"
          SQLTask:ExtendedLogging="True"
          SQLTask:LocalConnectionForLogging=""
          SQLTask:TaskName=""
          SQLTask:IgnoreDatabasesInNotOnlineState="False"
          SQLTask:BackupAction="0"
          SQLTask:BackupIsIncremental="False"
          SQLTask:BackupFileGroupsFiles=""
          SQLTask:BackupDeviceType="2"
          SQLTask:BackupPhysicalDestinationType="2"
          SQLTask:BackupDestinationType="0"
          SQLTask:BackupDestinationAutoFolderPath="D:\KORE_DB_Backup"
          SQLTask:BackupActionForExistingBackups="0"
          SQLTask:BackupCreateSubFolder="False"
          SQLTask:BackupFileExtension=""
          SQLTask:BackupVerifyIntegrity="False"
          SQLTask:ExpireDate="2024-08-13T00:00:00"
          SQLTask:RetainDays="14"
          SQLTask:InDays="True"
          SQLTask:UseExpiration="False"
          SQLTask:BackupCompressionAction="0"
          SQLTask:CopyOnlyBackup="False"
          SQLTask:IgnoreReplicaType="False"
          SQLTask:CredentialName=""
          SQLTask:ContainerName=""
          SQLTask:UrlPrefix=""
          SQLTask:IsBackupEncrypted="False"
          SQLTask:BackupEncryptionAlgorithm="0"
          SQLTask:BackupEncryptorType="0"
          SQLTask:BackupEncryptorName=""
          SQLTask:Checksum="False"
          SQLTask:ContinueOnError="False"
          SQLTask:IsBlockSizeUsed="False"
          SQLTask:IsMaxTransferSizeUsed="False" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
          <SQLTask:SelectedDatabases
            SQLTask:DatabaseName="KoreAssignment_{Khaled_Elgohary}" />
        </SQLTask:SqlTaskData>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Data Extraction and Type Standardization"
      DTS:CreationName="Microsoft.Pipeline"
      DTS:Description="Data Flow Task"
      DTS:DTSID="{60AE3EC3-D954-4A77-8EDD-5A2154F9E91F}"
      DTS:ExecutableType="Microsoft.Pipeline"
      DTS:LocaleID="-1"
      DTS:ObjectName="Data Extraction and Type Standardization"
      DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
      <DTS:Variables />
      <DTS:ObjectData>
        <pipeline
          version="1">
          <components>
            <component
              refId="Package\Data Extraction and Type Standardization\Age Verification"
              componentClassID="Microsoft.DerivedColumn"
              contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
              name="Age Verification"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\Data Extraction and Type Standardization\Age Verification.Inputs[Derived Column Input]"
                  description="Input to the Derived Column Transformation"
                  name="Derived Column Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Data Extraction and Type Standardization\Age Verification.Inputs[Derived Column Input].Columns[Age]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="Age"
                      lineageId="Package\Data Extraction and Type Standardization\Flat File Source.Outputs[Flat File Source Output].Columns[Age]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Data Extraction and Type Standardization\Age Verification.Outputs[Derived Column Output]"
                  description="Default Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  name="Derived Column Output"
                  synchronousInputId="Package\Data Extraction and Type Standardization\Age Verification.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Data Extraction and Type Standardization\Age Verification.Outputs[Derived Column Output].Columns[Age_stg]"
                      dataType="i1"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="IgnoreFailure"
                      lineageId="Package\Data Extraction and Type Standardization\Age Verification.Outputs[Derived Column Output].Columns[Age_stg]"
                      name="Age_stg"
                      truncationRowDisposition="IgnoreFailure">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">(DT_I1)#{Package\Data Extraction and Type Standardization\Flat File Source.Outputs[Flat File Source Output].Columns[Age]}</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">(DT_I1)Age</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Data Extraction and Type Standardization\Age Verification.Outputs[Derived Column Error Output]"
                  description="Error Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Derived Column Error Output"
                  synchronousInputId="Package\Data Extraction and Type Standardization\Age Verification.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Data Extraction and Type Standardization\Age Verification.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Data Extraction and Type Standardization\Age Verification.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Data Extraction and Type Standardization\Age Verification.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Data Extraction and Type Standardization\Age Verification.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Data Extraction and Type Standardization\Check Dates"
              componentClassID="Microsoft.ConditionalSplit"
              contactInfo="Conditional Split;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Routes data rows to different outputs depending on the content of the data. Use conditions (SSIS expressions) to specify which rows are routed. For example, separate records that need to be cleaned from those that are ready to be loaded or route only a subset of records."
              name="Check Dates"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\Data Extraction and Type Standardization\Check Dates.Inputs[Conditional Split Input]"
                  description="Input to the Conditional Split Transformation"
                  name="Conditional Split Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Data Extraction and Type Standardization\Check Dates.Inputs[Conditional Split Input].Columns[Copy of RegistrationDate_stg]"
                      cachedDataType="dbDate"
                      cachedName="Copy of RegistrationDate_stg"
                      lineageId="Package\Data Extraction and Type Standardization\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of RegistrationDate_stg]" />
                    <inputColumn
                      refId="Package\Data Extraction and Type Standardization\Check Dates.Inputs[Conditional Split Input].Columns[Copy of LastLoginDate_stg]"
                      cachedDataType="dbDate"
                      cachedName="Copy of LastLoginDate_stg"
                      lineageId="Package\Data Extraction and Type Standardization\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of LastLoginDate_stg]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Data Extraction and Type Standardization\Check Dates.Outputs[Valid Dates]"
                  description="Output 1 of the Conditional Split Transformation"
                  errorOrTruncationOperation="Computation"
                  errorRowDisposition="FailComponent"
                  exclusionGroup="1"
                  name="Valid Dates"
                  synchronousInputId="Package\Data Extraction and Type Standardization\Check Dates.Inputs[Conditional Split Input]"
                  truncationRowDisposition="FailComponent">
                  <properties>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the expression. This expression version uses lineage identifiers instead of column names."
                      name="Expression">[GETDATE]() &gt;= #{Package\Data Extraction and Type Standardization\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of LastLoginDate_stg]} &amp;&amp; #{Package\Data Extraction and Type Standardization\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of RegistrationDate_stg]} &lt;= #{Package\Data Extraction and Type Standardization\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of LastLoginDate_stg]} &amp;&amp; [YEAR](#{Package\Data Extraction and Type Standardization\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of RegistrationDate_stg]}) &gt;= 2015</property>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the friendly version of the expression. This expression version uses column names."
                      expressionType="Notify"
                      name="FriendlyExpression">GETDATE() &gt;= [Copy of LastLoginDate_stg] &amp;&amp; [Copy of RegistrationDate_stg] &lt;= [Copy of LastLoginDate_stg] &amp;&amp; YEAR([Copy of RegistrationDate_stg]) &gt;= 2015</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the position of the condition in the list of conditions that the transformation evaluates. The evaluation order is from the lowest to the highest value."
                      name="EvaluationOrder">0</property>
                  </properties>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Data Extraction and Type Standardization\Check Dates.Outputs[Invalid Dates]"
                  description="Default Output of the Conditional Split Transformation"
                  exclusionGroup="1"
                  name="Invalid Dates"
                  synchronousInputId="Package\Data Extraction and Type Standardization\Check Dates.Inputs[Conditional Split Input]">
                  <properties>
                    <property
                      dataType="System.Boolean"
                      name="IsDefaultOut">true</property>
                  </properties>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Data Extraction and Type Standardization\Check Dates.Outputs[Conditional Split Error Output]"
                  description="Error Output of the Conditional Split Transformation"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Conditional Split Error Output"
                  synchronousInputId="Package\Data Extraction and Type Standardization\Check Dates.Inputs[Conditional Split Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Data Extraction and Type Standardization\Check Dates.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Data Extraction and Type Standardization\Check Dates.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Data Extraction and Type Standardization\Check Dates.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Data Extraction and Type Standardization\Check Dates.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Data Extraction and Type Standardization\Check Email"
              componentClassID="Microsoft.DerivedColumn"
              contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
              name="Check Email"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\Data Extraction and Type Standardization\Check Email.Inputs[Derived Column Input]"
                  description="Input to the Derived Column Transformation"
                  name="Derived Column Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Data Extraction and Type Standardization\Check Email.Inputs[Derived Column Input].Columns[Email]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="Email"
                      lineageId="Package\Data Extraction and Type Standardization\Flat File Source.Outputs[Flat File Source Output].Columns[Email]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Data Extraction and Type Standardization\Check Email.Outputs[Derived Column Output]"
                  description="Default Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  name="Derived Column Output"
                  synchronousInputId="Package\Data Extraction and Type Standardization\Check Email.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Data Extraction and Type Standardization\Check Email.Outputs[Derived Column Output].Columns[Email_stg]"
                      dataType="wstr"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="50"
                      lineageId="Package\Data Extraction and Type Standardization\Check Email.Outputs[Derived Column Output].Columns[Email_stg]"
                      name="Email_stg"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">[FINDSTRING](#{Package\Data Extraction and Type Standardization\Flat File Source.Outputs[Flat File Source Output].Columns[Email]},"example.com",1) &gt; 0 ? #{Package\Data Extraction and Type Standardization\Flat File Source.Outputs[Flat File Source Output].Columns[Email]} : NULL(DT_WSTR,50)</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">FINDSTRING(Email,"example.com",1) &gt; 0 ? Email : NULL(DT_WSTR,50)</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Data Extraction and Type Standardization\Check Email.Outputs[Derived Column Error Output]"
                  description="Error Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Derived Column Error Output"
                  synchronousInputId="Package\Data Extraction and Type Standardization\Check Email.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Data Extraction and Type Standardization\Check Email.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Data Extraction and Type Standardization\Check Email.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Data Extraction and Type Standardization\Check Email.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Data Extraction and Type Standardization\Check Email.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Data Extraction and Type Standardization\Concat into Date"
              componentClassID="Microsoft.DerivedColumn"
              contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
              name="Concat into Date"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\Data Extraction and Type Standardization\Concat into Date.Inputs[Derived Column Input]"
                  description="Input to the Derived Column Transformation"
                  name="Derived Column Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Data Extraction and Type Standardization\Concat into Date.Inputs[Derived Column Input].Columns[RegistrationDate_str]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="RegistrationDate_str"
                      lineageId="Package\Data Extraction and Type Standardization\Generalizing Date Format.Outputs[Derived Column Output].Columns[RegistrationDate_str]" />
                    <inputColumn
                      refId="Package\Data Extraction and Type Standardization\Concat into Date.Inputs[Derived Column Input].Columns[LastLoginDate_str]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="LastLoginDate_str"
                      lineageId="Package\Data Extraction and Type Standardization\Generalizing Date Format.Outputs[Derived Column Output].Columns[LastLoginDate_str]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Data Extraction and Type Standardization\Concat into Date.Outputs[Derived Column Output]"
                  description="Default Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  name="Derived Column Output"
                  synchronousInputId="Package\Data Extraction and Type Standardization\Concat into Date.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Data Extraction and Type Standardization\Concat into Date.Outputs[Derived Column Output].Columns[RegistrationDate_stg]"
                      dataType="wstr"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="10"
                      lineageId="Package\Data Extraction and Type Standardization\Concat into Date.Outputs[Derived Column Output].Columns[RegistrationDate_stg]"
                      name="RegistrationDate_stg"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">[SUBSTRING](#{Package\Data Extraction and Type Standardization\Generalizing Date Format.Outputs[Derived Column Output].Columns[RegistrationDate_str]},1,4) + "-" + [SUBSTRING](#{Package\Data Extraction and Type Standardization\Generalizing Date Format.Outputs[Derived Column Output].Columns[RegistrationDate_str]},5,2) + "-" + [SUBSTRING](#{Package\Data Extraction and Type Standardization\Generalizing Date Format.Outputs[Derived Column Output].Columns[RegistrationDate_str]},7,2)</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">SUBSTRING(RegistrationDate_str,1,4) + "-" + SUBSTRING(RegistrationDate_str,5,2) + "-" + SUBSTRING(RegistrationDate_str,7,2)</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Data Extraction and Type Standardization\Concat into Date.Outputs[Derived Column Output].Columns[LastLoginDate_stg]"
                      dataType="wstr"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="10"
                      lineageId="Package\Data Extraction and Type Standardization\Concat into Date.Outputs[Derived Column Output].Columns[LastLoginDate_stg]"
                      name="LastLoginDate_stg"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">[SUBSTRING](#{Package\Data Extraction and Type Standardization\Generalizing Date Format.Outputs[Derived Column Output].Columns[LastLoginDate_str]},1,4) + "-" + [SUBSTRING](#{Package\Data Extraction and Type Standardization\Generalizing Date Format.Outputs[Derived Column Output].Columns[LastLoginDate_str]},5,2) + "-" + [SUBSTRING](#{Package\Data Extraction and Type Standardization\Generalizing Date Format.Outputs[Derived Column Output].Columns[LastLoginDate_str]},7,2)</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">SUBSTRING(LastLoginDate_str,1,4) + "-" + SUBSTRING(LastLoginDate_str,5,2) + "-" + SUBSTRING(LastLoginDate_str,7,2)</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Data Extraction and Type Standardization\Concat into Date.Outputs[Derived Column Error Output]"
                  description="Error Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Derived Column Error Output"
                  synchronousInputId="Package\Data Extraction and Type Standardization\Concat into Date.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Data Extraction and Type Standardization\Concat into Date.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Data Extraction and Type Standardization\Concat into Date.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Data Extraction and Type Standardization\Concat into Date.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Data Extraction and Type Standardization\Concat into Date.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Data Extraction and Type Standardization\Conditional Split"
              componentClassID="Microsoft.ConditionalSplit"
              contactInfo="Conditional Split;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Routes data rows to different outputs depending on the content of the data. Use conditions (SSIS expressions) to specify which rows are routed. For example, separate records that need to be cleaned from those that are ready to be loaded or route only a subset of records."
              name="Conditional Split"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\Data Extraction and Type Standardization\Conditional Split.Inputs[Conditional Split Input]"
                  description="Input to the Conditional Split Transformation"
                  name="Conditional Split Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Data Extraction and Type Standardization\Conditional Split.Inputs[Conditional Split Input].Columns[FullName]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="FullName"
                      lineageId="Package\Data Extraction and Type Standardization\Flat File Source.Outputs[Flat File Source Output].Columns[FullName]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Data Extraction and Type Standardization\Conditional Split.Outputs[Validated Full Name Format]"
                  description="Output 1 of the Conditional Split Transformation"
                  errorOrTruncationOperation="Computation"
                  errorRowDisposition="FailComponent"
                  exclusionGroup="1"
                  name="Validated Full Name Format"
                  synchronousInputId="Package\Data Extraction and Type Standardization\Conditional Split.Inputs[Conditional Split Input]"
                  truncationRowDisposition="FailComponent">
                  <properties>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the expression. This expression version uses lineage identifiers instead of column names."
                      name="Expression">[TOKENCOUNT](#{Package\Data Extraction and Type Standardization\Flat File Source.Outputs[Flat File Source Output].Columns[FullName]}," ") &lt;= 3</property>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the friendly version of the expression. This expression version uses column names."
                      expressionType="Notify"
                      name="FriendlyExpression">TOKENCOUNT(FullName," ") &lt;= 3</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the position of the condition in the list of conditions that the transformation evaluates. The evaluation order is from the lowest to the highest value."
                      name="EvaluationOrder">0</property>
                  </properties>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Data Extraction and Type Standardization\Conditional Split.Outputs[Incorrect Full Name Format]"
                  description="Default Output of the Conditional Split Transformation"
                  exclusionGroup="1"
                  name="Incorrect Full Name Format"
                  synchronousInputId="Package\Data Extraction and Type Standardization\Conditional Split.Inputs[Conditional Split Input]">
                  <properties>
                    <property
                      dataType="System.Boolean"
                      name="IsDefaultOut">true</property>
                  </properties>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Data Extraction and Type Standardization\Conditional Split.Outputs[Conditional Split Error Output]"
                  description="Error Output of the Conditional Split Transformation"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Conditional Split Error Output"
                  synchronousInputId="Package\Data Extraction and Type Standardization\Conditional Split.Inputs[Conditional Split Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Data Extraction and Type Standardization\Conditional Split.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Data Extraction and Type Standardization\Conditional Split.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Data Extraction and Type Standardization\Conditional Split.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Data Extraction and Type Standardization\Conditional Split.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Data Extraction and Type Standardization\Conditional Split 1"
              componentClassID="Microsoft.ConditionalSplit"
              contactInfo="Conditional Split;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Routes data rows to different outputs depending on the content of the data. Use conditions (SSIS expressions) to specify which rows are routed. For example, separate records that need to be cleaned from those that are ready to be loaded or route only a subset of records."
              name="Conditional Split 1"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\Data Extraction and Type Standardization\Conditional Split 1.Inputs[Conditional Split Input]"
                  description="Input to the Conditional Split Transformation"
                  name="Conditional Split Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Data Extraction and Type Standardization\Conditional Split 1.Inputs[Conditional Split Input].Columns[PurchaseTotal_stg]"
                      cachedDataType="r4"
                      cachedName="PurchaseTotal_stg"
                      lineageId="Package\Data Extraction and Type Standardization\PurchaseTotal Rounding Up and error checks.Outputs[Derived Column Output].Columns[PurchaseTotal_stg]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Data Extraction and Type Standardization\Conditional Split 1.Outputs[Valid PurchaseTotal]"
                  description="Output 1 of the Conditional Split Transformation"
                  errorOrTruncationOperation="Computation"
                  errorRowDisposition="FailComponent"
                  exclusionGroup="1"
                  name="Valid PurchaseTotal"
                  synchronousInputId="Package\Data Extraction and Type Standardization\Conditional Split 1.Inputs[Conditional Split Input]"
                  truncationRowDisposition="FailComponent">
                  <properties>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the expression. This expression version uses lineage identifiers instead of column names."
                      name="Expression">#{Package\Data Extraction and Type Standardization\PurchaseTotal Rounding Up and error checks.Outputs[Derived Column Output].Columns[PurchaseTotal_stg]} &gt;= 0 &amp;&amp; #{Package\Data Extraction and Type Standardization\PurchaseTotal Rounding Up and error checks.Outputs[Derived Column Output].Columns[PurchaseTotal_stg]} &lt;= 1000</property>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the friendly version of the expression. This expression version uses column names."
                      expressionType="Notify"
                      name="FriendlyExpression">PurchaseTotal_stg &gt;= 0 &amp;&amp; PurchaseTotal_stg &lt;= 1000</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the position of the condition in the list of conditions that the transformation evaluates. The evaluation order is from the lowest to the highest value."
                      name="EvaluationOrder">0</property>
                  </properties>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Data Extraction and Type Standardization\Conditional Split 1.Outputs[Invalid PurchaseTotal]"
                  description="Default Output of the Conditional Split Transformation"
                  exclusionGroup="1"
                  name="Invalid PurchaseTotal"
                  synchronousInputId="Package\Data Extraction and Type Standardization\Conditional Split 1.Inputs[Conditional Split Input]">
                  <properties>
                    <property
                      dataType="System.Boolean"
                      name="IsDefaultOut">true</property>
                  </properties>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Data Extraction and Type Standardization\Conditional Split 1.Outputs[Conditional Split Error Output]"
                  description="Error Output of the Conditional Split Transformation"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Conditional Split Error Output"
                  synchronousInputId="Package\Data Extraction and Type Standardization\Conditional Split 1.Inputs[Conditional Split Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Data Extraction and Type Standardization\Conditional Split 1.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Data Extraction and Type Standardization\Conditional Split 1.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Data Extraction and Type Standardization\Conditional Split 1.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Data Extraction and Type Standardization\Conditional Split 1.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Data Extraction and Type Standardization\Data Conversion"
              componentClassID="Microsoft.DataConvert"
              contactInfo="Data Conversion;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Data Conversion"
              name="Data Conversion"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\Data Extraction and Type Standardization\Data Conversion.Inputs[Data Conversion Input]"
                  name="Data Conversion Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Data Extraction and Type Standardization\Data Conversion.Inputs[Data Conversion Input].Columns[RegistrationDate_stg]"
                      cachedDataType="wstr"
                      cachedLength="10"
                      cachedName="RegistrationDate_stg"
                      lineageId="Package\Data Extraction and Type Standardization\Concat into Date.Outputs[Derived Column Output].Columns[RegistrationDate_stg]" />
                    <inputColumn
                      refId="Package\Data Extraction and Type Standardization\Data Conversion.Inputs[Data Conversion Input].Columns[LastLoginDate_stg]"
                      cachedDataType="wstr"
                      cachedLength="10"
                      cachedName="LastLoginDate_stg"
                      lineageId="Package\Data Extraction and Type Standardization\Concat into Date.Outputs[Derived Column Output].Columns[LastLoginDate_stg]" />
                    <inputColumn
                      refId="Package\Data Extraction and Type Standardization\Data Conversion.Inputs[Data Conversion Input].Columns[UserID_stg]"
                      cachedDataType="wstr"
                      cachedLength="47"
                      cachedName="UserID_stg"
                      lineageId="Package\Data Extraction and Type Standardization\Format UserID.Outputs[Derived Column Output].Columns[UserID_stg]" />
                    <inputColumn
                      refId="Package\Data Extraction and Type Standardization\Data Conversion.Inputs[Data Conversion Input].Columns[Email_stg]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="Email_stg"
                      lineageId="Package\Data Extraction and Type Standardization\Check Email.Outputs[Derived Column Output].Columns[Email_stg]" />
                    <inputColumn
                      refId="Package\Data Extraction and Type Standardization\Data Conversion.Inputs[Data Conversion Input].Columns[Age_stg]"
                      cachedDataType="i1"
                      cachedName="Age_stg"
                      lineageId="Package\Data Extraction and Type Standardization\Age Verification.Outputs[Derived Column Output].Columns[Age_stg]" />
                    <inputColumn
                      refId="Package\Data Extraction and Type Standardization\Data Conversion.Inputs[Data Conversion Input].Columns[FullName]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="FullName"
                      lineageId="Package\Data Extraction and Type Standardization\Flat File Source.Outputs[Flat File Source Output].Columns[FullName]" />
                    <inputColumn
                      refId="Package\Data Extraction and Type Standardization\Data Conversion.Inputs[Data Conversion Input].Columns[PurchaseTotal]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="PurchaseTotal"
                      lineageId="Package\Data Extraction and Type Standardization\Flat File Source.Outputs[Flat File Source Output].Columns[PurchaseTotal]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Data Extraction and Type Standardization\Data Conversion.Outputs[Data Conversion Output]"
                  exclusionGroup="1"
                  name="Data Conversion Output"
                  synchronousInputId="Package\Data Extraction and Type Standardization\Data Conversion.Inputs[Data Conversion Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Data Extraction and Type Standardization\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of RegistrationDate_stg]"
                      dataType="dbDate"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="RedirectRow"
                      lineageId="Package\Data Extraction and Type Standardization\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of RegistrationDate_stg]"
                      name="Copy of RegistrationDate_stg"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the input column used as the source of data for the conversion."
                          name="SourceInputColumnLineageID">#{Package\Data Extraction and Type Standardization\Concat into Date.Outputs[Derived Column Output].Columns[RegistrationDate_stg]}</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Data Extraction and Type Standardization\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of LastLoginDate_stg]"
                      dataType="dbDate"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="RedirectRow"
                      lineageId="Package\Data Extraction and Type Standardization\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of LastLoginDate_stg]"
                      name="Copy of LastLoginDate_stg"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the input column used as the source of data for the conversion."
                          name="SourceInputColumnLineageID">#{Package\Data Extraction and Type Standardization\Concat into Date.Outputs[Derived Column Output].Columns[LastLoginDate_stg]}</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Data Extraction and Type Standardization\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of UserID_stg]"
                      dataType="ui2"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="RedirectRow"
                      lineageId="Package\Data Extraction and Type Standardization\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of UserID_stg]"
                      name="Copy of UserID_stg"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the input column used as the source of data for the conversion."
                          name="SourceInputColumnLineageID">#{Package\Data Extraction and Type Standardization\Format UserID.Outputs[Derived Column Output].Columns[UserID_stg]}</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Data Extraction and Type Standardization\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Email_stg]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="RedirectRow"
                      length="255"
                      lineageId="Package\Data Extraction and Type Standardization\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Email_stg]"
                      name="Copy of Email_stg"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the input column used as the source of data for the conversion."
                          name="SourceInputColumnLineageID">#{Package\Data Extraction and Type Standardization\Check Email.Outputs[Derived Column Output].Columns[Email_stg]}</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Data Extraction and Type Standardization\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Age_stg]"
                      dataType="ui1"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="RedirectRow"
                      lineageId="Package\Data Extraction and Type Standardization\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Age_stg]"
                      name="Copy of Age_stg"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the input column used as the source of data for the conversion."
                          name="SourceInputColumnLineageID">#{Package\Data Extraction and Type Standardization\Age Verification.Outputs[Derived Column Output].Columns[Age_stg]}</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Data Extraction and Type Standardization\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of FullName]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="RedirectRow"
                      length="255"
                      lineageId="Package\Data Extraction and Type Standardization\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of FullName]"
                      name="Copy of FullName"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the input column used as the source of data for the conversion."
                          name="SourceInputColumnLineageID">#{Package\Data Extraction and Type Standardization\Flat File Source.Outputs[Flat File Source Output].Columns[FullName]}</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Data Extraction and Type Standardization\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of PurchaseTotal]"
                      dataType="r4"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="RedirectRow"
                      lineageId="Package\Data Extraction and Type Standardization\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of PurchaseTotal]"
                      name="Copy of PurchaseTotal"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the input column used as the source of data for the conversion."
                          name="SourceInputColumnLineageID">#{Package\Data Extraction and Type Standardization\Flat File Source.Outputs[Flat File Source Output].Columns[PurchaseTotal]}</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Data Extraction and Type Standardization\Data Conversion.Outputs[Data Conversion Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Data Conversion Error Output"
                  synchronousInputId="Package\Data Extraction and Type Standardization\Data Conversion.Inputs[Data Conversion Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Data Extraction and Type Standardization\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Data Extraction and Type Standardization\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Data Extraction and Type Standardization\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Data Extraction and Type Standardization\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Data Extraction and Type Standardization\Email Redirection"
              componentClassID="Microsoft.ConditionalSplit"
              contactInfo="Conditional Split;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Routes data rows to different outputs depending on the content of the data. Use conditions (SSIS expressions) to specify which rows are routed. For example, separate records that need to be cleaned from those that are ready to be loaded or route only a subset of records."
              name="Email Redirection"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\Data Extraction and Type Standardization\Email Redirection.Inputs[Conditional Split Input]"
                  description="Input to the Conditional Split Transformation"
                  name="Conditional Split Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Data Extraction and Type Standardization\Email Redirection.Inputs[Conditional Split Input].Columns[isValid]"
                      cachedDataType="bool"
                      cachedName="isValid"
                      lineageId="Package\Data Extraction and Type Standardization\Script Component.Outputs[IsValid].Columns[isValid]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Data Extraction and Type Standardization\Email Redirection.Outputs[Valid Email]"
                  description="Output 1 of the Conditional Split Transformation"
                  errorOrTruncationOperation="Computation"
                  errorRowDisposition="FailComponent"
                  exclusionGroup="1"
                  name="Valid Email"
                  synchronousInputId="Package\Data Extraction and Type Standardization\Email Redirection.Inputs[Conditional Split Input]"
                  truncationRowDisposition="FailComponent">
                  <properties>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the expression. This expression version uses lineage identifiers instead of column names."
                      name="Expression">#{Package\Data Extraction and Type Standardization\Script Component.Outputs[IsValid].Columns[isValid]} ==  TRUE </property>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the friendly version of the expression. This expression version uses column names."
                      expressionType="Notify"
                      name="FriendlyExpression">isValid ==  TRUE </property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the position of the condition in the list of conditions that the transformation evaluates. The evaluation order is from the lowest to the highest value."
                      name="EvaluationOrder">0</property>
                  </properties>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Data Extraction and Type Standardization\Email Redirection.Outputs[inValid Email]"
                  description="Default Output of the Conditional Split Transformation"
                  exclusionGroup="1"
                  name="inValid Email"
                  synchronousInputId="Package\Data Extraction and Type Standardization\Email Redirection.Inputs[Conditional Split Input]">
                  <properties>
                    <property
                      dataType="System.Boolean"
                      name="IsDefaultOut">true</property>
                  </properties>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Data Extraction and Type Standardization\Email Redirection.Outputs[Conditional Split Error Output]"
                  description="Error Output of the Conditional Split Transformation"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Conditional Split Error Output"
                  synchronousInputId="Package\Data Extraction and Type Standardization\Email Redirection.Inputs[Conditional Split Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Data Extraction and Type Standardization\Email Redirection.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Data Extraction and Type Standardization\Email Redirection.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Data Extraction and Type Standardization\Email Redirection.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Data Extraction and Type Standardization\Email Redirection.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Data Extraction and Type Standardization\Email reverification"
              componentClassID="Microsoft.DerivedColumn"
              contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
              name="Email reverification"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\Data Extraction and Type Standardization\Email reverification.Inputs[Derived Column Input]"
                  description="Input to the Derived Column Transformation"
                  name="Derived Column Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Data Extraction and Type Standardization\Email reverification.Inputs[Derived Column Input].Columns[Copy of Email_stg]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="Copy of Email_stg"
                      lineageId="Package\Data Extraction and Type Standardization\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Email_stg]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Data Extraction and Type Standardization\Email reverification.Outputs[Derived Column Output]"
                  description="Default Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  name="Derived Column Output"
                  synchronousInputId="Package\Data Extraction and Type Standardization\Email reverification.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Data Extraction and Type Standardization\Email reverification.Outputs[Derived Column Output].Columns[Email_locapart]"
                      dataType="wstr"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="255"
                      lineageId="Package\Data Extraction and Type Standardization\Email reverification.Outputs[Derived Column Output].Columns[Email_locapart]"
                      name="Email_locapart"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">[SUBSTRING](#{Package\Data Extraction and Type Standardization\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Email_stg]},1,[FINDSTRING](#{Package\Data Extraction and Type Standardization\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Email_stg]},"@",1) - 1)</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">SUBSTRING([Copy of Email_stg],1,FINDSTRING([Copy of Email_stg],"@",1) - 1)</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Data Extraction and Type Standardization\Email reverification.Outputs[Derived Column Error Output]"
                  description="Error Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Derived Column Error Output"
                  synchronousInputId="Package\Data Extraction and Type Standardization\Email reverification.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Data Extraction and Type Standardization\Email reverification.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Data Extraction and Type Standardization\Email reverification.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Data Extraction and Type Standardization\Email reverification.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Data Extraction and Type Standardization\Email reverification.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Data Extraction and Type Standardization\Flat File Destination"
              componentClassID="Microsoft.FlatFileDestination"
              contactInfo="Flat File Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
              description="Flat File Destination"
              localeId="4105"
              name="Flat File Destination"
              version="1">
              <properties>
                <property
                  dataType="System.Boolean"
                  description="Specifies whether the data will overwrite or append to the destination file."
                  name="Overwrite">true</property>
                <property
                  dataType="System.Null"
                  description="Specifies the text to write to the destination file before any data is written."
                  expressionType="Notify"
                  name="Header" />
                <property
                  dataType="System.Boolean"
                  description="When text qualifier is enabled, specifies whether the text qualifier in the data written to the destination file will be escaped or not."
                  name="EscapeQualifier">false</property>
              </properties>
              <connections>
                <connection
                  refId="Package\Data Extraction and Type Standardization\Flat File Destination.Connections[FlatFileConnection]"
                  connectionManagerID="Package.ConnectionManagers[Flat File Connection Manager]"
                  connectionManagerRefId="Package.ConnectionManagers[Flat File Connection Manager]"
                  name="FlatFileConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\Data Extraction and Type Standardization\Flat File Destination.Inputs[Flat File Destination Input]"
                  hasSideEffects="true"
                  name="Flat File Destination Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Data Extraction and Type Standardization\Flat File Destination.Inputs[Flat File Destination Input].Columns[FullName]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="FullName"
                      externalMetadataColumnId="Package\Data Extraction and Type Standardization\Flat File Destination.Inputs[Flat File Destination Input].ExternalColumns[FullName]"
                      lineageId="Package\Data Extraction and Type Standardization\Union All.Outputs[Union All Output 1].Columns[FullName]" />
                    <inputColumn
                      refId="Package\Data Extraction and Type Standardization\Flat File Destination.Inputs[Flat File Destination Input].Columns[Age_stg]"
                      cachedDataType="i1"
                      cachedName="Age_stg"
                      externalMetadataColumnId="Package\Data Extraction and Type Standardization\Flat File Destination.Inputs[Flat File Destination Input].ExternalColumns[Age]"
                      lineageId="Package\Data Extraction and Type Standardization\Union All.Outputs[Union All Output 1].Columns[Age_stg]" />
                    <inputColumn
                      refId="Package\Data Extraction and Type Standardization\Flat File Destination.Inputs[Flat File Destination Input].Columns[UserID_stg]"
                      cachedDataType="wstr"
                      cachedLength="47"
                      cachedName="UserID_stg"
                      externalMetadataColumnId="Package\Data Extraction and Type Standardization\Flat File Destination.Inputs[Flat File Destination Input].ExternalColumns[ UserID]"
                      lineageId="Package\Data Extraction and Type Standardization\Union All.Outputs[Union All Output 1].Columns[UserID_stg]" />
                    <inputColumn
                      refId="Package\Data Extraction and Type Standardization\Flat File Destination.Inputs[Flat File Destination Input].Columns[LastLoginDate_stg]"
                      cachedDataType="wstr"
                      cachedLength="10"
                      cachedName="LastLoginDate_stg"
                      externalMetadataColumnId="Package\Data Extraction and Type Standardization\Flat File Destination.Inputs[Flat File Destination Input].ExternalColumns[LastLoginDate]"
                      lineageId="Package\Data Extraction and Type Standardization\Union All.Outputs[Union All Output 1].Columns[LastLoginDate_stg]" />
                    <inputColumn
                      refId="Package\Data Extraction and Type Standardization\Flat File Destination.Inputs[Flat File Destination Input].Columns[RegistrationDate_stg]"
                      cachedDataType="wstr"
                      cachedLength="10"
                      cachedName="RegistrationDate_stg"
                      externalMetadataColumnId="Package\Data Extraction and Type Standardization\Flat File Destination.Inputs[Flat File Destination Input].ExternalColumns[RegistrationDate]"
                      lineageId="Package\Data Extraction and Type Standardization\Union All.Outputs[Union All Output 1].Columns[RegistrationDate_stg]" />
                    <inputColumn
                      refId="Package\Data Extraction and Type Standardization\Flat File Destination.Inputs[Flat File Destination Input].Columns[Email_stg]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="Email_stg"
                      externalMetadataColumnId="Package\Data Extraction and Type Standardization\Flat File Destination.Inputs[Flat File Destination Input].ExternalColumns[Email]"
                      lineageId="Package\Data Extraction and Type Standardization\Union All.Outputs[Union All Output 1].Columns[Email_stg]" />
                    <inputColumn
                      refId="Package\Data Extraction and Type Standardization\Flat File Destination.Inputs[Flat File Destination Input].Columns[PurchaseTotal]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="PurchaseTotal"
                      externalMetadataColumnId="Package\Data Extraction and Type Standardization\Flat File Destination.Inputs[Flat File Destination Input].ExternalColumns[PurchaseTotal]"
                      lineageId="Package\Data Extraction and Type Standardization\Union All.Outputs[Union All Output 1].Columns[PurchaseTotal]" />
                  </inputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Data Extraction and Type Standardization\Flat File Destination.Inputs[Flat File Destination Input].ExternalColumns[FullName]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      name="FullName" />
                    <externalMetadataColumn
                      refId="Package\Data Extraction and Type Standardization\Flat File Destination.Inputs[Flat File Destination Input].ExternalColumns[Age]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      name="Age" />
                    <externalMetadataColumn
                      refId="Package\Data Extraction and Type Standardization\Flat File Destination.Inputs[Flat File Destination Input].ExternalColumns[Email]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      name="Email" />
                    <externalMetadataColumn
                      refId="Package\Data Extraction and Type Standardization\Flat File Destination.Inputs[Flat File Destination Input].ExternalColumns[RegistrationDate]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      name="RegistrationDate" />
                    <externalMetadataColumn
                      refId="Package\Data Extraction and Type Standardization\Flat File Destination.Inputs[Flat File Destination Input].ExternalColumns[LastLoginDate]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      name="LastLoginDate" />
                    <externalMetadataColumn
                      refId="Package\Data Extraction and Type Standardization\Flat File Destination.Inputs[Flat File Destination Input].ExternalColumns[PurchaseTotal]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      name="PurchaseTotal" />
                    <externalMetadataColumn
                      refId="Package\Data Extraction and Type Standardization\Flat File Destination.Inputs[Flat File Destination Input].ExternalColumns[ UserID]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      name=" UserID" />
                  </externalMetadataColumns>
                </input>
              </inputs>
            </component>
            <component
              refId="Package\Data Extraction and Type Standardization\Flat File Source"
              componentClassID="Microsoft.FlatFileSource"
              contactInfo="Flat File Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
              description="Flat File Source"
              localeId="4105"
              name="Flat File Source"
              usesDispositions="true"
              version="1">
              <properties>
                <property
                  dataType="System.Boolean"
                  description="Specifies whether zero-length columns are treated as null."
                  name="RetainNulls">false</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of an output column containing the file name. If no name is specified, no output column containing the file name will be generated."
                  name="FileNameColumnName"></property>
              </properties>
              <connections>
                <connection
                  refId="Package\Data Extraction and Type Standardization\Flat File Source.Connections[FlatFileConnection]"
                  connectionManagerID="Package.ConnectionManagers[CSV File Connection Manager]"
                  connectionManagerRefId="Package.ConnectionManagers[CSV File Connection Manager]"
                  name="FlatFileConnection" />
              </connections>
              <outputs>
                <output
                  refId="Package\Data Extraction and Type Standardization\Flat File Source.Outputs[Flat File Source Output]"
                  name="Flat File Source Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Data Extraction and Type Standardization\Flat File Source.Outputs[Flat File Source Output].Columns[ UserID]"
                      codePage="1252"
                      dataType="str"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Data Extraction and Type Standardization\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[ UserID]"
                      length="50"
                      lineageId="Package\Data Extraction and Type Standardization\Flat File Source.Outputs[Flat File Source Output].Columns[ UserID]"
                      name=" UserID"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the data is in binary format."
                          name="UseBinaryFormat">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Data Extraction and Type Standardization\Flat File Source.Outputs[Flat File Source Output].Columns[FullName]"
                      codePage="1252"
                      dataType="str"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Data Extraction and Type Standardization\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[FullName]"
                      length="50"
                      lineageId="Package\Data Extraction and Type Standardization\Flat File Source.Outputs[Flat File Source Output].Columns[FullName]"
                      name="FullName"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the data is in binary format."
                          name="UseBinaryFormat">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Data Extraction and Type Standardization\Flat File Source.Outputs[Flat File Source Output].Columns[Age]"
                      codePage="1252"
                      dataType="str"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Data Extraction and Type Standardization\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[Age]"
                      length="50"
                      lineageId="Package\Data Extraction and Type Standardization\Flat File Source.Outputs[Flat File Source Output].Columns[Age]"
                      name="Age"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the data is in binary format."
                          name="UseBinaryFormat">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Data Extraction and Type Standardization\Flat File Source.Outputs[Flat File Source Output].Columns[Email]"
                      codePage="1252"
                      dataType="str"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Data Extraction and Type Standardization\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[Email]"
                      length="50"
                      lineageId="Package\Data Extraction and Type Standardization\Flat File Source.Outputs[Flat File Source Output].Columns[Email]"
                      name="Email"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the data is in binary format."
                          name="UseBinaryFormat">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Data Extraction and Type Standardization\Flat File Source.Outputs[Flat File Source Output].Columns[RegistrationDate]"
                      codePage="1252"
                      dataType="str"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Data Extraction and Type Standardization\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[RegistrationDate]"
                      length="50"
                      lineageId="Package\Data Extraction and Type Standardization\Flat File Source.Outputs[Flat File Source Output].Columns[RegistrationDate]"
                      name="RegistrationDate"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the data is in binary format."
                          name="UseBinaryFormat">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Data Extraction and Type Standardization\Flat File Source.Outputs[Flat File Source Output].Columns[LastLoginDate]"
                      codePage="1252"
                      dataType="str"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Data Extraction and Type Standardization\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[LastLoginDate]"
                      length="50"
                      lineageId="Package\Data Extraction and Type Standardization\Flat File Source.Outputs[Flat File Source Output].Columns[LastLoginDate]"
                      name="LastLoginDate"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the data is in binary format."
                          name="UseBinaryFormat">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Data Extraction and Type Standardization\Flat File Source.Outputs[Flat File Source Output].Columns[PurchaseTotal]"
                      codePage="1252"
                      dataType="str"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Data Extraction and Type Standardization\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[PurchaseTotal]"
                      length="50"
                      lineageId="Package\Data Extraction and Type Standardization\Flat File Source.Outputs[Flat File Source Output].Columns[PurchaseTotal]"
                      name="PurchaseTotal"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the data is in binary format."
                          name="UseBinaryFormat">false</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Data Extraction and Type Standardization\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[ UserID]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      name=" UserID" />
                    <externalMetadataColumn
                      refId="Package\Data Extraction and Type Standardization\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[FullName]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      name="FullName" />
                    <externalMetadataColumn
                      refId="Package\Data Extraction and Type Standardization\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[Age]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      name="Age" />
                    <externalMetadataColumn
                      refId="Package\Data Extraction and Type Standardization\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[Email]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      name="Email" />
                    <externalMetadataColumn
                      refId="Package\Data Extraction and Type Standardization\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[RegistrationDate]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      name="RegistrationDate" />
                    <externalMetadataColumn
                      refId="Package\Data Extraction and Type Standardization\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[LastLoginDate]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      name="LastLoginDate" />
                    <externalMetadataColumn
                      refId="Package\Data Extraction and Type Standardization\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[PurchaseTotal]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      name="PurchaseTotal" />
                  </externalMetadataColumns>
                </output>
                <output
                  refId="Package\Data Extraction and Type Standardization\Flat File Source.Outputs[Flat File Source Error Output]"
                  isErrorOut="true"
                  name="Flat File Source Error Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Data Extraction and Type Standardization\Flat File Source.Outputs[Flat File Source Error Output].Columns[Flat File Source Error Output Column]"
                      codePage="1252"
                      dataType="text"
                      description="Flat File Source Error Output Column"
                      lineageId="Package\Data Extraction and Type Standardization\Flat File Source.Outputs[Flat File Source Error Output].Columns[Flat File Source Error Output Column]"
                      name="Flat File Source Error Output Column" />
                    <outputColumn
                      refId="Package\Data Extraction and Type Standardization\Flat File Source.Outputs[Flat File Source Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Data Extraction and Type Standardization\Flat File Source.Outputs[Flat File Source Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Data Extraction and Type Standardization\Flat File Source.Outputs[Flat File Source Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Data Extraction and Type Standardization\Flat File Source.Outputs[Flat File Source Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Data Extraction and Type Standardization\Format UserID"
              componentClassID="Microsoft.DerivedColumn"
              contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
              name="Format UserID"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\Data Extraction and Type Standardization\Format UserID.Inputs[Derived Column Input]"
                  description="Input to the Derived Column Transformation"
                  name="Derived Column Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Data Extraction and Type Standardization\Format UserID.Inputs[Derived Column Input].Columns[ UserID]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName=" UserID"
                      lineageId="Package\Data Extraction and Type Standardization\Flat File Source.Outputs[Flat File Source Output].Columns[ UserID]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Data Extraction and Type Standardization\Format UserID.Outputs[Derived Column Output]"
                  description="Default Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  name="Derived Column Output"
                  synchronousInputId="Package\Data Extraction and Type Standardization\Format UserID.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Data Extraction and Type Standardization\Format UserID.Outputs[Derived Column Output].Columns[UserID_stg]"
                      dataType="wstr"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="47"
                      lineageId="Package\Data Extraction and Type Standardization\Format UserID.Outputs[Derived Column Output].Columns[UserID_stg]"
                      name="UserID_stg"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">[LEN](#{Package\Data Extraction and Type Standardization\Flat File Source.Outputs[Flat File Source Output].Columns[ UserID]}) &gt; 6 ? [SUBSTRING](#{Package\Data Extraction and Type Standardization\Flat File Source.Outputs[Flat File Source Output].Columns[ UserID]},4,[LEN](#{Package\Data Extraction and Type Standardization\Flat File Source.Outputs[Flat File Source Output].Columns[ UserID]}) - 6) : ""</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">LEN([ UserID]) &gt; 6 ? SUBSTRING([ UserID],4,LEN([ UserID]) - 6) : ""</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Data Extraction and Type Standardization\Format UserID.Outputs[Derived Column Error Output]"
                  description="Error Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Derived Column Error Output"
                  synchronousInputId="Package\Data Extraction and Type Standardization\Format UserID.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Data Extraction and Type Standardization\Format UserID.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Data Extraction and Type Standardization\Format UserID.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Data Extraction and Type Standardization\Format UserID.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Data Extraction and Type Standardization\Format UserID.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Data Extraction and Type Standardization\Generalizing Date Format"
              componentClassID="Microsoft.DerivedColumn"
              contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
              name="Generalizing Date Format"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\Data Extraction and Type Standardization\Generalizing Date Format.Inputs[Derived Column Input]"
                  description="Input to the Derived Column Transformation"
                  name="Derived Column Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Data Extraction and Type Standardization\Generalizing Date Format.Inputs[Derived Column Input].Columns[RegistrationDate]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="RegistrationDate"
                      lineageId="Package\Data Extraction and Type Standardization\Flat File Source.Outputs[Flat File Source Output].Columns[RegistrationDate]" />
                    <inputColumn
                      refId="Package\Data Extraction and Type Standardization\Generalizing Date Format.Inputs[Derived Column Input].Columns[LastLoginDate]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="LastLoginDate"
                      lineageId="Package\Data Extraction and Type Standardization\Flat File Source.Outputs[Flat File Source Output].Columns[LastLoginDate]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Data Extraction and Type Standardization\Generalizing Date Format.Outputs[Derived Column Output]"
                  description="Default Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  name="Derived Column Output"
                  synchronousInputId="Package\Data Extraction and Type Standardization\Generalizing Date Format.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Data Extraction and Type Standardization\Generalizing Date Format.Outputs[Derived Column Output].Columns[RegistrationDate_str]"
                      dataType="wstr"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="50"
                      lineageId="Package\Data Extraction and Type Standardization\Generalizing Date Format.Outputs[Derived Column Output].Columns[RegistrationDate_str]"
                      name="RegistrationDate_str"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">[FINDSTRING](#{Package\Data Extraction and Type Standardization\Flat File Source.Outputs[Flat File Source Output].Columns[RegistrationDate]},"/",1) &gt; 0 ? ([SUBSTRING]([REPLACE](#{Package\Data Extraction and Type Standardization\Flat File Source.Outputs[Flat File Source Output].Columns[RegistrationDate]},"/",""),5,4) + [SUBSTRING]([REPLACE](#{Package\Data Extraction and Type Standardization\Flat File Source.Outputs[Flat File Source Output].Columns[RegistrationDate]},"/",""),1,2) + [SUBSTRING]([REPLACE](#{Package\Data Extraction and Type Standardization\Flat File Source.Outputs[Flat File Source Output].Columns[RegistrationDate]},"/",""),3,2)) : [REPLACE](#{Package\Data Extraction and Type Standardization\Flat File Source.Outputs[Flat File Source Output].Columns[RegistrationDate]},"-","")</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">FINDSTRING(RegistrationDate,"/",1) &gt; 0 ? (SUBSTRING(REPLACE(RegistrationDate,"/",""),5,4) + SUBSTRING(REPLACE(RegistrationDate,"/",""),1,2) + SUBSTRING(REPLACE(RegistrationDate,"/",""),3,2)) : REPLACE(RegistrationDate,"-","")</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Data Extraction and Type Standardization\Generalizing Date Format.Outputs[Derived Column Output].Columns[LastLoginDate_str]"
                      dataType="wstr"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="50"
                      lineageId="Package\Data Extraction and Type Standardization\Generalizing Date Format.Outputs[Derived Column Output].Columns[LastLoginDate_str]"
                      name="LastLoginDate_str"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">[FINDSTRING](#{Package\Data Extraction and Type Standardization\Flat File Source.Outputs[Flat File Source Output].Columns[LastLoginDate]},"/",1) &gt; 0 ? ([SUBSTRING]([REPLACE](#{Package\Data Extraction and Type Standardization\Flat File Source.Outputs[Flat File Source Output].Columns[RegistrationDate]},"/",""),5,4) + [SUBSTRING]([REPLACE](#{Package\Data Extraction and Type Standardization\Flat File Source.Outputs[Flat File Source Output].Columns[RegistrationDate]},"/",""),1,2) + [SUBSTRING]([REPLACE](#{Package\Data Extraction and Type Standardization\Flat File Source.Outputs[Flat File Source Output].Columns[LastLoginDate]},"/",""),3,2)) : [REPLACE](#{Package\Data Extraction and Type Standardization\Flat File Source.Outputs[Flat File Source Output].Columns[LastLoginDate]},"-","")</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">FINDSTRING(LastLoginDate,"/",1) &gt; 0 ? (SUBSTRING(REPLACE(RegistrationDate,"/",""),5,4) + SUBSTRING(REPLACE(RegistrationDate,"/",""),1,2) + SUBSTRING(REPLACE(LastLoginDate,"/",""),3,2)) : REPLACE(LastLoginDate,"-","")</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Data Extraction and Type Standardization\Generalizing Date Format.Outputs[Derived Column Error Output]"
                  description="Error Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Derived Column Error Output"
                  synchronousInputId="Package\Data Extraction and Type Standardization\Generalizing Date Format.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Data Extraction and Type Standardization\Generalizing Date Format.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Data Extraction and Type Standardization\Generalizing Date Format.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Data Extraction and Type Standardization\Generalizing Date Format.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Data Extraction and Type Standardization\Generalizing Date Format.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Data Extraction and Type Standardization\Null Checks on Table"
              componentClassID="Microsoft.ConditionalSplit"
              contactInfo="Conditional Split;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Routes data rows to different outputs depending on the content of the data. Use conditions (SSIS expressions) to specify which rows are routed. For example, separate records that need to be cleaned from those that are ready to be loaded or route only a subset of records."
              name="Null Checks on Table"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\Data Extraction and Type Standardization\Null Checks on Table.Inputs[Conditional Split Input]"
                  description="Input to the Conditional Split Transformation"
                  name="Conditional Split Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Data Extraction and Type Standardization\Null Checks on Table.Inputs[Conditional Split Input].Columns[Copy of RegistrationDate_stg]"
                      cachedDataType="dbDate"
                      cachedName="Copy of RegistrationDate_stg"
                      lineageId="Package\Data Extraction and Type Standardization\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of RegistrationDate_stg]" />
                    <inputColumn
                      refId="Package\Data Extraction and Type Standardization\Null Checks on Table.Inputs[Conditional Split Input].Columns[Copy of LastLoginDate_stg]"
                      cachedDataType="dbDate"
                      cachedName="Copy of LastLoginDate_stg"
                      lineageId="Package\Data Extraction and Type Standardization\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of LastLoginDate_stg]" />
                    <inputColumn
                      refId="Package\Data Extraction and Type Standardization\Null Checks on Table.Inputs[Conditional Split Input].Columns[Copy of UserID_stg]"
                      cachedDataType="ui2"
                      cachedName="Copy of UserID_stg"
                      lineageId="Package\Data Extraction and Type Standardization\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of UserID_stg]" />
                    <inputColumn
                      refId="Package\Data Extraction and Type Standardization\Null Checks on Table.Inputs[Conditional Split Input].Columns[Copy of Email_stg]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="Copy of Email_stg"
                      lineageId="Package\Data Extraction and Type Standardization\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Email_stg]" />
                    <inputColumn
                      refId="Package\Data Extraction and Type Standardization\Null Checks on Table.Inputs[Conditional Split Input].Columns[Copy of Age_stg]"
                      cachedDataType="ui1"
                      cachedName="Copy of Age_stg"
                      lineageId="Package\Data Extraction and Type Standardization\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Age_stg]" />
                    <inputColumn
                      refId="Package\Data Extraction and Type Standardization\Null Checks on Table.Inputs[Conditional Split Input].Columns[Copy of FullName]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="Copy of FullName"
                      lineageId="Package\Data Extraction and Type Standardization\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of FullName]" />
                    <inputColumn
                      refId="Package\Data Extraction and Type Standardization\Null Checks on Table.Inputs[Conditional Split Input].Columns[Copy of PurchaseTotal]"
                      cachedDataType="r4"
                      cachedName="Copy of PurchaseTotal"
                      lineageId="Package\Data Extraction and Type Standardization\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of PurchaseTotal]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Data Extraction and Type Standardization\Null Checks on Table.Outputs[Nulls]"
                  description="Output 1 of the Conditional Split Transformation"
                  errorOrTruncationOperation="Computation"
                  errorRowDisposition="FailComponent"
                  exclusionGroup="1"
                  name="Nulls"
                  synchronousInputId="Package\Data Extraction and Type Standardization\Null Checks on Table.Inputs[Conditional Split Input]"
                  truncationRowDisposition="FailComponent">
                  <properties>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the expression. This expression version uses lineage identifiers instead of column names."
                      name="Expression">[ISNULL](#{Package\Data Extraction and Type Standardization\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of RegistrationDate_stg]}) || [ISNULL](#{Package\Data Extraction and Type Standardization\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of LastLoginDate_stg]}) || [ISNULL](#{Package\Data Extraction and Type Standardization\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of UserID_stg]}) || [ISNULL](#{Package\Data Extraction and Type Standardization\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Email_stg]}) || [ISNULL](#{Package\Data Extraction and Type Standardization\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Age_stg]}) || [ISNULL](#{Package\Data Extraction and Type Standardization\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of FullName]}) || [ISNULL](#{Package\Data Extraction and Type Standardization\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of PurchaseTotal]})</property>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the friendly version of the expression. This expression version uses column names."
                      expressionType="Notify"
                      name="FriendlyExpression">ISNULL([Copy of RegistrationDate_stg]) || ISNULL([Copy of LastLoginDate_stg]) || ISNULL([Copy of UserID_stg]) || ISNULL([Copy of Email_stg]) || ISNULL([Copy of Age_stg]) || ISNULL([Copy of FullName]) || ISNULL([Copy of PurchaseTotal])</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the position of the condition in the list of conditions that the transformation evaluates. The evaluation order is from the lowest to the highest value."
                      name="EvaluationOrder">0</property>
                  </properties>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Data Extraction and Type Standardization\Null Checks on Table.Outputs[Rows without Nulls]"
                  description="Default Output of the Conditional Split Transformation"
                  exclusionGroup="1"
                  name="Rows without Nulls"
                  synchronousInputId="Package\Data Extraction and Type Standardization\Null Checks on Table.Inputs[Conditional Split Input]">
                  <properties>
                    <property
                      dataType="System.Boolean"
                      name="IsDefaultOut">true</property>
                  </properties>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Data Extraction and Type Standardization\Null Checks on Table.Outputs[Conditional Split Error Output]"
                  description="Error Output of the Conditional Split Transformation"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Conditional Split Error Output"
                  synchronousInputId="Package\Data Extraction and Type Standardization\Null Checks on Table.Inputs[Conditional Split Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Data Extraction and Type Standardization\Null Checks on Table.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Data Extraction and Type Standardization\Null Checks on Table.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Data Extraction and Type Standardization\Null Checks on Table.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Data Extraction and Type Standardization\Null Checks on Table.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Data Extraction and Type Standardization\OLE DB Destination"
              componentClassID="Microsoft.OLEDBDestination"
              contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
              description="OLE DB Destination"
              name="OLE DB Destination"
              usesDispositions="true"
              version="4">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset">[stg].[Users]</property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Forces the use of the DefaultCodePage property value when describing character data."
                  name="AlwaysUseDefaultCodePage">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">3</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepIdentity">false</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepNulls">false</property>
                <property
                  dataType="System.String"
                  description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                  name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                <property
                  dataType="System.Int32"
                  description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                  name="FastLoadMaxInsertCommitSize">2147483647</property>
              </properties>
              <connections>
                <connection
                  refId="Package\Data Extraction and Type Standardization\OLE DB Destination.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[KHALED.KoreAssignment_{Khaled_Elgohary\}]"
                  connectionManagerRefId="Package.ConnectionManagers[KHALED.KoreAssignment_{Khaled_Elgohary\}]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\Data Extraction and Type Standardization\OLE DB Destination.Inputs[OLE DB Destination Input]"
                  errorOrTruncationOperation="Insert"
                  errorRowDisposition="FailComponent"
                  hasSideEffects="true"
                  name="OLE DB Destination Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Data Extraction and Type Standardization\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Copy of RegistrationDate_stg]"
                      cachedDataType="dbDate"
                      cachedName="Copy of RegistrationDate_stg"
                      externalMetadataColumnId="Package\Data Extraction and Type Standardization\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[RegistrationDate]"
                      lineageId="Package\Data Extraction and Type Standardization\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of RegistrationDate_stg]" />
                    <inputColumn
                      refId="Package\Data Extraction and Type Standardization\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Copy of LastLoginDate_stg]"
                      cachedDataType="dbDate"
                      cachedName="Copy of LastLoginDate_stg"
                      externalMetadataColumnId="Package\Data Extraction and Type Standardization\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[LastLoginDate]"
                      lineageId="Package\Data Extraction and Type Standardization\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of LastLoginDate_stg]" />
                    <inputColumn
                      refId="Package\Data Extraction and Type Standardization\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Copy of UserID_stg]"
                      cachedDataType="ui2"
                      cachedName="Copy of UserID_stg"
                      externalMetadataColumnId="Package\Data Extraction and Type Standardization\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[UserID]"
                      lineageId="Package\Data Extraction and Type Standardization\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of UserID_stg]" />
                    <inputColumn
                      refId="Package\Data Extraction and Type Standardization\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Copy of Email_stg]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="Copy of Email_stg"
                      externalMetadataColumnId="Package\Data Extraction and Type Standardization\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Email]"
                      lineageId="Package\Data Extraction and Type Standardization\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Email_stg]" />
                    <inputColumn
                      refId="Package\Data Extraction and Type Standardization\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Copy of Age_stg]"
                      cachedDataType="ui1"
                      cachedName="Copy of Age_stg"
                      externalMetadataColumnId="Package\Data Extraction and Type Standardization\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Age]"
                      lineageId="Package\Data Extraction and Type Standardization\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Age_stg]" />
                    <inputColumn
                      refId="Package\Data Extraction and Type Standardization\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Copy of FullName]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="Copy of FullName"
                      externalMetadataColumnId="Package\Data Extraction and Type Standardization\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[FullName]"
                      lineageId="Package\Data Extraction and Type Standardization\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of FullName]" />
                    <inputColumn
                      refId="Package\Data Extraction and Type Standardization\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[PurchaseTotal_stg]"
                      cachedDataType="r4"
                      cachedName="PurchaseTotal_stg"
                      externalMetadataColumnId="Package\Data Extraction and Type Standardization\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[PurchaseTotal]"
                      lineageId="Package\Data Extraction and Type Standardization\PurchaseTotal Rounding Up and error checks.Outputs[Derived Column Output].Columns[PurchaseTotal_stg]" />
                  </inputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Data Extraction and Type Standardization\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[StgID]"
                      dataType="i4"
                      name="StgID" />
                    <externalMetadataColumn
                      refId="Package\Data Extraction and Type Standardization\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[UserID]"
                      dataType="i4"
                      name="UserID" />
                    <externalMetadataColumn
                      refId="Package\Data Extraction and Type Standardization\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[FullName]"
                      dataType="wstr"
                      length="255"
                      name="FullName" />
                    <externalMetadataColumn
                      refId="Package\Data Extraction and Type Standardization\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Age]"
                      dataType="i4"
                      name="Age" />
                    <externalMetadataColumn
                      refId="Package\Data Extraction and Type Standardization\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Email]"
                      dataType="wstr"
                      length="255"
                      name="Email" />
                    <externalMetadataColumn
                      refId="Package\Data Extraction and Type Standardization\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[RegistrationDate]"
                      dataType="dbDate"
                      name="RegistrationDate" />
                    <externalMetadataColumn
                      refId="Package\Data Extraction and Type Standardization\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[LastLoginDate]"
                      dataType="dbDate"
                      name="LastLoginDate" />
                    <externalMetadataColumn
                      refId="Package\Data Extraction and Type Standardization\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[PurchaseTotal]"
                      dataType="r8"
                      name="PurchaseTotal" />
                  </externalMetadataColumns>
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Data Extraction and Type Standardization\OLE DB Destination.Outputs[OLE DB Destination Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="OLE DB Destination Error Output"
                  synchronousInputId="Package\Data Extraction and Type Standardization\OLE DB Destination.Inputs[OLE DB Destination Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Data Extraction and Type Standardization\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Data Extraction and Type Standardization\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Data Extraction and Type Standardization\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Data Extraction and Type Standardization\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Data Extraction and Type Standardization\PurchaseTotal Rounding Up and error checks"
              componentClassID="Microsoft.DerivedColumn"
              contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
              name="PurchaseTotal Rounding Up and error checks"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\Data Extraction and Type Standardization\PurchaseTotal Rounding Up and error checks.Inputs[Derived Column Input]"
                  description="Input to the Derived Column Transformation"
                  name="Derived Column Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Data Extraction and Type Standardization\PurchaseTotal Rounding Up and error checks.Inputs[Derived Column Input].Columns[Copy of PurchaseTotal]"
                      cachedDataType="r4"
                      cachedName="Copy of PurchaseTotal"
                      lineageId="Package\Data Extraction and Type Standardization\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of PurchaseTotal]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Data Extraction and Type Standardization\PurchaseTotal Rounding Up and error checks.Outputs[Derived Column Output]"
                  description="Default Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  name="Derived Column Output"
                  synchronousInputId="Package\Data Extraction and Type Standardization\PurchaseTotal Rounding Up and error checks.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Data Extraction and Type Standardization\PurchaseTotal Rounding Up and error checks.Outputs[Derived Column Output].Columns[PurchaseTotal_stg]"
                      dataType="r4"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Data Extraction and Type Standardization\PurchaseTotal Rounding Up and error checks.Outputs[Derived Column Output].Columns[PurchaseTotal_stg]"
                      name="PurchaseTotal_stg"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">[ROUND](#{Package\Data Extraction and Type Standardization\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of PurchaseTotal]},2)</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">ROUND([Copy of PurchaseTotal],2)</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Data Extraction and Type Standardization\PurchaseTotal Rounding Up and error checks.Outputs[Derived Column Error Output]"
                  description="Error Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Derived Column Error Output"
                  synchronousInputId="Package\Data Extraction and Type Standardization\PurchaseTotal Rounding Up and error checks.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Data Extraction and Type Standardization\PurchaseTotal Rounding Up and error checks.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Data Extraction and Type Standardization\PurchaseTotal Rounding Up and error checks.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Data Extraction and Type Standardization\PurchaseTotal Rounding Up and error checks.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Data Extraction and Type Standardization\PurchaseTotal Rounding Up and error checks.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Data Extraction and Type Standardization\Script Component"
              componentClassID="Microsoft.ManagedComponentHost"
              contactInfo="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;13"
              description="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum."
              name="Script Component"
              version="13">
              <properties>
                <property
                  dataType="System.String"
                  description="Stores the source code of the component"
                  isArray="true"
                  name="SourceCode"
                  state="cdata">
                  <arrayElements
                    arrayElementCount="30">
                    <arrayElement
                      dataType="System.String"><![CDATA[ComponentWrapper.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services component wrapper
*  This module defines the base class for your component
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

public class UserComponent: ScriptComponent
{
    public Connections Connections;
    public Variables Variables;
    public UserComponent()
    {
        Connections = new Connections(this);
        Variables = new Variables(this);
    }

    public override void ProcessInput(int InputID, string InputName, PipelineBuffer Buffer, OutputNameMap OutputMap)
    {

        if (InputName.Equals(@"Input 0", StringComparison.Ordinal))
        {
            Input0_ProcessInput(new Input0Buffer(Buffer, GetColumnIndexes(InputID), OutputMap));
        }

    }

    public virtual void Input0_ProcessInput(Input0Buffer Buffer)
    {
        while (Buffer.NextRow())
        {
            Input0_ProcessInputRow(Buffer);
        }
    }

    public virtual void Input0_ProcessInputRow(Input0Buffer Row)
    {
    }

}

public class Connections
{
    ScriptComponent ParentComponent;

    public Connections(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

    public IDTSConnectionManager100 Connection
    {
        get
        {
            return ParentComponent.ComponentMetaData.RuntimeConnectionCollection.GetRuntimeConnectionByName(@"Connection").ConnectionManager;
        }
    }

}

public class Variables
{
    ScriptComponent ParentComponent;

    public Variables(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Resources.resx]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[main.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[#region Help:  Introduction to the Script Component
/* The Script Component allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services data flow.
 *
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script component. */
#endregion

#region Namespaces
using System;
using System.Data;
using System.Linq;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;
#endregion

/// <summary>
/// This is the class to which to add your code.  Do not change the name, attributes, or parent
/// of this class.
/// </summary>
[Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute]
public class ScriptMain : UserComponent
{
    #region Help:  Using Integration Services variables and parameters
    /* To use a variable in this script, first ensure that the variable has been added to
     * either the list contained in the ReadOnlyVariables property or the list contained in
     * the ReadWriteVariables property of this script component, according to whether or not your
     * code needs to write into the variable.  To do so, save this script, close this instance of
     * Visual Studio, and update the ReadOnlyVariables and ReadWriteVariables properties in the
     * Script Transformation Editor window.
     * To use a parameter in this script, follow the same steps. Parameters are always read-only.
     *
     * Example of reading from a variable or parameter:
     *  DateTime startTime = Variables.MyStartTime;
     *
     * Example of writing to a variable:
     *  Variables.myStringVariable = "new value";
     */
    #endregion

    #region Help:  Using Integration Services Connnection Managers
    /* Some types of connection managers can be used in this script component.  See the help topic
     * "Working with Connection Managers Programatically" for details.
     *
     * To use a connection manager in this script, first ensure that the connection manager has
     * been added to either the list of connection managers on the Connection Managers page of the
     * script component editor.  To add the connection manager, save this script, close this instance of
     * Visual Studio, and add the Connection Manager to the list.
     *
     * If the component needs to hold a connection open while processing rows, override the
     * AcquireConnections and ReleaseConnections methods.
     * 
     * Example of using an ADO.Net connection manager to acquire a SqlConnection:
     *  object rawConnection = Connections.SalesDB.AcquireConnection(transaction);
     *  SqlConnection salesDBConn = (SqlConnection)rawConnection;
     *
     * Example of using a File connection manager to acquire a file path:
     *  object rawConnection = Connections.Prices_zip.AcquireConnection(transaction);
     *  string filePath = (string)rawConnection;
     *
     * Example of releasing a connection manager:
     *  Connections.SalesDB.ReleaseConnection(rawConnection);
     */
    #endregion

    #region Help:  Firing Integration Services Events
    /* This script component can fire events.
     *
     * Example of firing an error event:
     *  ComponentMetaData.FireError(10, "Process Values", "Bad value", "", 0, out cancel);
     *
     * Example of firing an information event:
     *  ComponentMetaData.FireInformation(10, "Process Values", "Processing has started", "", 0, fireAgain);
     *
     * Example of firing a warning event:
     *  ComponentMetaData.FireWarning(10, "Process Values", "No rows were received", "", 0);
     */
    #endregion

    /// <summary>
    /// This method is called once, before rows begin to be processed in the data flow.
    ///
    /// You can remove this method if you don't need to do anything here.
    /// </summary>
    public override void PreExecute()
    {
        base.PreExecute();
        /*
         * Add your code here
         */
    }

    /// <summary>
    /// This method is called after all the rows have passed through this component.
    ///
    /// You can delete this method if you don't need to do anything here.
    /// </summary>
    public override void PostExecute()
    {
        base.PostExecute();
        /*
         * Add your code here
         */
    }

    /// <summary>
    /// This method is called once for every row that passes through the component from Input0.
    ///
    /// Example of reading a value from a column in the the row:
    ///  string zipCode = Row.ZipCode
    ///
    /// Example of writing a value to a column in the row:
    ///  Row.ZipCode = zipCode
    /// </summary>
    /// <param name="Row">The row that is currently passing through the component</param>
    char[] specialCharacters = "!#$%&'*+-/=?^_`{|}~.".ToCharArray();
    public override void Input0_ProcessInputRow(Input0Buffer Row)
    {
        string localPart = Row.Emaillocapart;
        bool isValid = true;

        if (specialCharacters.Contains(localPart[0]) || specialCharacters.Contains(localPart[localPart.Length - 1]))
        {
            isValid = false;
        }

        for (int i = 0; i < localPart.Length; i++)
        {
            if (specialCharacters.Contains(localPart[i]) && specialCharacters.Contains(localPart[i - 1])){
                isValid = false;
                break;
            }
        }

        Row.isValid = isValid;
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[BufferWrapper.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services buffer wrappers
*  This module defines classes for accessing data flow buffers
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */



using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;

public class Input0Buffer: ScriptBuffer

{
    public Input0Buffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public String Emaillocapart
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[0]);
        }
    }
    public bool Emaillocapart_IsNull
    {
        get
        {
            return IsNull(0);
        }
    }

    public Boolean isValid
    {
        set
        {
            this[1] = value;
        }
    }
    public bool isValid_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(1);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public bool NextRow()
    {
        return base.NextRow();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Settings.Designer.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_b68f12e937294234b80133b1f2f81a17.Properties.Settings.get_Default():SC_b68f12e937294234b80133b1f2f81a17.Properties.Sett" +
    "ings")]

namespace SC_b68f12e937294234b80133b1f2f81a17.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[SC_b68f12e937294234b80133b1f2f81a17.csproj]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{7f62c265-83cc-4187-80d0-ef64f35e71db}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>SC_b68f12e937294234b80133b1f2f81a17</RootNamespace>
    <AssemblyName>SC_b68f12e937294234b80133b1f2f81a17</AssemblyName>
    <TargetFrameworkVersion>v4.7</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.TxScript, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.PipelineHost, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Compile Include="main.cs" />
    <Compile Include="BufferWrapper.cs" />
    <Compile Include="ComponentWrapper.cs" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="ScriptComponent" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoExeName="" DebugInfoCommandLine="" DebugInfoWorkingDir="" IconImageList="" />
        <Host Name="ScriptComponent" GeneratedNamespace="SC_b68f12e937294234b80133b1f2f81a17" IconIndex="0"></Host>
        <ProjectClient>
          <HostIdentifier>SSIS_SC160</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Project]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:CodeName>SC_b68f12e937294234b80133b1f2f81a17</msb:CodeName>
    <msb:Language>msBuild</msb:Language>
    <msb:DisplayName>SC_b68f12e937294234b80133b1f2f81a17</msb:DisplayName>
    <msb:ProjectId>{A9C3B029-5BD2-441C-BDBA-C49C83B5499C}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="SC_b68f12e937294234b80133b1f2f81a17.csproj" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="main.cs" />
    <msb:File Include="BufferWrapper.cs" />
    <msb:File Include="ComponentWrapper.cs" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.Designer.cs" />
    <msb:File Include="Properties\Settings.Designer.cs" />
  </msb:ItemGroup>
</c:Project>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\AssemblyInfo.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("SC_b68f12e937294234b80133b1f2f81a17")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("SC_b68f12e937294234b80133b1f2f81a17")]
[assembly: AssemblyCopyright("Copyright @  2024")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.0.0")]
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Settings.settings]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Resources.Designer.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_b68f12e937294234b80133b1f2f81a17.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_b68f12e937294234b80133b1f2f81a17.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_b68f12e937294234b80133b1f2f81a17.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace SC_b68f12e937294234b80133b1f2f81a17.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SC_b68f12e937294234b80133b1f2f81a17.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}
]]></arrayElement>
                  </arrayElements>
                </property>
                <property
                  dataType="System.String"
                  description="Stores the binary representation of the component"
                  isArray="true"
                  name="BinaryCode"
                  state="cdata">
                  <arrayElements
                    arrayElementCount="2">
                    <arrayElement
                      dataType="System.String"><![CDATA[SC_b68f12e937294234b80133b1f2f81a17.dll]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAGYRqWYAAAAAAAAAAOAAIiALATAAABYAAAAIAAAAAAAApjUA
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAGAAAAAAAAAACAAAAAAgAAAAAAAAMAYIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAFQ1AABPAAAAAEAAAEgEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAArBUAAAAgAAAAFgAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAEgEAAAAQAAAAAYAAAAYAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAHgAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAACI
NQAAAAAAAEgAAAACAAUAXCIAAEASAAABAAAAAAAAAJw0AAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAB4CKBAAAAoqHgIoEQAACioTMAQAgQAAAAEAABEDbwYAAAYK
FwsCewEAAAQGFm8SAAAKKAEAACstGwJ7AQAABAYGbxQAAAoXWW8SAAAKKAEAACssAhYLFgwrMgJ7
AQAABAYIbxIAAAooAQAAKywaAnsBAAAEBggXWW8SAAAKKAEAACssBBYLKw0IF1gMCAZvFAAACjLF
AwdvCAAABipeAnIBAABwKBUAAAp9AQAABAIoDAAABioqAgMEBSgWAAAKKlICexcAAAoCexgAAAoW
lG8ZAAAKKiICFigaAAAKKjoCFwOMHgAAASgbAAAKKloDLAgCFygcAAAKKnIrAABwcx0AAAp6HgIo
HgAACioeAigfAAAKKn4CKCAAAAoCAnMQAAAGfQIAAAQCAnMSAAAGfQMAAAQqkgRyyAAAcBpvIQAA
CiwVAgUCAygiAAAKDgRzBQAABm8OAAAGKkorBwIDbw8AAAYDbwoAAAYt8SoGKjoCKCMAAAoCA30E
AAAEKoICewQAAARvJAAACm8lAAAKctgAAHBvJgAACm8nAAAKKjoCKCMAAAoCA30FAAAEKh4CKCMA
AAoqrn4GAAAELR5y7gAAcNAHAAACKCgAAApvKQAACnMqAAAKgAYAAAR+BgAABCoafgcAAAQqHgKA
BwAABCoafggAAAQqHgIoKwAACioucxgAAAaACAAABCoAQlNKQgEAAQAAAAAADAAAAHY0LjAuMzAz
MTkAAAAABQBsAAAALAYAACN+AACYBgAATAgAACNTdHJpbmdzAAAAAOQOAABgAQAAI1VTAEQQAAAQ
AAAAI0dVSUQAAABUEAAA7AEAACNCbG9iAAAAAAAAAAIAAAFXFaIBCQkAAAD6ATMAFgAAAQAAACYA
AAAIAAAACAAAABkAAAAPAAAAKwAAABAAAAABAAAABAAAAAgAAAAJAAAAAQAAAAcAAAABAAAAAQAA
AAAA4wMBAAAAAAAGAM8CPwYGAGMDPwYGABsCLAYPALMGAAAGAEgCmAQGALICmAQGAJMCmAQGAEoD
mAQGAO8CmAQGAAgDmAQGAF8CmAQGAHoCngMKACMDXAEKAJcFXAEOAIgFXAEKABAFXAEKAJ4HXAEG
AGEHSAQSAFYAzgUGAP4BLAYGAKgFXwYGAAQFgwQWAM4BzQMWAC8CzQMWALYBbgQGAOMBPwYGALsD
SAQaAAgBbwUGAG8A0QAGAFsESAQGANkESAQGAPMESAQeAAEA9gUeABoA9gUeAD0A9gUGAH0BSAQG
ABMBSAQGAEEImAQAAAAAoQAAAAAAAQABAAEAEABjBAAAEAABAAEAAQAQAHsFAAA5AAIABQABABAA
gAcAAEUAAgAMAAEAEAA5BwAASQAEABAAAQAQAPEGAABJAAUAEgAAABAAZgbCBkkABgATAAABEAAg
B8IGZQAIABcAAQBPB7UABgA5B7kABgDxBr0AAQCOB8EAAQCOB8EAEQBPBMUAEQCmAckAEQD4AM0A
UCAAAAAAxgCBAwYAAQBYIAAAAADGAIwDBgABAGAgAAAAAMYAEgjRAAEA7SAAAAAAhhgfBgYAAgAF
IQAAAACGGB8GQAACABAhAAAAAIYIywfXAAUAJSEAAAAAhggeBGIABQAuIQAAAACGCOwA2wAFAD0h
AAAAAIYICwTbAAYAVCEAAAAAhgApCGIABwBcIQAAAACGAGgHYgAHAGQhAAAAAIYYHwYGAAcAhCEA
AAAAxgAFCOAABwCpIQAAAADGAf4H0QALALwhAAAAAMYBEgjRAAwAviEAAAAAhhgfBuoADQDNIQAA
AACGCMoEhwAOAO4hAAAAAIYYHwbqAA4A/SEAAAAAgxgfBgYADwAFIgAAAACTCKQF8AAPADEiAAAA
AJMIjgH1AA8AOCIAAAAAkwiaAfoADwBAIgAAAACWCHQHAAEQAEciAAAAAIYYHwYGABAATyIAAAAA
kRglBgUBEAAAAAEALQgAAAEAnQUAAAIA+wYAAAMAHgUAAAEAmAMAAAEAmAMAAAEAqgAAAAIANwEA
AAMAnQUAAAQAHgUAAAEAnQUAAAEALQgAAAEApAcAAAEApAcAAAEAmAMJAB8GAQARAB8GBgAZAB8G
CgApAB8GEAAxAB8GEAA5AB8GEABBAB8GEABJAB8GEABRAB8GEABZAB8GEABhAB8GEABpAB8GBgCh
AB8GBgDBAB8GFQDRAB8GBgCJAIEDBgCJAIwDBgDZAEUHIQDhADAHJgDZAMIDNwDZADEIOwBxAB8G
QABxAJ0FSgBxAPsGTgB5ALgDUgBxADAEVwBxAD8EXABxADcEAQD5AB8GEABxACkIYgBxAGgHYgCJ
AB8GBgDZACkHZgCJAA8HbgCRAB8GBgCJALIAdAAJAaoEegARAUEBgAAZAbgFhwAhASUBjAAhAT0I
lQCpAB8GmwDJAB8GBgAuAAsAJQEuABMALgEuABsATQEuACMAVgEuACsAfwEuADMAfwEuADsAfwEu
AEMAVgEuAEsAhQEuAFMAfwEuAFsAnAFDAGMA5gHJAHMATQHjAGsA5gHpAHMATQEBAXsA5gEbAAMA
AQAFAAUABwAGAAgACAAAAM8HCQEAACIEDQEAAPAADQEAAA8EDQEAAM4EEQEAAKgFFgEAAK4BGwEA
AHgHIAECAAYAAwACAAcABQABAAgABwABAAkACQACABEACwACABQADQACABUADwABABYADwACABcA
EQAEgAAAAQAAAAAAAAAAAAAAAAB9AAAABAAAAAAAAAAAAAAAowDIAAAAAAAQAAAAAAAAAAAAAACs
AK4HAAAAABAAAAAAAAAAAAAAAKwA3QcAAAAAEAAAAAAAAAAAAAAArAAoBQAAAAAEAAAAAAAAAAAA
AACjAEgEAAAAAAQAAAAAAAAAAAAAAKMAggEAAAAAEAAAAAAAAAAAAAAArABLBQAAAAAAAAAAAQAA
AHAGAAAnADMAAAAASURUU0NvbXBvbmVudE1ldGFEYXRhMTAwAElEVFNSdW50aW1lQ29ubmVjdGlv
bkNvbGxlY3Rpb24xMDAASURUU1J1bnRpbWVDb25uZWN0aW9uMTAwAElEVFNDb25uZWN0aW9uTWFu
YWdlcjEwMABJRW51bWVyYWJsZWAxAFNDX2I2OGYxMmU5MzcyOTQyMzRiODAxMzNiMWYyZjgxYTE3
ADxNb2R1bGU+AElucHV0SUQAZ2V0X0NvbXBvbmVudE1ldGFEYXRhAG1zY29ybGliAFN5c3RlbS5D
b2xsZWN0aW9ucy5HZW5lcmljAHNldF9pc1ZhbGlkAGRlZmF1bHRJbnN0YW5jZQBFbnVtZXJhYmxl
AFJ1bnRpbWVUeXBlSGFuZGxlAEdldFR5cGVGcm9tSGFuZGxlAElucHV0TmFtZQBHZXRSdW50aW1l
Q29ubmVjdGlvbkJ5TmFtZQBNaWNyb3NvZnQuU3FsU2VydmVyLkR0cy5QaXBlbGluZQBUeXBlAFN5
c3RlbS5Db3JlAGdldF9DdWx0dXJlAHNldF9DdWx0dXJlAHJlc291cmNlQ3VsdHVyZQBBcHBsaWNh
dGlvblNldHRpbmdzQmFzZQBFZGl0b3JCcm93c2FibGVTdGF0ZQBDb21waWxlckdlbmVyYXRlZEF0
dHJpYnV0ZQBEZWJ1Z2dlck5vblVzZXJDb2RlQXR0cmlidXRlAERlYnVnZ2FibGVBdHRyaWJ1dGUA
RWRpdG9yQnJvd3NhYmxlQXR0cmlidXRlAEFzc2VtYmx5VGl0bGVBdHRyaWJ1dGUAQXNzZW1ibHlU
cmFkZW1hcmtBdHRyaWJ1dGUAVGFyZ2V0RnJhbWV3b3JrQXR0cmlidXRlAEFzc2VtYmx5Q29uZmln
dXJhdGlvbkF0dHJpYnV0ZQBBc3NlbWJseURlc2NyaXB0aW9uQXR0cmlidXRlAENvbXBpbGF0aW9u
UmVsYXhhdGlvbnNBdHRyaWJ1dGUAQXNzZW1ibHlQcm9kdWN0QXR0cmlidXRlAEFzc2VtYmx5Q29w
eXJpZ2h0QXR0cmlidXRlAFNTSVNTY3JpcHRDb21wb25lbnRFbnRyeVBvaW50QXR0cmlidXRlAEFz
c2VtYmx5Q29tcGFueUF0dHJpYnV0ZQBSdW50aW1lQ29tcGF0aWJpbGl0eUF0dHJpYnV0ZQBQcmVF
eGVjdXRlAFBvc3RFeGVjdXRlAHZhbHVlAFN5c3RlbS5SdW50aW1lLlZlcnNpb25pbmcAR2V0U3Ry
aW5nAGdldF9MZW5ndGgAU3lzdGVtLkNvbXBvbmVudE1vZGVsAFNDX2I2OGYxMmU5MzcyOTQyMzRi
ODAxMzNiMWYyZjgxYTE3LmRsbABzZXRfaXNWYWxpZF9Jc051bGwAZ2V0X0VtYWlsbG9jYXBhcnRf
SXNOdWxsAFNldE51bGwAc2V0X0l0ZW0AU3lzdGVtAHJlc291cmNlTWFuAEJvb2xlYW4AU2NyaXB0
TWFpbgBTeXN0ZW0uQ29uZmlndXJhdGlvbgBTeXN0ZW0uR2xvYmFsaXphdGlvbgBTeXN0ZW0uUmVm
bGVjdGlvbgBnZXRfUnVudGltZUNvbm5lY3Rpb25Db2xsZWN0aW9uAGdldF9Db25uZWN0aW9uAElu
dmFsaWRPcGVyYXRpb25FeGNlcHRpb24AU3RyaW5nQ29tcGFyaXNvbgBDdWx0dXJlSW5mbwBPdXRw
dXROYW1lTWFwAE91dHB1dE1hcABNaWNyb3NvZnQuU3FsU2VydmVyLkRUU1J1bnRpbWVXcmFwAE1p
Y3Jvc29mdC5TcWxTZXJ2ZXIuRFRTUGlwZWxpbmVXcmFwAFN5c3RlbS5MaW5xAElucHV0MEJ1ZmZl
cgBQaXBlbGluZUJ1ZmZlcgBTY3JpcHRCdWZmZXIAZ2V0X1Jlc291cmNlTWFuYWdlcgBnZXRfQ29u
bmVjdGlvbk1hbmFnZXIATWljcm9zb2Z0LlNxbFNlcnZlci5EdHMuUnVudGltZS5XcmFwcGVyAE1p
Y3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlBpcGVsaW5lLldyYXBwZXIALmN0b3IALmNjdG9yAFN5c3Rl
bS5EaWFnbm9zdGljcwBTeXN0ZW0uUnVudGltZS5Db21waWxlclNlcnZpY2VzAFN5c3RlbS5SZXNv
dXJjZXMAU0NfYjY4ZjEyZTkzNzI5NDIzNGI4MDEzM2IxZjJmODFhMTcuUHJvcGVydGllcy5SZXNv
dXJjZXMucmVzb3VyY2VzAERlYnVnZ2luZ01vZGVzAFNDX2I2OGYxMmU5MzcyOTQyMzRiODAxMzNi
MWYyZjgxYTE3LlByb3BlcnRpZXMAVmFyaWFibGVzAEJ1ZmZlckNvbHVtbkluZGV4ZXMAR2V0Q29s
dW1uSW5kZXhlcwBTZXR0aW5ncwBFcXVhbHMAQ29udGFpbnMAQ29ubmVjdGlvbnMAZ2V0X0NoYXJz
AHNwZWNpYWxDaGFyYWN0ZXJzAE9iamVjdABFbmRPZlJvd3NldABnZXRfRGVmYXVsdABVc2VyQ29t
cG9uZW50AFBhcmVudENvbXBvbmVudABTY3JpcHRDb21wb25lbnQATWljcm9zb2Z0LlNxbFNlcnZl
ci5UeFNjcmlwdABnZXRfRW1haWxsb2NhcGFydABNaWNyb3NvZnQuU3FsU2VydmVyLlBpcGVsaW5l
SG9zdABJbnB1dDBfUHJvY2Vzc0lucHV0AElucHV0MF9Qcm9jZXNzSW5wdXRSb3cATmV4dFJvdwBU
b0NoYXJBcnJheQBnZXRfQXNzZW1ibHkAAAAAKSEAIwAkACUAJgAnACoAKwAtAC8APQA/AF4AXwBg
AHsAfAB9AH4ALgABgJtJAHMATgB1AGwAbAAgAHAAcgBvAHAAZQByAHQAeQAgAGMAYQBuAG4AbwB0
ACAAYgBlACAAcwBlAHQAIAB0AG8AIABGAGEAbABzAGUALgAgAEEAcwBzAGkAZwBuACAAYQAgAHYA
YQBsAHUAZQAgAHQAbwAgAHQAaABlACAAYwBvAGwAdQBtAG4AIABpAG4AcwB0AGUAYQBkAC4AAA9J
AG4AcAB1AHQAIAAwAAAVQwBvAG4AbgBlAGMAdABpAG8AbgAAcVMAQwBfAGIANgA4AGYAMQAyAGUA
OQAzADcAMgA5ADQAMgAzADQAYgA4ADAAMQAzADMAYgAxAGYAMgBmADgAMQBhADEANwAuAFAAcgBv
AHAAZQByAHQAaQBlAHMALgBSAGUAcwBvAHUAcgBjAGUAcwAA/NkJC6JGHEGzd++iXOKzugAEIAEB
CAMgAAEFIAEBEREEIAEBDgUgAQERXQUHAw4CCAQgAQMIDBABAgIVEnUBHgAeAAMKAQMDIAAIBCAA
HQMJIAMBEj0dCBJBAwYSPQMGHQgEIAEOCAQgAQIIBSACAQgcAyAAAgcgAgIOEYCBBSABHQgIBSAA
EoCFBSAAEoCJBiABEoCNDgQgABJNCAABEoCREYCVBSAAEoCZByACAQ4SgJkIt3pcVhk04IkIiYRd
zYCAzJEDBh0DAwYSFAMGEhgDBhJFAwYSVQMGElkDBhIgBSABARIMAyAADgQgAQECCSAEAQgOEj0S
QQUgAQESRQQAABJVBAAAElkFAAEBElkEAAASIAMAAAEDKAAOAygAAgQoABJNBAgAElUECAASWQQI
ABIgCAEACAAAAAAAHgEAAQBUAhZXcmFwTm9uRXhjZXB0aW9uVGhyb3dzAQgBAAIAAAAAACgBACNT
Q19iNjhmMTJlOTM3Mjk0MjM0YjgwMTMzYjFmMmY4MWExNwAABQEAAAAAFgEAEUNvcHlyaWdodCBA
ICAyMDI0AABJAQAaLk5FVEZyYW1ld29yayxWZXJzaW9uPXY0LjcBAFQOFEZyYW1ld29ya0Rpc3Bs
YXlOYW1lEi5ORVQgRnJhbWV3b3JrIDQuNwQBAAAAALQAAADOyu++AQAAAJEAAABsU3lzdGVtLlJl
c291cmNlcy5SZXNvdXJjZVJlYWRlciwgbXNjb3JsaWIsIFZlcnNpb249NC4wLjAuMCwgQ3VsdHVy
ZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5I1N5c3RlbS5SZXNvdXJj
ZXMuUnVudGltZVJlc291cmNlU2V0AgAAAAAAAAAAAAAAUEFEUEFEULQAAAB8NQAAAAAAAAAAAACW
NQAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAiDUAAAAAAAAAAAAAAABfQ29yRGxsTWFpbgBtc2Nv
cmVlLmRsbAAAAAAA/yUAIAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAABABAAAAAYAACAAAAAAAAAAAAAAAAAAAABAAEAAAAwAACAAAAAAAAAAAAAAAAAAAABAAAAAABI
AAAAWEAAAOwDAAAAAAAAAAAAAOwDNAAAAFYAUwBfAFYARQBSAFMASQBPAE4AXwBJAE4ARgBPAAAA
AAC9BO/+AAABAAAAAQAAAAAAAAABAAAAAAA/AAAAAAAAAAQAAAACAAAAAAAAAAAAAAAAAAAARAAA
AAEAVgBhAHIARgBpAGwAZQBJAG4AZgBvAAAAAAAkAAQAAABUAHIAYQBuAHMAbABhAHQAaQBvAG4A
AAAAAAAAsARMAwAAAQBTAHQAcgBpAG4AZwBGAGkAbABlAEkAbgBmAG8AAAAoAwAAAQAwADAAMAAw
ADAANABiADAAAAAaAAEAAQBDAG8AbQBtAGUAbgB0AHMAAAAAAAAAIgABAAEAQwBvAG0AcABhAG4A
eQBOAGEAbQBlAAAAAAAAAAAAcAAkAAEARgBpAGwAZQBEAGUAcwBjAHIAaQBwAHQAaQBvAG4AAAAA
AFMAQwBfAGIANgA4AGYAMQAyAGUAOQAzADcAMgA5ADQAMgAzADQAYgA4ADAAMQAzADMAYgAxAGYA
MgBmADgAMQBhADEANwAAADAACAABAEYAaQBsAGUAVgBlAHIAcwBpAG8AbgAAAAAAMQAuADAALgAw
AC4AMAAAAHAAKAABAEkAbgB0AGUAcgBuAGEAbABOAGEAbQBlAAAAUwBDAF8AYgA2ADgAZgAxADIA
ZQA5ADMANwAyADkANAAyADMANABiADgAMAAxADMAMwBiADEAZgAyAGYAOAAxAGEAMQA3AC4AZABs
AGwAAABIABIAAQBMAGUAZwBhAGwAQwBvAHAAeQByAGkAZwBoAHQAAABDAG8AcAB5AHIAaQBnAGgA
dAAgAEAAIAAgADIAMAAyADQAAAAqAAEAAQBMAGUAZwBhAGwAVAByAGEAZABlAG0AYQByAGsAcwAA
AAAAAAAAAHgAKAABAE8AcgBpAGcAaQBuAGEAbABGAGkAbABlAG4AYQBtAGUAAABTAEMAXwBiADYA
OABmADEAMgBlADkAMwA3ADIAOQA0ADIAMwA0AGIAOAAwADEAMwAzAGIAMQBmADIAZgA4ADEAYQAx
ADcALgBkAGwAbAAAAGgAJAABAFAAcgBvAGQAdQBjAHQATgBhAG0AZQAAAAAAUwBDAF8AYgA2ADgA
ZgAxADIAZQA5ADMANwAyADkANAAyADMANABiADgAMAAxADMAMwBiADEAZgAyAGYAOAAxAGEAMQA3
AAAANAAIAAEAUAByAG8AZAB1AGMAdABWAGUAcgBzAGkAbwBuAAAAMQAuADAALgAwAC4AMAAAADgA
CAABAEEAcwBzAGUAbQBiAGwAeQAgAFYAZQByAHMAaQBvAG4AAAAxAC4AMAAuADAALgAwAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADAAAAwAAACoNQAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=]]></arrayElement>
                  </arrayElements>
                </property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the Microsoft Visual Studio Tools for Applications project. Project names must be unique within a package."
                  name="VSTAProjectName"
                  typeConverter="NOTBROWSABLE">SC_b68f12e937294234b80133b1f2f81a17</property>
                <property
                  dataType="System.String"
                  description="Specifies the programming language used by the script."
                  name="ScriptLanguage"
                  typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages">CSharp</property>
                <property
                  dataType="System.String"
                  description="Specifies a comma-separated list of read-only variables."
                  name="ReadOnlyVariables"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg"></property>
                <property
                  dataType="System.String"
                  description="Specifies a comma-separated list of read/write variables."
                  name="ReadWriteVariables"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg"></property>
                <property
                  dataType="System.String"
                  description="List of breakpoints present on the script."
                  isArray="true"
                  name="BreakpointCollection"
                  typeConverter="NOTBROWSABLE">
                  <arrayElements
                    arrayElementCount="0" />
                </property>
                <property
                  dataType="System.String"
                  description="Checksum to match component metedata against compiled codes."
                  name="MetadataChecksum140"
                  typeConverter="NOTBROWSABLE">72</property>
                <property
                  dataType="System.String"
                  name="UserComponentTypeName">Microsoft.ScriptComponentHost</property>
              </properties>
              <connections>
                <connection
                  refId="Package\Data Extraction and Type Standardization\Script Component.Connections[Connection]"
                  connectionManagerID="Package.ConnectionManagers[KHALED.KoreAssignment_{Khaled_Elgohary\}]"
                  connectionManagerRefId="Package.ConnectionManagers[KHALED.KoreAssignment_{Khaled_Elgohary\}]"
                  name="Connection" />
              </connections>
              <inputs>
                <input
                  refId="Package\Data Extraction and Type Standardization\Script Component.Inputs[Input 0]"
                  hasSideEffects="true"
                  name="Input 0">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Data Extraction and Type Standardization\Script Component.Inputs[Input 0].Columns[Email_locapart]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="Email_locapart"
                      lineageId="Package\Data Extraction and Type Standardization\Email reverification.Outputs[Derived Column Output].Columns[Email_locapart]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Data Extraction and Type Standardization\Script Component.Outputs[IsValid]"
                  name="IsValid"
                  synchronousInputId="Package\Data Extraction and Type Standardization\Script Component.Inputs[Input 0]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Data Extraction and Type Standardization\Script Component.Outputs[IsValid].Columns[isValid]"
                      dataType="bool"
                      lineageId="Package\Data Extraction and Type Standardization\Script Component.Outputs[IsValid].Columns[isValid]"
                      name="isValid" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Data Extraction and Type Standardization\Sending Back for Review"
              componentClassID="Microsoft.DerivedColumn"
              contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
              name="Sending Back for Review"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\Data Extraction and Type Standardization\Sending Back for Review.Inputs[Derived Column Input]"
                  description="Input to the Derived Column Transformation"
                  name="Derived Column Input">
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Data Extraction and Type Standardization\Sending Back for Review.Outputs[Derived Column Output]"
                  description="Default Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  name="Derived Column Output"
                  synchronousInputId="Package\Data Extraction and Type Standardization\Sending Back for Review.Inputs[Derived Column Input]">
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Data Extraction and Type Standardization\Sending Back for Review.Outputs[Derived Column Error Output]"
                  description="Error Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Derived Column Error Output"
                  synchronousInputId="Package\Data Extraction and Type Standardization\Sending Back for Review.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Data Extraction and Type Standardization\Sending Back for Review.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Data Extraction and Type Standardization\Sending Back for Review.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Data Extraction and Type Standardization\Sending Back for Review.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Data Extraction and Type Standardization\Sending Back for Review.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Data Extraction and Type Standardization\Union All"
              componentClassID="Microsoft.UnionAll"
              contactInfo="Union All;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
              description="Combines rows from multiple data flows without sorting. For example, add rows back to a data flow after correction of errors. If sorting is important, we recommend using the Merge transformation."
              name="Union All"
              version="1">
              <inputs>
                <input
                  refId="Package\Data Extraction and Type Standardization\Union All.Inputs[Union All Input 1]"
                  name="Union All Input 1">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Data Extraction and Type Standardization\Union All.Inputs[Union All Input 1].Columns[ UserID]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName=" UserID"
                      lineageId="Package\Data Extraction and Type Standardization\Flat File Source.Outputs[Flat File Source Output].Columns[ UserID]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Data Extraction and Type Standardization\Union All.Outputs[Union All Output 1].Columns[ UserID]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Data Extraction and Type Standardization\Union All.Inputs[Union All Input 1].Columns[FullName]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="FullName"
                      lineageId="Package\Data Extraction and Type Standardization\Flat File Source.Outputs[Flat File Source Output].Columns[FullName]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Data Extraction and Type Standardization\Union All.Outputs[Union All Output 1].Columns[FullName]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Data Extraction and Type Standardization\Union All.Inputs[Union All Input 1].Columns[Age]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="Age"
                      lineageId="Package\Data Extraction and Type Standardization\Flat File Source.Outputs[Flat File Source Output].Columns[Age]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Data Extraction and Type Standardization\Union All.Outputs[Union All Output 1].Columns[Age]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Data Extraction and Type Standardization\Union All.Inputs[Union All Input 1].Columns[Email]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="Email"
                      lineageId="Package\Data Extraction and Type Standardization\Flat File Source.Outputs[Flat File Source Output].Columns[Email]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Data Extraction and Type Standardization\Union All.Outputs[Union All Output 1].Columns[Email]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Data Extraction and Type Standardization\Union All.Inputs[Union All Input 1].Columns[RegistrationDate]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="RegistrationDate"
                      lineageId="Package\Data Extraction and Type Standardization\Flat File Source.Outputs[Flat File Source Output].Columns[RegistrationDate]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Data Extraction and Type Standardization\Union All.Outputs[Union All Output 1].Columns[RegistrationDate]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Data Extraction and Type Standardization\Union All.Inputs[Union All Input 1].Columns[LastLoginDate]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="LastLoginDate"
                      lineageId="Package\Data Extraction and Type Standardization\Flat File Source.Outputs[Flat File Source Output].Columns[LastLoginDate]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Data Extraction and Type Standardization\Union All.Outputs[Union All Output 1].Columns[LastLoginDate]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Data Extraction and Type Standardization\Union All.Inputs[Union All Input 1].Columns[PurchaseTotal]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="PurchaseTotal"
                      lineageId="Package\Data Extraction and Type Standardization\Flat File Source.Outputs[Flat File Source Output].Columns[PurchaseTotal]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Data Extraction and Type Standardization\Union All.Outputs[Union All Output 1].Columns[PurchaseTotal]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Data Extraction and Type Standardization\Union All.Inputs[Union All Input 1].Columns[RegistrationDate_str]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="RegistrationDate_str"
                      lineageId="Package\Data Extraction and Type Standardization\Generalizing Date Format.Outputs[Derived Column Output].Columns[RegistrationDate_str]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Data Extraction and Type Standardization\Union All.Outputs[Union All Output 1].Columns[RegistrationDate_str]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Data Extraction and Type Standardization\Union All.Inputs[Union All Input 1].Columns[LastLoginDate_str]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="LastLoginDate_str"
                      lineageId="Package\Data Extraction and Type Standardization\Generalizing Date Format.Outputs[Derived Column Output].Columns[LastLoginDate_str]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Data Extraction and Type Standardization\Union All.Outputs[Union All Output 1].Columns[LastLoginDate_str]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Data Extraction and Type Standardization\Union All.Inputs[Union All Input 1].Columns[RegistrationDate_stg]"
                      cachedDataType="wstr"
                      cachedLength="10"
                      cachedName="RegistrationDate_stg"
                      lineageId="Package\Data Extraction and Type Standardization\Concat into Date.Outputs[Derived Column Output].Columns[RegistrationDate_stg]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Data Extraction and Type Standardization\Union All.Outputs[Union All Output 1].Columns[RegistrationDate_stg]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Data Extraction and Type Standardization\Union All.Inputs[Union All Input 1].Columns[LastLoginDate_stg]"
                      cachedDataType="wstr"
                      cachedLength="10"
                      cachedName="LastLoginDate_stg"
                      lineageId="Package\Data Extraction and Type Standardization\Concat into Date.Outputs[Derived Column Output].Columns[LastLoginDate_stg]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Data Extraction and Type Standardization\Union All.Outputs[Union All Output 1].Columns[LastLoginDate_stg]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Data Extraction and Type Standardization\Union All.Inputs[Union All Input 1].Columns[UserID_stg]"
                      cachedDataType="wstr"
                      cachedLength="47"
                      cachedName="UserID_stg"
                      lineageId="Package\Data Extraction and Type Standardization\Format UserID.Outputs[Derived Column Output].Columns[UserID_stg]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Data Extraction and Type Standardization\Union All.Outputs[Union All Output 1].Columns[UserID_stg]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Data Extraction and Type Standardization\Union All.Inputs[Union All Input 1].Columns[Email_stg]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="Email_stg"
                      lineageId="Package\Data Extraction and Type Standardization\Check Email.Outputs[Derived Column Output].Columns[Email_stg]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Data Extraction and Type Standardization\Union All.Outputs[Union All Output 1].Columns[Email_stg]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Data Extraction and Type Standardization\Union All.Inputs[Union All Input 1].Columns[Age_stg]"
                      cachedDataType="i1"
                      cachedName="Age_stg"
                      lineageId="Package\Data Extraction and Type Standardization\Age Verification.Outputs[Derived Column Output].Columns[Age_stg]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Data Extraction and Type Standardization\Union All.Outputs[Union All Output 1].Columns[Age_stg]}</property>
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
                <input
                  refId="Package\Data Extraction and Type Standardization\Union All.Inputs[Union All Input 4]"
                  hasSideEffects="true"
                  name="Union All Input 4">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Data Extraction and Type Standardization\Union All.Inputs[Union All Input 4].Columns[ UserID]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName=" UserID"
                      lineageId="Package\Data Extraction and Type Standardization\Flat File Source.Outputs[Flat File Source Output].Columns[ UserID]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Data Extraction and Type Standardization\Union All.Outputs[Union All Output 1].Columns[ UserID]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Data Extraction and Type Standardization\Union All.Inputs[Union All Input 4].Columns[FullName]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="FullName"
                      lineageId="Package\Data Extraction and Type Standardization\Flat File Source.Outputs[Flat File Source Output].Columns[FullName]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Data Extraction and Type Standardization\Union All.Outputs[Union All Output 1].Columns[FullName]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Data Extraction and Type Standardization\Union All.Inputs[Union All Input 4].Columns[Age]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="Age"
                      lineageId="Package\Data Extraction and Type Standardization\Flat File Source.Outputs[Flat File Source Output].Columns[Age]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Data Extraction and Type Standardization\Union All.Outputs[Union All Output 1].Columns[Age]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Data Extraction and Type Standardization\Union All.Inputs[Union All Input 4].Columns[Email]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="Email"
                      lineageId="Package\Data Extraction and Type Standardization\Flat File Source.Outputs[Flat File Source Output].Columns[Email]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Data Extraction and Type Standardization\Union All.Outputs[Union All Output 1].Columns[Email]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Data Extraction and Type Standardization\Union All.Inputs[Union All Input 4].Columns[RegistrationDate]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="RegistrationDate"
                      lineageId="Package\Data Extraction and Type Standardization\Flat File Source.Outputs[Flat File Source Output].Columns[RegistrationDate]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Data Extraction and Type Standardization\Union All.Outputs[Union All Output 1].Columns[RegistrationDate]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Data Extraction and Type Standardization\Union All.Inputs[Union All Input 4].Columns[LastLoginDate]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="LastLoginDate"
                      lineageId="Package\Data Extraction and Type Standardization\Flat File Source.Outputs[Flat File Source Output].Columns[LastLoginDate]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Data Extraction and Type Standardization\Union All.Outputs[Union All Output 1].Columns[LastLoginDate]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Data Extraction and Type Standardization\Union All.Inputs[Union All Input 4].Columns[PurchaseTotal]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="PurchaseTotal"
                      lineageId="Package\Data Extraction and Type Standardization\Flat File Source.Outputs[Flat File Source Output].Columns[PurchaseTotal]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Data Extraction and Type Standardization\Union All.Outputs[Union All Output 1].Columns[PurchaseTotal]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Data Extraction and Type Standardization\Union All.Inputs[Union All Input 4].Columns[RegistrationDate_str]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="RegistrationDate_str"
                      lineageId="Package\Data Extraction and Type Standardization\Generalizing Date Format.Outputs[Derived Column Output].Columns[RegistrationDate_str]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Data Extraction and Type Standardization\Union All.Outputs[Union All Output 1].Columns[RegistrationDate_str]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Data Extraction and Type Standardization\Union All.Inputs[Union All Input 4].Columns[LastLoginDate_str]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="LastLoginDate_str"
                      lineageId="Package\Data Extraction and Type Standardization\Generalizing Date Format.Outputs[Derived Column Output].Columns[LastLoginDate_str]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Data Extraction and Type Standardization\Union All.Outputs[Union All Output 1].Columns[LastLoginDate_str]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Data Extraction and Type Standardization\Union All.Inputs[Union All Input 4].Columns[RegistrationDate_stg]"
                      cachedDataType="wstr"
                      cachedLength="10"
                      cachedName="RegistrationDate_stg"
                      lineageId="Package\Data Extraction and Type Standardization\Concat into Date.Outputs[Derived Column Output].Columns[RegistrationDate_stg]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Data Extraction and Type Standardization\Union All.Outputs[Union All Output 1].Columns[RegistrationDate_stg]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Data Extraction and Type Standardization\Union All.Inputs[Union All Input 4].Columns[LastLoginDate_stg]"
                      cachedDataType="wstr"
                      cachedLength="10"
                      cachedName="LastLoginDate_stg"
                      lineageId="Package\Data Extraction and Type Standardization\Concat into Date.Outputs[Derived Column Output].Columns[LastLoginDate_stg]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Data Extraction and Type Standardization\Union All.Outputs[Union All Output 1].Columns[LastLoginDate_stg]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Data Extraction and Type Standardization\Union All.Inputs[Union All Input 4].Columns[UserID_stg]"
                      cachedDataType="wstr"
                      cachedLength="47"
                      cachedName="UserID_stg"
                      lineageId="Package\Data Extraction and Type Standardization\Format UserID.Outputs[Derived Column Output].Columns[UserID_stg]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Data Extraction and Type Standardization\Union All.Outputs[Union All Output 1].Columns[UserID_stg]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Data Extraction and Type Standardization\Union All.Inputs[Union All Input 4].Columns[Email_stg]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="Email_stg"
                      lineageId="Package\Data Extraction and Type Standardization\Check Email.Outputs[Derived Column Output].Columns[Email_stg]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Data Extraction and Type Standardization\Union All.Outputs[Union All Output 1].Columns[Email_stg]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Data Extraction and Type Standardization\Union All.Inputs[Union All Input 4].Columns[Age_stg]"
                      cachedDataType="i1"
                      cachedName="Age_stg"
                      lineageId="Package\Data Extraction and Type Standardization\Age Verification.Outputs[Derived Column Output].Columns[Age_stg]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Data Extraction and Type Standardization\Union All.Outputs[Union All Output 1].Columns[Age_stg]}</property>
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
                <input
                  refId="Package\Data Extraction and Type Standardization\Union All.Inputs[Union All Input 2]"
                  hasSideEffects="true"
                  name="Union All Input 2">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Data Extraction and Type Standardization\Union All.Inputs[Union All Input 2].Columns[ UserID]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName=" UserID"
                      lineageId="Package\Data Extraction and Type Standardization\Flat File Source.Outputs[Flat File Source Output].Columns[ UserID]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Data Extraction and Type Standardization\Union All.Outputs[Union All Output 1].Columns[ UserID]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Data Extraction and Type Standardization\Union All.Inputs[Union All Input 2].Columns[FullName]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="FullName"
                      lineageId="Package\Data Extraction and Type Standardization\Flat File Source.Outputs[Flat File Source Output].Columns[FullName]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Data Extraction and Type Standardization\Union All.Outputs[Union All Output 1].Columns[FullName]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Data Extraction and Type Standardization\Union All.Inputs[Union All Input 2].Columns[Age]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="Age"
                      lineageId="Package\Data Extraction and Type Standardization\Flat File Source.Outputs[Flat File Source Output].Columns[Age]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Data Extraction and Type Standardization\Union All.Outputs[Union All Output 1].Columns[Age]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Data Extraction and Type Standardization\Union All.Inputs[Union All Input 2].Columns[Email]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="Email"
                      lineageId="Package\Data Extraction and Type Standardization\Flat File Source.Outputs[Flat File Source Output].Columns[Email]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Data Extraction and Type Standardization\Union All.Outputs[Union All Output 1].Columns[Email]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Data Extraction and Type Standardization\Union All.Inputs[Union All Input 2].Columns[RegistrationDate]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="RegistrationDate"
                      lineageId="Package\Data Extraction and Type Standardization\Flat File Source.Outputs[Flat File Source Output].Columns[RegistrationDate]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Data Extraction and Type Standardization\Union All.Outputs[Union All Output 1].Columns[RegistrationDate]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Data Extraction and Type Standardization\Union All.Inputs[Union All Input 2].Columns[LastLoginDate]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="LastLoginDate"
                      lineageId="Package\Data Extraction and Type Standardization\Flat File Source.Outputs[Flat File Source Output].Columns[LastLoginDate]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Data Extraction and Type Standardization\Union All.Outputs[Union All Output 1].Columns[LastLoginDate]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Data Extraction and Type Standardization\Union All.Inputs[Union All Input 2].Columns[PurchaseTotal]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="PurchaseTotal"
                      lineageId="Package\Data Extraction and Type Standardization\Flat File Source.Outputs[Flat File Source Output].Columns[PurchaseTotal]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Data Extraction and Type Standardization\Union All.Outputs[Union All Output 1].Columns[PurchaseTotal]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Data Extraction and Type Standardization\Union All.Inputs[Union All Input 2].Columns[RegistrationDate_str]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="RegistrationDate_str"
                      lineageId="Package\Data Extraction and Type Standardization\Generalizing Date Format.Outputs[Derived Column Output].Columns[RegistrationDate_str]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Data Extraction and Type Standardization\Union All.Outputs[Union All Output 1].Columns[RegistrationDate_str]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Data Extraction and Type Standardization\Union All.Inputs[Union All Input 2].Columns[LastLoginDate_str]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="LastLoginDate_str"
                      lineageId="Package\Data Extraction and Type Standardization\Generalizing Date Format.Outputs[Derived Column Output].Columns[LastLoginDate_str]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Data Extraction and Type Standardization\Union All.Outputs[Union All Output 1].Columns[LastLoginDate_str]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Data Extraction and Type Standardization\Union All.Inputs[Union All Input 2].Columns[RegistrationDate_stg]"
                      cachedDataType="wstr"
                      cachedLength="10"
                      cachedName="RegistrationDate_stg"
                      lineageId="Package\Data Extraction and Type Standardization\Concat into Date.Outputs[Derived Column Output].Columns[RegistrationDate_stg]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Data Extraction and Type Standardization\Union All.Outputs[Union All Output 1].Columns[RegistrationDate_stg]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Data Extraction and Type Standardization\Union All.Inputs[Union All Input 2].Columns[LastLoginDate_stg]"
                      cachedDataType="wstr"
                      cachedLength="10"
                      cachedName="LastLoginDate_stg"
                      lineageId="Package\Data Extraction and Type Standardization\Concat into Date.Outputs[Derived Column Output].Columns[LastLoginDate_stg]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Data Extraction and Type Standardization\Union All.Outputs[Union All Output 1].Columns[LastLoginDate_stg]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Data Extraction and Type Standardization\Union All.Inputs[Union All Input 2].Columns[UserID_stg]"
                      cachedDataType="wstr"
                      cachedLength="47"
                      cachedName="UserID_stg"
                      lineageId="Package\Data Extraction and Type Standardization\Format UserID.Outputs[Derived Column Output].Columns[UserID_stg]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Data Extraction and Type Standardization\Union All.Outputs[Union All Output 1].Columns[UserID_stg]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Data Extraction and Type Standardization\Union All.Inputs[Union All Input 2].Columns[Email_stg]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="Email_stg"
                      lineageId="Package\Data Extraction and Type Standardization\Check Email.Outputs[Derived Column Output].Columns[Email_stg]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Data Extraction and Type Standardization\Union All.Outputs[Union All Output 1].Columns[Email_stg]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Data Extraction and Type Standardization\Union All.Inputs[Union All Input 2].Columns[Age_stg]"
                      cachedDataType="i1"
                      cachedName="Age_stg"
                      lineageId="Package\Data Extraction and Type Standardization\Age Verification.Outputs[Derived Column Output].Columns[Age_stg]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Data Extraction and Type Standardization\Union All.Outputs[Union All Output 1].Columns[Age_stg]}</property>
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
                <input
                  refId="Package\Data Extraction and Type Standardization\Union All.Inputs[Union All Input 3]"
                  hasSideEffects="true"
                  name="Union All Input 3">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Data Extraction and Type Standardization\Union All.Inputs[Union All Input 3].Columns[ UserID]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName=" UserID"
                      lineageId="Package\Data Extraction and Type Standardization\Flat File Source.Outputs[Flat File Source Output].Columns[ UserID]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Data Extraction and Type Standardization\Union All.Outputs[Union All Output 1].Columns[ UserID]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Data Extraction and Type Standardization\Union All.Inputs[Union All Input 3].Columns[FullName]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="FullName"
                      lineageId="Package\Data Extraction and Type Standardization\Flat File Source.Outputs[Flat File Source Output].Columns[FullName]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Data Extraction and Type Standardization\Union All.Outputs[Union All Output 1].Columns[FullName]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Data Extraction and Type Standardization\Union All.Inputs[Union All Input 3].Columns[Age]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="Age"
                      lineageId="Package\Data Extraction and Type Standardization\Flat File Source.Outputs[Flat File Source Output].Columns[Age]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Data Extraction and Type Standardization\Union All.Outputs[Union All Output 1].Columns[Age]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Data Extraction and Type Standardization\Union All.Inputs[Union All Input 3].Columns[Email]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="Email"
                      lineageId="Package\Data Extraction and Type Standardization\Flat File Source.Outputs[Flat File Source Output].Columns[Email]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Data Extraction and Type Standardization\Union All.Outputs[Union All Output 1].Columns[Email]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Data Extraction and Type Standardization\Union All.Inputs[Union All Input 3].Columns[RegistrationDate]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="RegistrationDate"
                      lineageId="Package\Data Extraction and Type Standardization\Flat File Source.Outputs[Flat File Source Output].Columns[RegistrationDate]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Data Extraction and Type Standardization\Union All.Outputs[Union All Output 1].Columns[RegistrationDate]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Data Extraction and Type Standardization\Union All.Inputs[Union All Input 3].Columns[LastLoginDate]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="LastLoginDate"
                      lineageId="Package\Data Extraction and Type Standardization\Flat File Source.Outputs[Flat File Source Output].Columns[LastLoginDate]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Data Extraction and Type Standardization\Union All.Outputs[Union All Output 1].Columns[LastLoginDate]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Data Extraction and Type Standardization\Union All.Inputs[Union All Input 3].Columns[PurchaseTotal]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="PurchaseTotal"
                      lineageId="Package\Data Extraction and Type Standardization\Flat File Source.Outputs[Flat File Source Output].Columns[PurchaseTotal]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Data Extraction and Type Standardization\Union All.Outputs[Union All Output 1].Columns[PurchaseTotal]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Data Extraction and Type Standardization\Union All.Inputs[Union All Input 3].Columns[RegistrationDate_str]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="RegistrationDate_str"
                      lineageId="Package\Data Extraction and Type Standardization\Generalizing Date Format.Outputs[Derived Column Output].Columns[RegistrationDate_str]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Data Extraction and Type Standardization\Union All.Outputs[Union All Output 1].Columns[RegistrationDate_str]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Data Extraction and Type Standardization\Union All.Inputs[Union All Input 3].Columns[LastLoginDate_str]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="LastLoginDate_str"
                      lineageId="Package\Data Extraction and Type Standardization\Generalizing Date Format.Outputs[Derived Column Output].Columns[LastLoginDate_str]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Data Extraction and Type Standardization\Union All.Outputs[Union All Output 1].Columns[LastLoginDate_str]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Data Extraction and Type Standardization\Union All.Inputs[Union All Input 3].Columns[RegistrationDate_stg]"
                      cachedDataType="wstr"
                      cachedLength="10"
                      cachedName="RegistrationDate_stg"
                      lineageId="Package\Data Extraction and Type Standardization\Concat into Date.Outputs[Derived Column Output].Columns[RegistrationDate_stg]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Data Extraction and Type Standardization\Union All.Outputs[Union All Output 1].Columns[RegistrationDate_stg]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Data Extraction and Type Standardization\Union All.Inputs[Union All Input 3].Columns[LastLoginDate_stg]"
                      cachedDataType="wstr"
                      cachedLength="10"
                      cachedName="LastLoginDate_stg"
                      lineageId="Package\Data Extraction and Type Standardization\Concat into Date.Outputs[Derived Column Output].Columns[LastLoginDate_stg]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Data Extraction and Type Standardization\Union All.Outputs[Union All Output 1].Columns[LastLoginDate_stg]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Data Extraction and Type Standardization\Union All.Inputs[Union All Input 3].Columns[UserID_stg]"
                      cachedDataType="wstr"
                      cachedLength="47"
                      cachedName="UserID_stg"
                      lineageId="Package\Data Extraction and Type Standardization\Format UserID.Outputs[Derived Column Output].Columns[UserID_stg]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Data Extraction and Type Standardization\Union All.Outputs[Union All Output 1].Columns[UserID_stg]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Data Extraction and Type Standardization\Union All.Inputs[Union All Input 3].Columns[Email_stg]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="Email_stg"
                      lineageId="Package\Data Extraction and Type Standardization\Check Email.Outputs[Derived Column Output].Columns[Email_stg]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Data Extraction and Type Standardization\Union All.Outputs[Union All Output 1].Columns[Email_stg]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Data Extraction and Type Standardization\Union All.Inputs[Union All Input 3].Columns[Age_stg]"
                      cachedDataType="i1"
                      cachedName="Age_stg"
                      lineageId="Package\Data Extraction and Type Standardization\Age Verification.Outputs[Derived Column Output].Columns[Age_stg]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Data Extraction and Type Standardization\Union All.Outputs[Union All Output 1].Columns[Age_stg]}</property>
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
                <input
                  refId="Package\Data Extraction and Type Standardization\Union All.Inputs[Union All Input 6]"
                  hasSideEffects="true"
                  name="Union All Input 6">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Data Extraction and Type Standardization\Union All.Inputs[Union All Input 6].Columns[ UserID]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName=" UserID"
                      lineageId="Package\Data Extraction and Type Standardization\Flat File Source.Outputs[Flat File Source Output].Columns[ UserID]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Data Extraction and Type Standardization\Union All.Outputs[Union All Output 1].Columns[ UserID]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Data Extraction and Type Standardization\Union All.Inputs[Union All Input 6].Columns[FullName]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="FullName"
                      lineageId="Package\Data Extraction and Type Standardization\Flat File Source.Outputs[Flat File Source Output].Columns[FullName]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Data Extraction and Type Standardization\Union All.Outputs[Union All Output 1].Columns[FullName]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Data Extraction and Type Standardization\Union All.Inputs[Union All Input 6].Columns[Age]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="Age"
                      lineageId="Package\Data Extraction and Type Standardization\Flat File Source.Outputs[Flat File Source Output].Columns[Age]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Data Extraction and Type Standardization\Union All.Outputs[Union All Output 1].Columns[Age]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Data Extraction and Type Standardization\Union All.Inputs[Union All Input 6].Columns[Email]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="Email"
                      lineageId="Package\Data Extraction and Type Standardization\Flat File Source.Outputs[Flat File Source Output].Columns[Email]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Data Extraction and Type Standardization\Union All.Outputs[Union All Output 1].Columns[Email]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Data Extraction and Type Standardization\Union All.Inputs[Union All Input 6].Columns[RegistrationDate]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="RegistrationDate"
                      lineageId="Package\Data Extraction and Type Standardization\Flat File Source.Outputs[Flat File Source Output].Columns[RegistrationDate]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Data Extraction and Type Standardization\Union All.Outputs[Union All Output 1].Columns[RegistrationDate]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Data Extraction and Type Standardization\Union All.Inputs[Union All Input 6].Columns[LastLoginDate]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="LastLoginDate"
                      lineageId="Package\Data Extraction and Type Standardization\Flat File Source.Outputs[Flat File Source Output].Columns[LastLoginDate]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Data Extraction and Type Standardization\Union All.Outputs[Union All Output 1].Columns[LastLoginDate]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Data Extraction and Type Standardization\Union All.Inputs[Union All Input 6].Columns[PurchaseTotal]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="PurchaseTotal"
                      lineageId="Package\Data Extraction and Type Standardization\Flat File Source.Outputs[Flat File Source Output].Columns[PurchaseTotal]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Data Extraction and Type Standardization\Union All.Outputs[Union All Output 1].Columns[PurchaseTotal]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Data Extraction and Type Standardization\Union All.Inputs[Union All Input 6].Columns[RegistrationDate_str]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="RegistrationDate_str"
                      lineageId="Package\Data Extraction and Type Standardization\Generalizing Date Format.Outputs[Derived Column Output].Columns[RegistrationDate_str]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Data Extraction and Type Standardization\Union All.Outputs[Union All Output 1].Columns[RegistrationDate_str]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Data Extraction and Type Standardization\Union All.Inputs[Union All Input 6].Columns[LastLoginDate_str]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="LastLoginDate_str"
                      lineageId="Package\Data Extraction and Type Standardization\Generalizing Date Format.Outputs[Derived Column Output].Columns[LastLoginDate_str]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Data Extraction and Type Standardization\Union All.Outputs[Union All Output 1].Columns[LastLoginDate_str]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Data Extraction and Type Standardization\Union All.Inputs[Union All Input 6].Columns[RegistrationDate_stg]"
                      cachedDataType="wstr"
                      cachedLength="10"
                      cachedName="RegistrationDate_stg"
                      lineageId="Package\Data Extraction and Type Standardization\Concat into Date.Outputs[Derived Column Output].Columns[RegistrationDate_stg]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Data Extraction and Type Standardization\Union All.Outputs[Union All Output 1].Columns[RegistrationDate_stg]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Data Extraction and Type Standardization\Union All.Inputs[Union All Input 6].Columns[LastLoginDate_stg]"
                      cachedDataType="wstr"
                      cachedLength="10"
                      cachedName="LastLoginDate_stg"
                      lineageId="Package\Data Extraction and Type Standardization\Concat into Date.Outputs[Derived Column Output].Columns[LastLoginDate_stg]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Data Extraction and Type Standardization\Union All.Outputs[Union All Output 1].Columns[LastLoginDate_stg]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Data Extraction and Type Standardization\Union All.Inputs[Union All Input 6].Columns[UserID_stg]"
                      cachedDataType="wstr"
                      cachedLength="47"
                      cachedName="UserID_stg"
                      lineageId="Package\Data Extraction and Type Standardization\Format UserID.Outputs[Derived Column Output].Columns[UserID_stg]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Data Extraction and Type Standardization\Union All.Outputs[Union All Output 1].Columns[UserID_stg]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Data Extraction and Type Standardization\Union All.Inputs[Union All Input 6].Columns[Email_stg]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="Email_stg"
                      lineageId="Package\Data Extraction and Type Standardization\Check Email.Outputs[Derived Column Output].Columns[Email_stg]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Data Extraction and Type Standardization\Union All.Outputs[Union All Output 1].Columns[Email_stg]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Data Extraction and Type Standardization\Union All.Inputs[Union All Input 6].Columns[Age_stg]"
                      cachedDataType="i1"
                      cachedName="Age_stg"
                      lineageId="Package\Data Extraction and Type Standardization\Age Verification.Outputs[Derived Column Output].Columns[Age_stg]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Data Extraction and Type Standardization\Union All.Outputs[Union All Output 1].Columns[Age_stg]}</property>
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
                <input
                  refId="Package\Data Extraction and Type Standardization\Union All.Inputs[Union All Input 5]"
                  hasSideEffects="true"
                  name="Union All Input 5">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Data Extraction and Type Standardization\Union All.Inputs[Union All Input 5].Columns[ UserID]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName=" UserID"
                      lineageId="Package\Data Extraction and Type Standardization\Flat File Source.Outputs[Flat File Source Output].Columns[ UserID]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Data Extraction and Type Standardization\Union All.Outputs[Union All Output 1].Columns[ UserID]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Data Extraction and Type Standardization\Union All.Inputs[Union All Input 5].Columns[FullName]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="FullName"
                      lineageId="Package\Data Extraction and Type Standardization\Flat File Source.Outputs[Flat File Source Output].Columns[FullName]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Data Extraction and Type Standardization\Union All.Outputs[Union All Output 1].Columns[FullName]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Data Extraction and Type Standardization\Union All.Inputs[Union All Input 5].Columns[Age]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="Age"
                      lineageId="Package\Data Extraction and Type Standardization\Flat File Source.Outputs[Flat File Source Output].Columns[Age]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Data Extraction and Type Standardization\Union All.Outputs[Union All Output 1].Columns[Age]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Data Extraction and Type Standardization\Union All.Inputs[Union All Input 5].Columns[Email]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="Email"
                      lineageId="Package\Data Extraction and Type Standardization\Flat File Source.Outputs[Flat File Source Output].Columns[Email]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Data Extraction and Type Standardization\Union All.Outputs[Union All Output 1].Columns[Email]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Data Extraction and Type Standardization\Union All.Inputs[Union All Input 5].Columns[RegistrationDate]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="RegistrationDate"
                      lineageId="Package\Data Extraction and Type Standardization\Flat File Source.Outputs[Flat File Source Output].Columns[RegistrationDate]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Data Extraction and Type Standardization\Union All.Outputs[Union All Output 1].Columns[RegistrationDate]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Data Extraction and Type Standardization\Union All.Inputs[Union All Input 5].Columns[LastLoginDate]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="LastLoginDate"
                      lineageId="Package\Data Extraction and Type Standardization\Flat File Source.Outputs[Flat File Source Output].Columns[LastLoginDate]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Data Extraction and Type Standardization\Union All.Outputs[Union All Output 1].Columns[LastLoginDate]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Data Extraction and Type Standardization\Union All.Inputs[Union All Input 5].Columns[PurchaseTotal]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="PurchaseTotal"
                      lineageId="Package\Data Extraction and Type Standardization\Flat File Source.Outputs[Flat File Source Output].Columns[PurchaseTotal]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Data Extraction and Type Standardization\Union All.Outputs[Union All Output 1].Columns[PurchaseTotal]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Data Extraction and Type Standardization\Union All.Inputs[Union All Input 5].Columns[RegistrationDate_str]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="RegistrationDate_str"
                      lineageId="Package\Data Extraction and Type Standardization\Generalizing Date Format.Outputs[Derived Column Output].Columns[RegistrationDate_str]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Data Extraction and Type Standardization\Union All.Outputs[Union All Output 1].Columns[RegistrationDate_str]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Data Extraction and Type Standardization\Union All.Inputs[Union All Input 5].Columns[LastLoginDate_str]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="LastLoginDate_str"
                      lineageId="Package\Data Extraction and Type Standardization\Generalizing Date Format.Outputs[Derived Column Output].Columns[LastLoginDate_str]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Data Extraction and Type Standardization\Union All.Outputs[Union All Output 1].Columns[LastLoginDate_str]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Data Extraction and Type Standardization\Union All.Inputs[Union All Input 5].Columns[RegistrationDate_stg]"
                      cachedDataType="wstr"
                      cachedLength="10"
                      cachedName="RegistrationDate_stg"
                      lineageId="Package\Data Extraction and Type Standardization\Concat into Date.Outputs[Derived Column Output].Columns[RegistrationDate_stg]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Data Extraction and Type Standardization\Union All.Outputs[Union All Output 1].Columns[RegistrationDate_stg]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Data Extraction and Type Standardization\Union All.Inputs[Union All Input 5].Columns[LastLoginDate_stg]"
                      cachedDataType="wstr"
                      cachedLength="10"
                      cachedName="LastLoginDate_stg"
                      lineageId="Package\Data Extraction and Type Standardization\Concat into Date.Outputs[Derived Column Output].Columns[LastLoginDate_stg]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Data Extraction and Type Standardization\Union All.Outputs[Union All Output 1].Columns[LastLoginDate_stg]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Data Extraction and Type Standardization\Union All.Inputs[Union All Input 5].Columns[UserID_stg]"
                      cachedDataType="wstr"
                      cachedLength="47"
                      cachedName="UserID_stg"
                      lineageId="Package\Data Extraction and Type Standardization\Format UserID.Outputs[Derived Column Output].Columns[UserID_stg]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Data Extraction and Type Standardization\Union All.Outputs[Union All Output 1].Columns[UserID_stg]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Data Extraction and Type Standardization\Union All.Inputs[Union All Input 5].Columns[Email_stg]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="Email_stg"
                      lineageId="Package\Data Extraction and Type Standardization\Check Email.Outputs[Derived Column Output].Columns[Email_stg]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Data Extraction and Type Standardization\Union All.Outputs[Union All Output 1].Columns[Email_stg]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Data Extraction and Type Standardization\Union All.Inputs[Union All Input 5].Columns[Age_stg]"
                      cachedDataType="i1"
                      cachedName="Age_stg"
                      lineageId="Package\Data Extraction and Type Standardization\Age Verification.Outputs[Derived Column Output].Columns[Age_stg]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Data Extraction and Type Standardization\Union All.Outputs[Union All Output 1].Columns[Age_stg]}</property>
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
                <input
                  refId="Package\Data Extraction and Type Standardization\Union All.Inputs[Union All Input 7]"
                  dangling="true"
                  hasSideEffects="true"
                  name="Union All Input 7">
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Data Extraction and Type Standardization\Union All.Outputs[Union All Output 1]"
                  name="Union All Output 1">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Data Extraction and Type Standardization\Union All.Outputs[Union All Output 1].Columns[ UserID]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      lineageId="Package\Data Extraction and Type Standardization\Union All.Outputs[Union All Output 1].Columns[ UserID]"
                      name=" UserID" />
                    <outputColumn
                      refId="Package\Data Extraction and Type Standardization\Union All.Outputs[Union All Output 1].Columns[FullName]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      lineageId="Package\Data Extraction and Type Standardization\Union All.Outputs[Union All Output 1].Columns[FullName]"
                      name="FullName" />
                    <outputColumn
                      refId="Package\Data Extraction and Type Standardization\Union All.Outputs[Union All Output 1].Columns[Age]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      lineageId="Package\Data Extraction and Type Standardization\Union All.Outputs[Union All Output 1].Columns[Age]"
                      name="Age" />
                    <outputColumn
                      refId="Package\Data Extraction and Type Standardization\Union All.Outputs[Union All Output 1].Columns[Email]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      lineageId="Package\Data Extraction and Type Standardization\Union All.Outputs[Union All Output 1].Columns[Email]"
                      name="Email" />
                    <outputColumn
                      refId="Package\Data Extraction and Type Standardization\Union All.Outputs[Union All Output 1].Columns[RegistrationDate]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      lineageId="Package\Data Extraction and Type Standardization\Union All.Outputs[Union All Output 1].Columns[RegistrationDate]"
                      name="RegistrationDate" />
                    <outputColumn
                      refId="Package\Data Extraction and Type Standardization\Union All.Outputs[Union All Output 1].Columns[LastLoginDate]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      lineageId="Package\Data Extraction and Type Standardization\Union All.Outputs[Union All Output 1].Columns[LastLoginDate]"
                      name="LastLoginDate" />
                    <outputColumn
                      refId="Package\Data Extraction and Type Standardization\Union All.Outputs[Union All Output 1].Columns[PurchaseTotal]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      lineageId="Package\Data Extraction and Type Standardization\Union All.Outputs[Union All Output 1].Columns[PurchaseTotal]"
                      name="PurchaseTotal" />
                    <outputColumn
                      refId="Package\Data Extraction and Type Standardization\Union All.Outputs[Union All Output 1].Columns[RegistrationDate_str]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Data Extraction and Type Standardization\Union All.Outputs[Union All Output 1].Columns[RegistrationDate_str]"
                      name="RegistrationDate_str" />
                    <outputColumn
                      refId="Package\Data Extraction and Type Standardization\Union All.Outputs[Union All Output 1].Columns[LastLoginDate_str]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Data Extraction and Type Standardization\Union All.Outputs[Union All Output 1].Columns[LastLoginDate_str]"
                      name="LastLoginDate_str" />
                    <outputColumn
                      refId="Package\Data Extraction and Type Standardization\Union All.Outputs[Union All Output 1].Columns[RegistrationDate_stg]"
                      dataType="wstr"
                      length="10"
                      lineageId="Package\Data Extraction and Type Standardization\Union All.Outputs[Union All Output 1].Columns[RegistrationDate_stg]"
                      name="RegistrationDate_stg" />
                    <outputColumn
                      refId="Package\Data Extraction and Type Standardization\Union All.Outputs[Union All Output 1].Columns[LastLoginDate_stg]"
                      dataType="wstr"
                      length="10"
                      lineageId="Package\Data Extraction and Type Standardization\Union All.Outputs[Union All Output 1].Columns[LastLoginDate_stg]"
                      name="LastLoginDate_stg" />
                    <outputColumn
                      refId="Package\Data Extraction and Type Standardization\Union All.Outputs[Union All Output 1].Columns[UserID_stg]"
                      dataType="wstr"
                      length="47"
                      lineageId="Package\Data Extraction and Type Standardization\Union All.Outputs[Union All Output 1].Columns[UserID_stg]"
                      name="UserID_stg" />
                    <outputColumn
                      refId="Package\Data Extraction and Type Standardization\Union All.Outputs[Union All Output 1].Columns[Email_stg]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Data Extraction and Type Standardization\Union All.Outputs[Union All Output 1].Columns[Email_stg]"
                      name="Email_stg" />
                    <outputColumn
                      refId="Package\Data Extraction and Type Standardization\Union All.Outputs[Union All Output 1].Columns[Age_stg]"
                      dataType="i1"
                      lineageId="Package\Data Extraction and Type Standardization\Union All.Outputs[Union All Output 1].Columns[Age_stg]"
                      name="Age_stg" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
          </components>
          <paths>
            <path
              refId="Package\Data Extraction and Type Standardization.Paths[Case 1]"
              endId="Package\Data Extraction and Type Standardization\Data Conversion.Inputs[Data Conversion Input]"
              name="Case 1"
              startId="Package\Data Extraction and Type Standardization\Conditional Split.Outputs[Validated Full Name Format]" />
            <path
              refId="Package\Data Extraction and Type Standardization.Paths[Conditional Split Default Output]"
              endId="Package\Data Extraction and Type Standardization\Union All.Inputs[Union All Input 1]"
              name="Conditional Split Default Output"
              startId="Package\Data Extraction and Type Standardization\Conditional Split.Outputs[Incorrect Full Name Format]" />
            <path
              refId="Package\Data Extraction and Type Standardization.Paths[Data Conversion Error Output]"
              endId="Package\Data Extraction and Type Standardization\Union All.Inputs[Union All Input 4]"
              name="Data Conversion Error Output"
              startId="Package\Data Extraction and Type Standardization\Data Conversion.Outputs[Data Conversion Error Output]" />
            <path
              refId="Package\Data Extraction and Type Standardization.Paths[Data Conversion Output]"
              endId="Package\Data Extraction and Type Standardization\Check Dates.Inputs[Conditional Split Input]"
              name="Data Conversion Output"
              startId="Package\Data Extraction and Type Standardization\Data Conversion.Outputs[Data Conversion Output]" />
            <path
              refId="Package\Data Extraction and Type Standardization.Paths[Derived Column Output6]"
              endId="Package\Data Extraction and Type Standardization\Script Component.Inputs[Input 0]"
              name="Derived Column Output"
              startId="Package\Data Extraction and Type Standardization\Email reverification.Outputs[Derived Column Output]" />
            <path
              refId="Package\Data Extraction and Type Standardization.Paths[Derived Column Output5]"
              endId="Package\Data Extraction and Type Standardization\Conditional Split 1.Inputs[Conditional Split Input]"
              name="Derived Column Output"
              startId="Package\Data Extraction and Type Standardization\PurchaseTotal Rounding Up and error checks.Outputs[Derived Column Output]" />
            <path
              refId="Package\Data Extraction and Type Standardization.Paths[Derived Column Output4]"
              endId="Package\Data Extraction and Type Standardization\Age Verification.Inputs[Derived Column Input]"
              name="Derived Column Output"
              startId="Package\Data Extraction and Type Standardization\Check Email.Outputs[Derived Column Output]" />
            <path
              refId="Package\Data Extraction and Type Standardization.Paths[Derived Column Output7]"
              endId="Package\Data Extraction and Type Standardization\Flat File Destination.Inputs[Flat File Destination Input]"
              name="Derived Column Output"
              startId="Package\Data Extraction and Type Standardization\Sending Back for Review.Outputs[Derived Column Output]" />
            <path
              refId="Package\Data Extraction and Type Standardization.Paths[Derived Column Output2]"
              endId="Package\Data Extraction and Type Standardization\Check Email.Inputs[Derived Column Input]"
              name="Derived Column Output"
              startId="Package\Data Extraction and Type Standardization\Format UserID.Outputs[Derived Column Output]" />
            <path
              refId="Package\Data Extraction and Type Standardization.Paths[Derived Column Output1]"
              endId="Package\Data Extraction and Type Standardization\Format UserID.Inputs[Derived Column Input]"
              name="Derived Column Output"
              startId="Package\Data Extraction and Type Standardization\Concat into Date.Outputs[Derived Column Output]" />
            <path
              refId="Package\Data Extraction and Type Standardization.Paths[Derived Column Output]"
              endId="Package\Data Extraction and Type Standardization\Concat into Date.Inputs[Derived Column Input]"
              name="Derived Column Output"
              startId="Package\Data Extraction and Type Standardization\Generalizing Date Format.Outputs[Derived Column Output]" />
            <path
              refId="Package\Data Extraction and Type Standardization.Paths[Derived Column Output3]"
              endId="Package\Data Extraction and Type Standardization\Conditional Split.Inputs[Conditional Split Input]"
              name="Derived Column Output"
              startId="Package\Data Extraction and Type Standardization\Age Verification.Outputs[Derived Column Output]" />
            <path
              refId="Package\Data Extraction and Type Standardization.Paths[Flat File Source Output]"
              endId="Package\Data Extraction and Type Standardization\Generalizing Date Format.Inputs[Derived Column Input]"
              name="Flat File Source Output"
              startId="Package\Data Extraction and Type Standardization\Flat File Source.Outputs[Flat File Source Output]" />
            <path
              refId="Package\Data Extraction and Type Standardization.Paths[Invalid Dates]"
              endId="Package\Data Extraction and Type Standardization\Union All.Inputs[Union All Input 2]"
              name="Invalid Dates"
              startId="Package\Data Extraction and Type Standardization\Check Dates.Outputs[Invalid Dates]" />
            <path
              refId="Package\Data Extraction and Type Standardization.Paths[inValid Email]"
              endId="Package\Data Extraction and Type Standardization\Union All.Inputs[Union All Input 5]"
              name="inValid Email"
              startId="Package\Data Extraction and Type Standardization\Email Redirection.Outputs[inValid Email]" />
            <path
              refId="Package\Data Extraction and Type Standardization.Paths[Invalid PurchaseTotal]"
              endId="Package\Data Extraction and Type Standardization\Union All.Inputs[Union All Input 6]"
              name="Invalid PurchaseTotal"
              startId="Package\Data Extraction and Type Standardization\Conditional Split 1.Outputs[Invalid PurchaseTotal]" />
            <path
              refId="Package\Data Extraction and Type Standardization.Paths[IsValid]"
              endId="Package\Data Extraction and Type Standardization\Email Redirection.Inputs[Conditional Split Input]"
              name="IsValid"
              startId="Package\Data Extraction and Type Standardization\Script Component.Outputs[IsValid]" />
            <path
              refId="Package\Data Extraction and Type Standardization.Paths[Nulls]"
              endId="Package\Data Extraction and Type Standardization\Union All.Inputs[Union All Input 3]"
              name="Nulls"
              startId="Package\Data Extraction and Type Standardization\Null Checks on Table.Outputs[Nulls]" />
            <path
              refId="Package\Data Extraction and Type Standardization.Paths[Rows without Nulls]"
              endId="Package\Data Extraction and Type Standardization\PurchaseTotal Rounding Up and error checks.Inputs[Derived Column Input]"
              name="Rows without Nulls"
              startId="Package\Data Extraction and Type Standardization\Null Checks on Table.Outputs[Rows without Nulls]" />
            <path
              refId="Package\Data Extraction and Type Standardization.Paths[Union All Output 1]"
              endId="Package\Data Extraction and Type Standardization\Sending Back for Review.Inputs[Derived Column Input]"
              name="Union All Output 1"
              startId="Package\Data Extraction and Type Standardization\Union All.Outputs[Union All Output 1]" />
            <path
              refId="Package\Data Extraction and Type Standardization.Paths[Valid Dates]"
              endId="Package\Data Extraction and Type Standardization\Null Checks on Table.Inputs[Conditional Split Input]"
              name="Valid Dates"
              startId="Package\Data Extraction and Type Standardization\Check Dates.Outputs[Valid Dates]" />
            <path
              refId="Package\Data Extraction and Type Standardization.Paths[Valid Email]"
              endId="Package\Data Extraction and Type Standardization\OLE DB Destination.Inputs[OLE DB Destination Input]"
              name="Valid Email"
              startId="Package\Data Extraction and Type Standardization\Email Redirection.Outputs[Valid Email]" />
            <path
              refId="Package\Data Extraction and Type Standardization.Paths[Valid PurchaseTotal]"
              endId="Package\Data Extraction and Type Standardization\Email reverification.Inputs[Derived Column Input]"
              name="Valid PurchaseTotal"
              startId="Package\Data Extraction and Type Standardization\Conditional Split 1.Outputs[Valid PurchaseTotal]" />
          </paths>
        </pipeline>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Duplicates check and Loading to Production"
      DTS:CreationName="Microsoft.Pipeline"
      DTS:Description="Data Flow Task"
      DTS:DTSID="{104976EB-838B-4CEA-8F15-A9FDC8A7D8ED}"
      DTS:ExecutableType="Microsoft.Pipeline"
      DTS:LocaleID="-1"
      DTS:ObjectName="Duplicates check and Loading to Production"
      DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
      <DTS:Variables />
      <DTS:ObjectData>
        <pipeline
          version="1">
          <components>
            <component
              refId="Package\Duplicates check and Loading to Production\Lookup"
              componentClassID="Microsoft.Lookup"
              contactInfo="Lookup;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;6"
              description="Joins additional columns to the data flow by looking up values in a table. For example, join to the 'employee id' column the employees table to get 'hire date' and 'employee name'. We recommend this transformation when the lookup table can fit into memory."
              name="Lookup"
              usesDispositions="true"
              version="6">
              <properties>
                <property
                  dataType="System.String"
                  description="Specifies the SQL statement that generates the lookup table."
                  expressionType="Notify"
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">select * from [prod].[Users]</property>
                <property
                  dataType="System.String"
                  description="Specifies a SQL statement that uses parameters to generate the lookup table."
                  expressionType="Notify"
                  name="SqlCommandParam"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">select * from (select * from [prod].[Users]) [refTable]
where [refTable].[UserID] = ?</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the type of connection used to access the reference dataset."
                  name="ConnectionType"
                  typeConverter="LookupConnectionType">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the cache type of the lookup table."
                  name="CacheType"
                  typeConverter="CacheType">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies how the Lookup transformation handles rows without matching entries in the reference data set."
                  name="NoMatchBehavior"
                  typeConverter="LookupNoMatchBehavior">1</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the percentage of the cache that is allocated for rows with no matching entries in the reference dataset."
                  name="NoMatchCachePercentage">0</property>
                <property
                  dataType="System.Int32"
                  description="Maximum Memory Usage for Reference Cache on a 32 bit platform."
                  name="MaxMemoryUsage">25</property>
                <property
                  dataType="System.Int64"
                  description="Maximum Memory Usage for Reference Cache on a 64 bit platform."
                  name="MaxMemoryUsage64">25</property>
                <property
                  dataType="System.String"
                  description="Indicates whether to reference metadata in an XML format."
                  name="ReferenceMetadataXml">&lt;referenceMetadata&gt;&lt;referenceColumns&gt;&lt;referenceColumn name="ID" dataType="DT_I4" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="UserID" dataType="DT_I4" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="FullName" dataType="DT_WSTR" length="255" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="Age" dataType="DT_I4" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="Email" dataType="DT_WSTR" length="255" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="RegistrationDate" dataType="DT_DBDATE" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="LastLoginDate" dataType="DT_DBDATE" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="PurchaseTotal" dataType="DT_R8" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="RecordLastUpdated" dataType="DT_DBTIMESTAMP" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;/referenceColumns&gt;&lt;/referenceMetadata&gt;</property>
                <property
                  containsID="true"
                  dataType="System.String"
                  description="Specifies the list of lineage identifiers that map to the parameters that the SQL statement in the SQLCommand property uses. Entries in the list are separated by semicolons."
                  name="ParameterMap">#{Package\Duplicates check and Loading to Production\Stg.Outputs[OLE DB Source Output].Columns[UserID]};</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Determines whether duplicate keys in the reference data should be treated as errors when full cache mode is used."
                  name="TreatDuplicateKeysAsError">false</property>
              </properties>
              <connections>
                <connection
                  refId="Package\Duplicates check and Loading to Production\Lookup.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[KHALED.KoreAssignment_{Khaled_Elgohary\}]"
                  connectionManagerRefId="Package.ConnectionManagers[KHALED.KoreAssignment_{Khaled_Elgohary\}]"
                  description="Connection manager used to access lookup data."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\Duplicates check and Loading to Production\Lookup.Inputs[Lookup Input]"
                  name="Lookup Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Duplicates check and Loading to Production\Lookup.Inputs[Lookup Input].Columns[UserID]"
                      cachedDataType="i4"
                      cachedName="UserID"
                      lineageId="Package\Duplicates check and Loading to Production\Stg.Outputs[OLE DB Source Output].Columns[UserID]">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the column in the reference table that a column joins."
                          name="JoinToReferenceColumn">UserID</property>
                        <property
                          dataType="System.Null"
                          description="Specifies the column in the reference table from which a column is copied."
                          name="CopyFromReferenceColumn" />
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Duplicates check and Loading to Production\Lookup.Outputs[Lookup Match Output]"
                  errorOrTruncationOperation="Lookup"
                  exclusionGroup="1"
                  name="Lookup Match Output"
                  synchronousInputId="Package\Duplicates check and Loading to Production\Lookup.Inputs[Lookup Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Duplicates check and Loading to Production\Lookup.Outputs[Lookup Match Output].Columns[UserID]"
                      dataType="i4"
                      errorOrTruncationOperation="Copy Column"
                      lineageId="Package\Duplicates check and Loading to Production\Lookup.Outputs[Lookup Match Output].Columns[UserID]"
                      name="UserID"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the column in the reference table from which a column is copied."
                          name="CopyFromReferenceColumn">UserID</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Duplicates check and Loading to Production\Lookup.Outputs[Lookup No Match Output]"
                  description="The Lookup output that handles rows with no matching entries in the reference dataset. Use this output when the NoMatchBehavior property is set to &quot;Send rows with no matching entries to the no match output.&quot;"
                  exclusionGroup="1"
                  name="Lookup No Match Output"
                  synchronousInputId="Package\Duplicates check and Loading to Production\Lookup.Inputs[Lookup Input]">
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Duplicates check and Loading to Production\Lookup.Outputs[Lookup Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Lookup Error Output"
                  synchronousInputId="Package\Duplicates check and Loading to Production\Lookup.Inputs[Lookup Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Duplicates check and Loading to Production\Lookup.Outputs[Lookup Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Duplicates check and Loading to Production\Lookup.Outputs[Lookup Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Duplicates check and Loading to Production\Lookup.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Duplicates check and Loading to Production\Lookup.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Duplicates check and Loading to Production\OLE DB Command"
              componentClassID="Microsoft.OLEDBCommand"
              contactInfo="OLE DB Command;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;2"
              description="Runs an SQL statement for each row in a data flow. For example, call a 'new employee setup' stored procedure for each row in the 'new employees' table. Note: running an SQL statement for each row of a large data flow may take a long time."
              name="OLE DB Command"
              usesDispositions="true"
              version="2">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  expressionType="Notify"
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">UPDATE [prod].Users
SET
      FullName=src.FullName,
      Age= src.Age,
      Email=src.Email,
      RegistrationDate=src.RegistrationDate,
      LastLoginDate=src.LastLoginDate,
      PurchaseTotal=src.PurchaseTotal
FROM [prod].Users AS prod
JOIN(
    SELECT TOP 1*
    FROM [stg].Users
    ORDER BY RegistrationDate DESC
) AS src
ON prod.userID = src.UserID</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
              </properties>
              <connections>
                <connection
                  refId="Package\Duplicates check and Loading to Production\OLE DB Command.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[KHALED.KoreAssignment_{Khaled_Elgohary\}]"
                  connectionManagerRefId="Package.ConnectionManagers[KHALED.KoreAssignment_{Khaled_Elgohary\}]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\Duplicates check and Loading to Production\OLE DB Command.Inputs[OLE DB Command Input]"
                  errorOrTruncationOperation="Command Execution"
                  errorRowDisposition="FailComponent"
                  hasSideEffects="true"
                  name="OLE DB Command Input">
                  <externalMetadataColumns
                    isUsed="True" />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Duplicates check and Loading to Production\OLE DB Command.Outputs[OLE DB Command Output]"
                  exclusionGroup="1"
                  name="OLE DB Command Output"
                  synchronousInputId="Package\Duplicates check and Loading to Production\OLE DB Command.Inputs[OLE DB Command Input]">
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Duplicates check and Loading to Production\OLE DB Command.Outputs[OLE DB Command Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="OLE DB Command Error Output"
                  synchronousInputId="Package\Duplicates check and Loading to Production\OLE DB Command.Inputs[OLE DB Command Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Duplicates check and Loading to Production\OLE DB Command.Outputs[OLE DB Command Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Duplicates check and Loading to Production\OLE DB Command.Outputs[OLE DB Command Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Duplicates check and Loading to Production\OLE DB Command.Outputs[OLE DB Command Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Duplicates check and Loading to Production\OLE DB Command.Outputs[OLE DB Command Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Duplicates check and Loading to Production\OLE DB Destination"
              componentClassID="Microsoft.OLEDBDestination"
              contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
              description="OLE DB Destination"
              name="OLE DB Destination"
              usesDispositions="true"
              version="4">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset">[prod].[Users]</property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Forces the use of the DefaultCodePage property value when describing character data."
                  name="AlwaysUseDefaultCodePage">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">3</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepIdentity">false</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepNulls">false</property>
                <property
                  dataType="System.String"
                  description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                  name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                <property
                  dataType="System.Int32"
                  description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                  name="FastLoadMaxInsertCommitSize">2147483647</property>
              </properties>
              <connections>
                <connection
                  refId="Package\Duplicates check and Loading to Production\OLE DB Destination.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[KHALED.KoreAssignment_{Khaled_Elgohary\}]"
                  connectionManagerRefId="Package.ConnectionManagers[KHALED.KoreAssignment_{Khaled_Elgohary\}]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\Duplicates check and Loading to Production\OLE DB Destination.Inputs[OLE DB Destination Input]"
                  errorOrTruncationOperation="Insert"
                  errorRowDisposition="FailComponent"
                  hasSideEffects="true"
                  name="OLE DB Destination Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Duplicates check and Loading to Production\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[UserID]"
                      cachedDataType="i4"
                      cachedName="UserID"
                      externalMetadataColumnId="Package\Duplicates check and Loading to Production\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[UserID]"
                      lineageId="Package\Duplicates check and Loading to Production\Stg.Outputs[OLE DB Source Output].Columns[UserID]" />
                    <inputColumn
                      refId="Package\Duplicates check and Loading to Production\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[FullName]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="FullName"
                      externalMetadataColumnId="Package\Duplicates check and Loading to Production\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[FullName]"
                      lineageId="Package\Duplicates check and Loading to Production\Stg.Outputs[OLE DB Source Output].Columns[FullName]" />
                    <inputColumn
                      refId="Package\Duplicates check and Loading to Production\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Age]"
                      cachedDataType="i4"
                      cachedName="Age"
                      externalMetadataColumnId="Package\Duplicates check and Loading to Production\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Age]"
                      lineageId="Package\Duplicates check and Loading to Production\Stg.Outputs[OLE DB Source Output].Columns[Age]" />
                    <inputColumn
                      refId="Package\Duplicates check and Loading to Production\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Email]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="Email"
                      externalMetadataColumnId="Package\Duplicates check and Loading to Production\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Email]"
                      lineageId="Package\Duplicates check and Loading to Production\Stg.Outputs[OLE DB Source Output].Columns[Email]" />
                    <inputColumn
                      refId="Package\Duplicates check and Loading to Production\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[RegistrationDate]"
                      cachedDataType="dbDate"
                      cachedName="RegistrationDate"
                      externalMetadataColumnId="Package\Duplicates check and Loading to Production\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[RegistrationDate]"
                      lineageId="Package\Duplicates check and Loading to Production\Stg.Outputs[OLE DB Source Output].Columns[RegistrationDate]" />
                    <inputColumn
                      refId="Package\Duplicates check and Loading to Production\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[LastLoginDate]"
                      cachedDataType="dbDate"
                      cachedName="LastLoginDate"
                      externalMetadataColumnId="Package\Duplicates check and Loading to Production\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[LastLoginDate]"
                      lineageId="Package\Duplicates check and Loading to Production\Stg.Outputs[OLE DB Source Output].Columns[LastLoginDate]" />
                    <inputColumn
                      refId="Package\Duplicates check and Loading to Production\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[PurchaseTotal]"
                      cachedDataType="r8"
                      cachedName="PurchaseTotal"
                      externalMetadataColumnId="Package\Duplicates check and Loading to Production\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[PurchaseTotal]"
                      lineageId="Package\Duplicates check and Loading to Production\Stg.Outputs[OLE DB Source Output].Columns[PurchaseTotal]" />
                  </inputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Duplicates check and Loading to Production\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[ID]"
                      dataType="i4"
                      name="ID" />
                    <externalMetadataColumn
                      refId="Package\Duplicates check and Loading to Production\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[UserID]"
                      dataType="i4"
                      name="UserID" />
                    <externalMetadataColumn
                      refId="Package\Duplicates check and Loading to Production\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[FullName]"
                      dataType="wstr"
                      length="255"
                      name="FullName" />
                    <externalMetadataColumn
                      refId="Package\Duplicates check and Loading to Production\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Age]"
                      dataType="i4"
                      name="Age" />
                    <externalMetadataColumn
                      refId="Package\Duplicates check and Loading to Production\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Email]"
                      dataType="wstr"
                      length="255"
                      name="Email" />
                    <externalMetadataColumn
                      refId="Package\Duplicates check and Loading to Production\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[RegistrationDate]"
                      dataType="dbDate"
                      name="RegistrationDate" />
                    <externalMetadataColumn
                      refId="Package\Duplicates check and Loading to Production\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[LastLoginDate]"
                      dataType="dbDate"
                      name="LastLoginDate" />
                    <externalMetadataColumn
                      refId="Package\Duplicates check and Loading to Production\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[PurchaseTotal]"
                      dataType="r8"
                      name="PurchaseTotal" />
                    <externalMetadataColumn
                      refId="Package\Duplicates check and Loading to Production\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[RecordLastUpdated]"
                      dataType="dbTimeStamp"
                      name="RecordLastUpdated" />
                  </externalMetadataColumns>
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Duplicates check and Loading to Production\OLE DB Destination.Outputs[OLE DB Destination Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="OLE DB Destination Error Output"
                  synchronousInputId="Package\Duplicates check and Loading to Production\OLE DB Destination.Inputs[OLE DB Destination Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Duplicates check and Loading to Production\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Duplicates check and Loading to Production\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Duplicates check and Loading to Production\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Duplicates check and Loading to Production\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Duplicates check and Loading to Production\Stg"
              componentClassID="Microsoft.OLEDBSource"
              contactInfo="OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7"
              description="OLE DB Source"
              name="Stg"
              usesDispositions="true"
              version="7">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset">[stg].[Users]</property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                <property
                  dataType="System.String"
                  description="The variable that contains the SQL command to be executed."
                  name="SqlCommandVariable"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Forces the use of the DefaultCodePage property value when describing character data."
                  name="AlwaysUseDefaultCodePage">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">0</property>
                <property
                  dataType="System.String"
                  description="The mappings between the parameters in the SQL command and variables."
                  name="ParameterMapping"></property>
              </properties>
              <connections>
                <connection
                  refId="Package\Duplicates check and Loading to Production\Stg.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[KHALED.KoreAssignment_{Khaled_Elgohary\}]"
                  connectionManagerRefId="Package.ConnectionManagers[KHALED.KoreAssignment_{Khaled_Elgohary\}]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <outputs>
                <output
                  refId="Package\Duplicates check and Loading to Production\Stg.Outputs[OLE DB Source Output]"
                  name="OLE DB Source Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Duplicates check and Loading to Production\Stg.Outputs[OLE DB Source Output].Columns[StgID]"
                      dataType="i4"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Duplicates check and Loading to Production\Stg.Outputs[OLE DB Source Output].ExternalColumns[StgID]"
                      lineageId="Package\Duplicates check and Loading to Production\Stg.Outputs[OLE DB Source Output].Columns[StgID]"
                      name="StgID"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Duplicates check and Loading to Production\Stg.Outputs[OLE DB Source Output].Columns[UserID]"
                      dataType="i4"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Duplicates check and Loading to Production\Stg.Outputs[OLE DB Source Output].ExternalColumns[UserID]"
                      lineageId="Package\Duplicates check and Loading to Production\Stg.Outputs[OLE DB Source Output].Columns[UserID]"
                      name="UserID"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Duplicates check and Loading to Production\Stg.Outputs[OLE DB Source Output].Columns[FullName]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Duplicates check and Loading to Production\Stg.Outputs[OLE DB Source Output].ExternalColumns[FullName]"
                      length="255"
                      lineageId="Package\Duplicates check and Loading to Production\Stg.Outputs[OLE DB Source Output].Columns[FullName]"
                      name="FullName"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Duplicates check and Loading to Production\Stg.Outputs[OLE DB Source Output].Columns[Age]"
                      dataType="i4"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Duplicates check and Loading to Production\Stg.Outputs[OLE DB Source Output].ExternalColumns[Age]"
                      lineageId="Package\Duplicates check and Loading to Production\Stg.Outputs[OLE DB Source Output].Columns[Age]"
                      name="Age"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Duplicates check and Loading to Production\Stg.Outputs[OLE DB Source Output].Columns[Email]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Duplicates check and Loading to Production\Stg.Outputs[OLE DB Source Output].ExternalColumns[Email]"
                      length="255"
                      lineageId="Package\Duplicates check and Loading to Production\Stg.Outputs[OLE DB Source Output].Columns[Email]"
                      name="Email"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Duplicates check and Loading to Production\Stg.Outputs[OLE DB Source Output].Columns[RegistrationDate]"
                      dataType="dbDate"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Duplicates check and Loading to Production\Stg.Outputs[OLE DB Source Output].ExternalColumns[RegistrationDate]"
                      lineageId="Package\Duplicates check and Loading to Production\Stg.Outputs[OLE DB Source Output].Columns[RegistrationDate]"
                      name="RegistrationDate"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Duplicates check and Loading to Production\Stg.Outputs[OLE DB Source Output].Columns[LastLoginDate]"
                      dataType="dbDate"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Duplicates check and Loading to Production\Stg.Outputs[OLE DB Source Output].ExternalColumns[LastLoginDate]"
                      lineageId="Package\Duplicates check and Loading to Production\Stg.Outputs[OLE DB Source Output].Columns[LastLoginDate]"
                      name="LastLoginDate"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Duplicates check and Loading to Production\Stg.Outputs[OLE DB Source Output].Columns[PurchaseTotal]"
                      dataType="r8"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Duplicates check and Loading to Production\Stg.Outputs[OLE DB Source Output].ExternalColumns[PurchaseTotal]"
                      lineageId="Package\Duplicates check and Loading to Production\Stg.Outputs[OLE DB Source Output].Columns[PurchaseTotal]"
                      name="PurchaseTotal"
                      truncationRowDisposition="FailComponent" />
                  </outputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Duplicates check and Loading to Production\Stg.Outputs[OLE DB Source Output].ExternalColumns[StgID]"
                      dataType="i4"
                      name="StgID" />
                    <externalMetadataColumn
                      refId="Package\Duplicates check and Loading to Production\Stg.Outputs[OLE DB Source Output].ExternalColumns[UserID]"
                      dataType="i4"
                      name="UserID" />
                    <externalMetadataColumn
                      refId="Package\Duplicates check and Loading to Production\Stg.Outputs[OLE DB Source Output].ExternalColumns[FullName]"
                      dataType="wstr"
                      length="255"
                      name="FullName" />
                    <externalMetadataColumn
                      refId="Package\Duplicates check and Loading to Production\Stg.Outputs[OLE DB Source Output].ExternalColumns[Age]"
                      dataType="i4"
                      name="Age" />
                    <externalMetadataColumn
                      refId="Package\Duplicates check and Loading to Production\Stg.Outputs[OLE DB Source Output].ExternalColumns[Email]"
                      dataType="wstr"
                      length="255"
                      name="Email" />
                    <externalMetadataColumn
                      refId="Package\Duplicates check and Loading to Production\Stg.Outputs[OLE DB Source Output].ExternalColumns[RegistrationDate]"
                      dataType="dbDate"
                      name="RegistrationDate" />
                    <externalMetadataColumn
                      refId="Package\Duplicates check and Loading to Production\Stg.Outputs[OLE DB Source Output].ExternalColumns[LastLoginDate]"
                      dataType="dbDate"
                      name="LastLoginDate" />
                    <externalMetadataColumn
                      refId="Package\Duplicates check and Loading to Production\Stg.Outputs[OLE DB Source Output].ExternalColumns[PurchaseTotal]"
                      dataType="r8"
                      name="PurchaseTotal" />
                  </externalMetadataColumns>
                </output>
                <output
                  refId="Package\Duplicates check and Loading to Production\Stg.Outputs[OLE DB Source Error Output]"
                  isErrorOut="true"
                  name="OLE DB Source Error Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Duplicates check and Loading to Production\Stg.Outputs[OLE DB Source Error Output].Columns[StgID]"
                      dataType="i4"
                      lineageId="Package\Duplicates check and Loading to Production\Stg.Outputs[OLE DB Source Error Output].Columns[StgID]"
                      name="StgID" />
                    <outputColumn
                      refId="Package\Duplicates check and Loading to Production\Stg.Outputs[OLE DB Source Error Output].Columns[UserID]"
                      dataType="i4"
                      lineageId="Package\Duplicates check and Loading to Production\Stg.Outputs[OLE DB Source Error Output].Columns[UserID]"
                      name="UserID" />
                    <outputColumn
                      refId="Package\Duplicates check and Loading to Production\Stg.Outputs[OLE DB Source Error Output].Columns[FullName]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Duplicates check and Loading to Production\Stg.Outputs[OLE DB Source Error Output].Columns[FullName]"
                      name="FullName" />
                    <outputColumn
                      refId="Package\Duplicates check and Loading to Production\Stg.Outputs[OLE DB Source Error Output].Columns[Age]"
                      dataType="i4"
                      lineageId="Package\Duplicates check and Loading to Production\Stg.Outputs[OLE DB Source Error Output].Columns[Age]"
                      name="Age" />
                    <outputColumn
                      refId="Package\Duplicates check and Loading to Production\Stg.Outputs[OLE DB Source Error Output].Columns[Email]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Duplicates check and Loading to Production\Stg.Outputs[OLE DB Source Error Output].Columns[Email]"
                      name="Email" />
                    <outputColumn
                      refId="Package\Duplicates check and Loading to Production\Stg.Outputs[OLE DB Source Error Output].Columns[RegistrationDate]"
                      dataType="dbDate"
                      lineageId="Package\Duplicates check and Loading to Production\Stg.Outputs[OLE DB Source Error Output].Columns[RegistrationDate]"
                      name="RegistrationDate" />
                    <outputColumn
                      refId="Package\Duplicates check and Loading to Production\Stg.Outputs[OLE DB Source Error Output].Columns[LastLoginDate]"
                      dataType="dbDate"
                      lineageId="Package\Duplicates check and Loading to Production\Stg.Outputs[OLE DB Source Error Output].Columns[LastLoginDate]"
                      name="LastLoginDate" />
                    <outputColumn
                      refId="Package\Duplicates check and Loading to Production\Stg.Outputs[OLE DB Source Error Output].Columns[PurchaseTotal]"
                      dataType="r8"
                      lineageId="Package\Duplicates check and Loading to Production\Stg.Outputs[OLE DB Source Error Output].Columns[PurchaseTotal]"
                      name="PurchaseTotal" />
                    <outputColumn
                      refId="Package\Duplicates check and Loading to Production\Stg.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Duplicates check and Loading to Production\Stg.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Duplicates check and Loading to Production\Stg.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Duplicates check and Loading to Production\Stg.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
          </components>
          <paths>
            <path
              refId="Package\Duplicates check and Loading to Production.Paths[Lookup Match Output]"
              endId="Package\Duplicates check and Loading to Production\OLE DB Command.Inputs[OLE DB Command Input]"
              name="Lookup Match Output"
              startId="Package\Duplicates check and Loading to Production\Lookup.Outputs[Lookup Match Output]" />
            <path
              refId="Package\Duplicates check and Loading to Production.Paths[Lookup No Match Output]"
              endId="Package\Duplicates check and Loading to Production\OLE DB Destination.Inputs[OLE DB Destination Input]"
              name="Lookup No Match Output"
              startId="Package\Duplicates check and Loading to Production\Lookup.Outputs[Lookup No Match Output]" />
            <path
              refId="Package\Duplicates check and Loading to Production.Paths[OLE DB Source Output]"
              endId="Package\Duplicates check and Loading to Production\Lookup.Inputs[Lookup Input]"
              name="OLE DB Source Output"
              startId="Package\Duplicates check and Loading to Production\Stg.Outputs[OLE DB Source Output]" />
          </paths>
        </pipeline>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Initialize DB"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{B5236EB2-1680-4508-B375-DDC490BB7B55}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Initialize DB"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2022; © 2022 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{C599B812-7599-4409-B1B6-CD2ACD807D07}"
          SQLTask:SqlStatementSource="-- TODO: Replace {FirstName} and {LastName} with your actual first and last names before running this script 2 &#xA;&#xA;IF NOT EXISTS (SELECT * FROM sys.databases WHERE name = N'KoreAssignment_{Khaled_Elgohary}')&#xA;BEGIN &#xA;&#x9;CREATE DATABASE [KoreAssignment_{Khaled_Elgohary}]; &#xA;END &#xA;GO &#xA; &#xA;USE [KoreAssignment_{Khaled_Elgohary}] &#xA;GO &#xA; &#xA;-- Check and create stg schema if it does not exist &#xA;IF NOT EXISTS (SELECT * FROM sys.schemas WHERE name = N'stg') &#xA;BEGIN &#xA;&#x9;EXEC('CREATE SCHEMA stg'); &#xA;END &#xA;GO &#xA; &#xA; -- Check and create prod schema if it does not exist &#xA;IF NOT EXISTS (SELECT * FROM sys.schemas WHERE name = N'prod') &#xA;BEGIN &#xA;&#x9;EXEC('CREATE SCHEMA prod'); &#xA;END &#xA;GO &#xA; &#xA;-- Check and create stg.Users table if it does not exist &#xA;IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'stg.Users') AND type in (N'U')) &#xA;BEGIN &#xA;&#x9;CREATE TABLE stg.Users ( &#xA;&#x9;&#x9;StgID INT IDENTITY(1,1) PRIMARY KEY, &#xA;&#x9;&#x9;UserID INT, &#xA;&#x9;&#x9;FullName NVARCHAR(255), &#xA;&#x9;&#x9;Age INT, &#xA;&#x9;&#x9;Email NVARCHAR(255), &#xA;&#x9;&#x9;RegistrationDate DATE, &#xA;&#x9;&#x9;LastLoginDate DATE, &#xA;&#x9;&#x9;PurchaseTotal FLOAT &#xA;); &#xA;END &#xA;GO &#xA;&#xA;-- Check and create prod.Users table if it does not exist &#xA;IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'prod.Users') AND type in (N'U'))&#xA;BEGIN &#xA;&#x9;CREATE TABLE prod.Users ( &#xA;&#x9;&#x9;ID INT IDENTITY(1,1) PRIMARY KEY, &#xA;&#x9;&#x9;UserID INT, &#xA;&#x9;&#x9;FullName NVARCHAR(255), &#xA;&#x9;&#x9;Age INT, &#xA;&#x9;&#x9;Email NVARCHAR(255), &#xA;&#x9;&#x9;RegistrationDate DATE, &#xA;&#x9;&#x9;LastLoginDate DATE, &#xA;&#x9;&#x9;PurchaseTotal FLOAT, &#xA;&#x9;&#x9;RecordLastUpdated DATETIME DEFAULT GETDATE() &#xA;&#x9;&#x9;); &#xA;END&#xA;&#xA;&#xA;truncate table [prod].Users&#xA; &#xA;GO &#xA;&#xA;BEGIN&#xA;&#x9;INSERT INTO prod.Users (UserID, FullName, Age, Email, RegistrationDate, LastLoginDate, PurchaseTotal)&#xA;&#x9;VALUES&#xA;&#x9;&#x9;(101, 'John Doe', 30, 'johndoe@example.com', '2021-01-10', '2023-03-01', 150.00),&#xA;&#x9;&#x9;(102, 'Jane Smith', 25, 'janesmith@example.com', '2020-05-15', '2023-02-25', 200.00),&#xA;&#x9;&#x9;(103, 'Emily Johnson', 22, 'emilyjohnson@example.com', '2019-03-23', '2023-01-30', 120.50),&#xA;&#x9;&#x9;(104, 'Michael Brown', 35, 'michaelbrown@example.com', '2018-07-18', '2023-02-20', 300.75),&#xA;&#x9;&#x9;(105, 'Jessica Garcia', 28, 'jessicagarcia@example.com', '2022-08-05', '2023-02-18', 180.25),&#xA;&#x9;&#x9;(106, 'David Miller', 40, 'davidmiller@example.com', '2017-12-12', '2023-02-15', 220.40),&#xA;&#x9;&#x9;(107, 'Sarah Martinez', 33, 'sarahmartinez@example.com', '2018-11-30', '2023-02-10', 140.60),&#xA;&#x9;&#x9;(108, 'James Taylor', 29, 'jamestaylor@example.com', '2019-06-22', '2023-02-05', 210.00),&#xA;&#x9;&#x9;(109, 'Linda Anderson', 27, 'lindaanderson@example.com', '2021-04-16', '2023-01-25', 165.95),&#xA;&#x9;&#x9;(110, 'Robert Wilson', 31, 'robertwilson@example.com', '2020-02-20', '2023-01-20', 175.00);&#xA;END&#xA;&#xA;&#xA;truncate table [stg].Users" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:PrecedenceConstraints>
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint]"
      DTS:CreationName=""
      DTS:DTSID="{214241F4-E351-4534-BC54-33339C6A0197}"
      DTS:From="Package\Data Extraction and Type Standardization"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint"
      DTS:To="Package\Duplicates check and Loading to Production" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 1]"
      DTS:CreationName=""
      DTS:DTSID="{3854CD0F-44A7-40BB-AB3A-7347309C4521}"
      DTS:From="Package\Initialize DB"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 1"
      DTS:To="Package\Data Extraction and Type Standardization" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 2]"
      DTS:CreationName=""
      DTS:DTSID="{20CF55C4-69B9-4CEB-943C-2882437D82BF}"
      DTS:From="Package\Duplicates check and Loading to Production"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 2"
      DTS:To="Package\Back Up Database Task" />
  </DTS:PrecedenceConstraints>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--This CDATA section contains the layout information of the package. The section includes information such as (x,y) coordinates, width, and height.-->
<!--If you manually edit this section and make a mistake, you can delete it. -->
<!--The package will still be able to load normally but the previous layout information will be lost and the designer will automatically re-arrange the elements on the design surface.-->
<Objects
  Version="8">
  <!--Each node below will contain properties that do not affect runtime behavior.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="8" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml">
        <NodeLayout
          Size="282,42"
          Id="Package\Data Extraction and Type Standardization"
          TopLeft="116,203" />
        <NodeLayout
          Size="137,42"
          Id="Package\Initialize DB"
          TopLeft="186,84" />
        <NodeLayout
          Size="293,42"
          Id="Package\Duplicates check and Loading to Production"
          TopLeft="116,310" />
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint]"
          TopLeft="259.75,245">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,65"
              Start="0,0"
              End="0,57.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,57.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 1]"
          TopLeft="255.75,126">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,77"
              Start="0,0"
              End="0,69.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,69.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <NodeLayout
          Size="197,42"
          Id="Package\Back Up Database Task"
          TopLeft="157,432" />
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 2]"
          TopLeft="259,352">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,80"
              Start="0,0"
              End="0,72.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,72.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </Package>
  <TaskHost
    design-time-name="Package\Data Extraction and Type Standardization">
    <LayoutInfo>
      <GraphLayout
        Capacity="64" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="161,42"
          Id="Package\Data Extraction and Type Standardization\Data Conversion"
          TopLeft="915.722222222222,415.888888888889" />
        <NodeLayout
          Size="141,42"
          Id="Package\Data Extraction and Type Standardization\Check Email"
          TopLeft="918.25,320" />
        <NodeLayout
          Size="123,42"
          Id="Package\Data Extraction and Type Standardization\Union All"
          TopLeft="206.361111111111,793.111111111111" />
        <NodeLayout
          Size="205,42"
          Id="Package\Data Extraction and Type Standardization\Generalizing Date Format"
          TopLeft="250.25,102" />
        <NodeLayout
          Size="156,42"
          Id="Package\Data Extraction and Type Standardization\Flat File Source"
          TopLeft="578.25,0.6666666666667" />
        <NodeLayout
          Size="159,42"
          Id="Package\Data Extraction and Type Standardization\Conditional Split"
          TopLeft="193.25,373" />
        <NodeLayout
          Size="161,42"
          Id="Package\Data Extraction and Type Standardization\Concat into Date"
          TopLeft="439.25,212" />
        <NodeLayout
          Size="202,42"
          Id="Package\Data Extraction and Type Standardization\Sending Back for Review"
          TopLeft="53.2499999999999,876.555555555556" />
        <NodeLayout
          Size="156,42"
          Id="Package\Data Extraction and Type Standardization\Age Verification"
          TopLeft="192.25,225" />
        <NodeLayout
          Size="151,42"
          Id="Package\Data Extraction and Type Standardization\Format UserID"
          TopLeft="894.25,39" />
        <EdgeLayout
          Id="Package\Data Extraction and Type Standardization.Paths[Union All Output 1]"
          TopLeft="248.694444444444,835.111111111111">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-94.4444444444446,41.4444444444447"
              Start="0,0"
              End="-94.4444444444446,33.9444444444447">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,12.8970929195649" />
                  <mssgle:CubicBezierSegment
                    Point1="0,12.8970929195649"
                    Point2="0,16.8970929195649"
                    Point3="-4,16.8970929195649" />
                  <mssgle:LineSegment
                    End="-90.4444444444446,16.8970929195649" />
                  <mssgle:CubicBezierSegment
                    Point1="-90.4444444444446,16.8970929195649"
                    Point2="-94.4444444444446,16.8970929195649"
                    Point3="-94.4444444444446,20.8970929195649" />
                  <mssgle:LineSegment
                    End="-94.4444444444446,33.9444444444447" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Data Extraction and Type Standardization.Paths[Flat File Source Output]"
          TopLeft="656.25,42.6666666666667">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-303.5,59.3333333333333"
              Start="0,0"
              End="-303.5,51.8333333333333">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,25.6666666666667" />
                  <mssgle:CubicBezierSegment
                    Point1="0,25.6666666666667"
                    Point2="0,29.6666666666667"
                    Point3="-4,29.6666666666667" />
                  <mssgle:LineSegment
                    End="-299.5,29.6666666666667" />
                  <mssgle:CubicBezierSegment
                    Point1="-299.5,29.6666666666667"
                    Point2="-303.5,29.6666666666667"
                    Point3="-303.5,33.6666666666667" />
                  <mssgle:LineSegment
                    End="-303.5,51.8333333333333" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Data Extraction and Type Standardization.Paths[Derived Column Output4]"
          TopLeft="966.583333333333,320">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-671.666666666667,-53"
              Start="0,0"
              End="-671.666666666667,-45.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,-22.535192563081" />
                  <mssgle:CubicBezierSegment
                    Point1="0,-22.535192563081"
                    Point2="0,-26.535192563081"
                    Point3="-4,-26.535192563081" />
                  <mssgle:LineSegment
                    End="-667.666666666667,-26.535192563081" />
                  <mssgle:CubicBezierSegment
                    Point1="-667.666666666667,-26.535192563081"
                    Point2="-671.666666666667,-26.535192563081"
                    Point3="-671.666666666667,-30.535192563081" />
                  <mssgle:LineSegment
                    End="-671.666666666667,-45.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Data Extraction and Type Standardization.Paths[Derived Column Output3]"
          TopLeft="245.583333333333,267">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="27.1666666666667,106"
              Start="0,0"
              End="27.1666666666667,98.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,39.0456852791878" />
                  <mssgle:CubicBezierSegment
                    Point1="0,39.0456852791878"
                    Point2="0,43.0456852791878"
                    Point3="4,43.0456852791878" />
                  <mssgle:LineSegment
                    End="23.1666666666667,43.0456852791878" />
                  <mssgle:CubicBezierSegment
                    Point1="23.1666666666667,43.0456852791878"
                    Point2="27.1666666666667,43.0456852791878"
                    Point3="27.1666666666667,47.0456852791878" />
                  <mssgle:LineSegment
                    End="27.1666666666667,98.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Data Extraction and Type Standardization.Paths[Derived Column Output2]"
          TopLeft="993.583333333333,81">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="17.3333333333333,239"
              Start="0,0"
              End="17.3333333333333,231.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,115.390742857143" />
                  <mssgle:CubicBezierSegment
                    Point1="0,115.390742857143"
                    Point2="0,119.390742857143"
                    Point3="4,119.390742857143" />
                  <mssgle:LineSegment
                    End="13.3333333333333,119.390742857143" />
                  <mssgle:CubicBezierSegment
                    Point1="13.3333333333333,119.390742857143"
                    Point2="17.3333333333333,119.390742857143"
                    Point3="17.3333333333333,123.390742857143" />
                  <mssgle:LineSegment
                    End="17.3333333333333,231.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Data Extraction and Type Standardization.Paths[Derived Column Output1]"
          TopLeft="545.25,212">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="400.666666666667,-131"
              Start="0,0"
              End="400.666666666667,-123.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,-61.4474634048526" />
                  <mssgle:CubicBezierSegment
                    Point1="0,-61.4474634048526"
                    Point2="0,-65.4474634048526"
                    Point3="4,-65.4474634048526" />
                  <mssgle:LineSegment
                    End="396.666666666667,-65.4474634048526" />
                  <mssgle:CubicBezierSegment
                    Point1="396.666666666667,-65.4474634048526"
                    Point2="400.666666666667,-65.4474634048526"
                    Point3="400.666666666667,-69.4474634048526" />
                  <mssgle:LineSegment
                    End="400.666666666667,-123.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Data Extraction and Type Standardization.Paths[Derived Column Output]"
          TopLeft="352.75,144">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="141.5,68"
              Start="0,0"
              End="141.5,60.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,36.3985239852399" />
                  <mssgle:CubicBezierSegment
                    Point1="0,36.3985239852399"
                    Point2="0,40.3985239852399"
                    Point3="4,40.3985239852399" />
                  <mssgle:LineSegment
                    End="137.5,40.3985239852399" />
                  <mssgle:CubicBezierSegment
                    Point1="137.5,40.3985239852399"
                    Point2="141.5,40.3985239852399"
                    Point3="141.5,44.3985239852399" />
                  <mssgle:LineSegment
                    End="141.5,60.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Data Extraction and Type Standardization.Paths[Data Conversion Error Output]"
          TopLeft="970.722222222222,457.888888888889">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-691.361111111111,335.222222222222"
              Start="0,0"
              End="-691.361111111111,327.722222222222">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,149.073124085949" />
                  <mssgle:CubicBezierSegment
                    Point1="0,149.073124085949"
                    Point2="0,153.073124085949"
                    Point3="-4,153.073124085949" />
                  <mssgle:LineSegment
                    End="-687.361111111111,153.073124085949" />
                  <mssgle:CubicBezierSegment
                    Point1="-687.361111111111,153.073124085949"
                    Point2="-691.361111111111,153.073124085949"
                    Point3="-691.361111111111,157.073124085949" />
                  <mssgle:LineSegment
                    End="-691.361111111111,327.722222222222" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-411.766942274306,158.073124085949,132.1727734375,11.43359375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Data Extraction and Type Standardization.Paths[Conditional Split Default Output]"
          TopLeft="272.75,415">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-39.3888888888889,378.111111111111"
              Start="0,0"
              End="-39.3888888888889,370.611111111111">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,258.755178907721" />
                  <mssgle:CubicBezierSegment
                    Point1="0,258.755178907721"
                    Point2="0,262.755178907721"
                    Point3="-4,262.755178907721" />
                  <mssgle:LineSegment
                    End="-35.3888888888889,262.755178907721" />
                  <mssgle:CubicBezierSegment
                    Point1="-35.3888888888889,262.755178907721"
                    Point2="-39.3888888888889,262.755178907721"
                    Point3="-39.3888888888889,266.755178907721" />
                  <mssgle:LineSegment
                    End="-39.3888888888889,370.611111111111" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-81.1274327256944,267.755178907721,122.8659765625,9.7490234375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Data Extraction and Type Standardization.Paths[Case 1]"
          TopLeft="352.25,394">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="563.472222222222,42.8888888888889"
              Start="0,0"
              End="555.972222222222,42.8888888888889">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="277.736111111111,0" />
                  <mssgle:CubicBezierSegment
                    Point1="277.736111111111,0"
                    Point2="281.736111111111,0"
                    Point3="281.736111111111,4" />
                  <mssgle:LineSegment
                    End="281.736111111111,38.8888888888889" />
                  <mssgle:CubicBezierSegment
                    Point1="281.736111111111,38.8888888888889"
                    Point2="281.736111111111,42.8888888888889"
                    Point3="285.736111111111,42.8888888888889" />
                  <mssgle:LineSegment
                    End="555.972222222222,42.8888888888889" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="219.581540798611,-15.7490234375,124.309140625,9.7490234375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <NodeLayout
          Size="142,42"
          Id="Package\Data Extraction and Type Standardization\Check Dates"
          TopLeft="1409.44444444444,530" />
        <EdgeLayout
          Id="Package\Data Extraction and Type Standardization.Paths[Data Conversion Output]"
          TopLeft="1021.72222222222,457.888888888889">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="436.388888888889,72.1111111111111"
              Start="0,0"
              End="436.388888888889,64.6111111111111">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,31.9971734560536" />
                  <mssgle:CubicBezierSegment
                    Point1="0,31.9971734560536"
                    Point2="0,35.9971734560536"
                    Point3="4,35.9971734560536" />
                  <mssgle:LineSegment
                    End="432.388888888889,35.9971734560536" />
                  <mssgle:CubicBezierSegment
                    Point1="432.388888888889,35.9971734560536"
                    Point2="436.388888888889,35.9971734560536"
                    Point3="436.388888888889,39.9971734560536" />
                  <mssgle:LineSegment
                    End="436.388888888889,64.6111111111111" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Data Extraction and Type Standardization.Paths[Invalid Dates]"
          TopLeft="1458.11111111111,572">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-1155.75,221.111111111111"
              Start="0,0"
              End="-1155.75,213.611111111111">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,130.783208870785" />
                  <mssgle:CubicBezierSegment
                    Point1="0,130.783208870785"
                    Point2="0,134.783208870785"
                    Point3="-4,134.783208870785" />
                  <mssgle:LineSegment
                    End="-1151.75,134.783208870785" />
                  <mssgle:CubicBezierSegment
                    Point1="-1151.75,134.783208870785"
                    Point2="-1155.75,134.783208870785"
                    Point3="-1155.75,138.783208870785" />
                  <mssgle:LineSegment
                    End="-1155.75,213.611111111111" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-607.4891796875,139.783208870785,59.228359375,9.7490234375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <NodeLayout
          Size="183,42"
          Id="Package\Data Extraction and Type Standardization\Null Checks on Table"
          TopLeft="1368.33333333333,875.555555555556" />
        <EdgeLayout
          Id="Package\Data Extraction and Type Standardization.Paths[Valid Dates]"
          TopLeft="1502.77777777778,572">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-13.7777777777771,303.555555555556"
              Start="0,0"
              End="-13.7777777777771,296.055555555556">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,148.245031786555" />
                  <mssgle:CubicBezierSegment
                    Point1="0,148.245031786555"
                    Point2="0,152.245031786555"
                    Point3="-4,152.245031786555" />
                  <mssgle:LineSegment
                    End="-9.77777777777715,152.245031786555" />
                  <mssgle:CubicBezierSegment
                    Point1="-9.77777777777715,152.245031786555"
                    Point2="-13.7777777777771,152.245031786555"
                    Point3="-13.7777777777771,156.245031786555" />
                  <mssgle:LineSegment
                    End="-13.7777777777771,296.055555555556" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-32.5896506076386,157.245031786555,51.4015234375,9.7490234375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Data Extraction and Type Standardization.Paths[Nulls]"
          TopLeft="1430.66666666667,875.555555555556">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-1128.30555555556,-40.4444444444446"
              Start="0,0"
              End="-1128.30555555556,-32.9444444444446">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,-20.5945078962211" />
                  <mssgle:CubicBezierSegment
                    Point1="0,-20.5945078962211"
                    Point2="0,-24.5945078962211"
                    Point3="-4,-24.5945078962211" />
                  <mssgle:LineSegment
                    End="-1124.30555555556,-24.5945078962211" />
                  <mssgle:CubicBezierSegment
                    Point1="-1124.30555555556,-24.5945078962211"
                    Point2="-1128.30555555556,-24.5945078962211"
                    Point3="-1128.30555555556,-28.5945078962211" />
                  <mssgle:LineSegment
                    End="-1128.30555555556,-32.9444444444446" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-575.335355902778,-19.5945078962211,22.36515625,9.7490234375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <NodeLayout
          Size="302,42"
          Id="Package\Data Extraction and Type Standardization\PurchaseTotal Rounding Up and error checks"
          TopLeft="690.555555555555,897.777777777778" />
        <EdgeLayout
          Id="Package\Data Extraction and Type Standardization.Paths[Rows without Nulls]"
          TopLeft="1368.33333333333,896.555555555556">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-375.777777777778,22.2222222222219"
              Start="0,0"
              End="-368.277777777778,22.2222222222219">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="-183.888888888889,0" />
                  <mssgle:CubicBezierSegment
                    Point1="-183.888888888889,0"
                    Point2="-187.888888888889,0"
                    Point3="-187.888888888889,4" />
                  <mssgle:LineSegment
                    End="-187.888888888889,18.2222222222219" />
                  <mssgle:CubicBezierSegment
                    Point1="-187.888888888889,18.2222222222219"
                    Point2="-187.888888888889,22.2222222222219"
                    Point3="-191.888888888889,22.2222222222219" />
                  <mssgle:LineSegment
                    End="-368.277777777778,22.2222222222219" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-230.451467013889,-15.7490234375,85.12515625,9.7490234375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <NodeLayout
          Size="168,42"
          Id="Package\Data Extraction and Type Standardization\Conditional Split 1"
          TopLeft="762.777777777778,1040" />
        <EdgeLayout
          Id="Package\Data Extraction and Type Standardization.Paths[Derived Column Output5]"
          TopLeft="844.166666666667,939.777777777778">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,100.222222222222"
              Start="0,0"
              End="0,92.7222222222224">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,92.7222222222224" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <NodeLayout
          Size="172,42"
          Id="Package\Data Extraction and Type Standardization\Email reverification"
          TopLeft="762.777777777778,1148.88888888889" />
        <EdgeLayout
          Id="Package\Data Extraction and Type Standardization.Paths[Invalid PurchaseTotal]"
          TopLeft="820.111111111111,1040">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-533.083333333333,-204.888888888889"
              Start="0,0"
              End="-533.083333333333,-197.388888888889">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,-98.0104804041545" />
                  <mssgle:CubicBezierSegment
                    Point1="0,-98.0104804041545"
                    Point2="0,-102.010480404155"
                    Point3="-4,-102.010480404155" />
                  <mssgle:LineSegment
                    End="-529.083333333333,-102.010480404155" />
                  <mssgle:CubicBezierSegment
                    Point1="-529.083333333333,-102.010480404155"
                    Point2="-533.083333333333,-102.010480404155"
                    Point3="-533.083333333333,-106.010480404155" />
                  <mssgle:LineSegment
                    End="-533.083333333333,-197.388888888889" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-314.360397135417,-97.0104804041545,95.6374609375,9.7490234375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Data Extraction and Type Standardization.Paths[Valid PurchaseTotal]"
          TopLeft="847.777777777778,1082">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,66.8888888888891"
              Start="0,0"
              End="0,59.3888888888891">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,59.3888888888891" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-43.9053125,24.8199327256946,87.810625,9.7490234375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <NodeLayout
          Size="167,42"
          Id="Package\Data Extraction and Type Standardization\Script Component"
          TopLeft="759.444444444444,1240" />
        <EdgeLayout
          Id="Package\Data Extraction and Type Standardization.Paths[Derived Column Output6]"
          TopLeft="845.861111111111,1190.88888888889">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,49.1111111111109"
              Start="0,0"
              End="0,41.6111111111109">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,41.6111111111109" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <NodeLayout
          Size="165,42"
          Id="Package\Data Extraction and Type Standardization\Email Redirection"
          TopLeft="577.222222222222,1328.88888888889" />
        <EdgeLayout
          Id="Package\Data Extraction and Type Standardization.Paths[IsValid]"
          TopLeft="842.944444444444,1282">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-157.055555555556,46.8888888888891"
              Start="0,0"
              End="-157.055555555556,39.3888888888891">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,23.8631452581034" />
                  <mssgle:CubicBezierSegment
                    Point1="0,23.8631452581034"
                    Point2="0,27.8631452581034"
                    Point3="-4,27.8631452581034" />
                  <mssgle:LineSegment
                    End="-153.055555555556,27.8631452581034" />
                  <mssgle:CubicBezierSegment
                    Point1="-153.055555555556,27.8631452581034"
                    Point2="-157.055555555556,27.8631452581034"
                    Point3="-157.055555555556,31.8631452581034" />
                  <mssgle:LineSegment
                    End="-157.055555555556,39.3888888888891" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Data Extraction and Type Standardization.Paths[inValid Email]"
          TopLeft="633.555555555555,1328.88888888889">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-365.694444444444,-493.777777777778"
              Start="0,0"
              End="-365.694444444444,-486.277777777778">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,-196.356409230359" />
                  <mssgle:CubicBezierSegment
                    Point1="0,-196.356409230359"
                    Point2="0,-200.356409230359"
                    Point3="-4,-200.356409230359" />
                  <mssgle:LineSegment
                    End="-361.694444444444,-200.356409230359" />
                  <mssgle:CubicBezierSegment
                    Point1="-361.694444444444,-200.356409230359"
                    Point2="-365.694444444444,-200.356409230359"
                    Point3="-365.694444444444,-204.356409230359" />
                  <mssgle:LineSegment
                    End="-365.694444444444,-486.277777777778" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-211.277944878472,-195.356409230359,56.8614453125,9.7490234375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <NodeLayout
          Size="177,42"
          Id="Package\Data Extraction and Type Standardization\OLE DB Destination"
          TopLeft="895,1433.33333333333" />
        <EdgeLayout
          Id="Package\Data Extraction and Type Standardization.Paths[Valid Email]"
          TopLeft="659.722222222222,1370.88888888889">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="323.777777777778,62.4444444444443"
              Start="0,0"
              End="323.777777777778,54.9444444444443">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,27.2222222222222" />
                  <mssgle:CubicBezierSegment
                    Point1="0,27.2222222222222"
                    Point2="0,31.2222222222222"
                    Point3="4,31.2222222222222" />
                  <mssgle:LineSegment
                    End="319.777777777778,31.2222222222222" />
                  <mssgle:CubicBezierSegment
                    Point1="319.777777777778,31.2222222222222"
                    Point2="323.777777777778,31.2222222222222"
                    Point3="323.777777777778,35.2222222222222" />
                  <mssgle:LineSegment
                    End="323.777777777778,54.9444444444443" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="137.063576388889,36.2222222222222,49.650625,9.7490234375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <NodeLayout
          Size="176,42"
          Id="Package\Data Extraction and Type Standardization\Flat File Destination"
          TopLeft="50,1028.75" />
        <EdgeLayout
          Id="Package\Data Extraction and Type Standardization.Paths[Derived Column Output7]"
          TopLeft="154.25,918.555555555556">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-16.2499999999999,110.194444444444"
              Start="0,0"
              End="-16.2499999999999,102.694444444444">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,51.0972222222221" />
                  <mssgle:CubicBezierSegment
                    Point1="0,51.0972222222221"
                    Point2="0,55.0972222222221"
                    Point3="-4,55.0972222222221" />
                  <mssgle:LineSegment
                    End="-12.2499999999999,55.0972222222221" />
                  <mssgle:CubicBezierSegment
                    Point1="-12.2499999999999,55.0972222222221"
                    Point2="-16.2499999999999,55.0972222222221"
                    Point3="-16.2499999999999,59.0972222222221" />
                  <mssgle:LineSegment
                    End="-16.2499999999999,102.694444444444" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <TaskHost
    design-time-name="Package\Duplicates check and Loading to Production">
    <LayoutInfo>
      <GraphLayout
        Capacity="8" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="96,42"
          Id="Package\Duplicates check and Loading to Production\Stg"
          TopLeft="179.25,2" />
        <NodeLayout
          Size="115,42"
          Id="Package\Duplicates check and Loading to Production\Lookup"
          TopLeft="161,149" />
        <EdgeLayout
          Id="Package\Duplicates check and Loading to Production.Paths[OLE DB Source Output]"
          TopLeft="227.25,44">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-8.75,105"
              Start="0,0"
              End="-8.75,97.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,48.5" />
                  <mssgle:CubicBezierSegment
                    Point1="0,48.5"
                    Point2="0,52.5"
                    Point3="-4,52.5" />
                  <mssgle:LineSegment
                    End="-4.75,52.5" />
                  <mssgle:CubicBezierSegment
                    Point1="-4.75,52.5"
                    Point2="-8.75,52.5"
                    Point3="-8.75,56.5" />
                  <mssgle:LineSegment
                    End="-8.75,97.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <NodeLayout
          Size="177,42"
          Id="Package\Duplicates check and Loading to Production\OLE DB Destination"
          TopLeft="14,342" />
        <EdgeLayout
          Id="Package\Duplicates check and Loading to Production.Paths[Lookup No Match Output]"
          TopLeft="218.5,191">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-116,151"
              Start="0,0"
              End="-116,143.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,71.5" />
                  <mssgle:CubicBezierSegment
                    Point1="0,71.5"
                    Point2="0,75.5"
                    Point3="-4,75.5" />
                  <mssgle:LineSegment
                    End="-112,75.5" />
                  <mssgle:CubicBezierSegment
                    Point1="-112,75.5"
                    Point2="-116,75.5"
                    Point3="-116,79.5" />
                  <mssgle:LineSegment
                    End="-116,143.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-113.80638671875,80.5,111.6127734375,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <NodeLayout
          Size="173,42"
          Id="Package\Duplicates check and Loading to Production\OLE DB Command"
          TopLeft="238,346" />
        <EdgeLayout
          Id="Package\Duplicates check and Loading to Production.Paths[Lookup Match Output]"
          TopLeft="236.333333333333,191">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="88.1666666666667,155"
              Start="0,0"
              End="88.1666666666667,147.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,59.2761578044597" />
                  <mssgle:CubicBezierSegment
                    Point1="0,59.2761578044597"
                    Point2="0,63.2761578044597"
                    Point3="4,63.2761578044597" />
                  <mssgle:LineSegment
                    End="84.1666666666667,63.2761578044597" />
                  <mssgle:CubicBezierSegment
                    Point1="84.1666666666667,63.2761578044597"
                    Point2="88.1666666666667,63.2761578044597"
                    Point3="88.1666666666667,67.2761578044597" />
                  <mssgle:LineSegment
                    End="88.1666666666667,147.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-4.10805338541666,68.2761578044597,96.3827734375,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\Duplicates check and Loading to Production\Stg">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Data Extraction and Type Standardization\OLE DB Destination">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Duplicates check and Loading to Production\Lookup">
    <Properties>
      <Property>
        <Name>OverwriteParamsSQLProp</Name>
        <Value
          type="q2:boolean">false</Value>
      </Property>
      <Property>
        <Name>UsedTableName</Name>
        <Value
          type="q3:string">[prod].[Users]</Value>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q4:int">0</Value>
      </Property>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Duplicates check and Loading to Production\OLE DB Destination">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>